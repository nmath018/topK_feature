#pragma GCC diagnostic ignored "-Wdeprecated-declarations" 
#include "xsim.dir/pfm_top_wrapper_behav/obj/sysc_interface.h"
#include <map>
#include <list>


extern "C" { std::vector<void*> *_glb_hdl_sc_channel_map; } 



extern "C"
    void call_HDL_SC_WRITE_bv_1(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<1, sc_dt::sc_bv<1> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_2(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<2, sc_dt::sc_bv<2> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_3(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<3, sc_dt::sc_bv<3> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_4(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<4, sc_dt::sc_bv<4> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_5(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<5, sc_dt::sc_bv<5> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_6(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<6, sc_dt::sc_bv<6> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_8(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<8, sc_dt::sc_bv<8> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_9(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<9, sc_dt::sc_bv<9> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_10(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<10, sc_dt::sc_bv<10> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_12(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<12, sc_dt::sc_bv<12> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_15(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<15, sc_dt::sc_bv<15> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_16(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<16, sc_dt::sc_bv<16> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_17(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<17, sc_dt::sc_bv<17> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_18(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<18, sc_dt::sc_bv<18> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_20(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<20, sc_dt::sc_bv<20> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_32(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<32, sc_dt::sc_bv<32> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_34(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<34, sc_dt::sc_bv<34> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_39(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<39, sc_dt::sc_bv<39> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_64(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<64, sc_dt::sc_bv<64> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_72(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<72, sc_dt::sc_bv<72> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_96(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<96, sc_dt::sc_bv<96> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_128(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<128, sc_dt::sc_bv<128> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_160(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<160, sc_dt::sc_bv<160> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_192(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<192, sc_dt::sc_bv<192> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_320(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<320, sc_dt::sc_bv<320> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_512(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<512, sc_dt::sc_bv<512> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_int(unsigned int sc_net_index, char* pval)
    {
          int val = *((int*)(pval));
          ((xsim_sc_channel<0, int>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void call_HDL_SC_WRITE_bit(unsigned int sc_net_index, char* pval)
    {
            sc_dt::sc_bit val  =  (sc_dt::sc_bit)((*((int*)(pval)) & 0x1));
          ((xsim_sc_channel<0, sc_dt::sc_bit>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void call_HDL_SC_WRITE_logic(unsigned int sc_net_index, char* pval)
    {
          sc_dt::sc_logic val  =  (sc_dt::sc_logic_value_t) (((*((int*)(pval)+1) & 0x1) << 1) | (*((int*)(pval)) & 0x1));
          ((xsim_sc_channel<0, sc_dt::sc_logic>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void call_HDL_SC_WRITE_bool(unsigned int sc_net_index, char* pval)
    {
          bool val = *((bool*)(pval));
          ((xsim_sc_channel<0, bool>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void implicit_HDL_SCinstantiate()
    {
        _glb_hdl_sc_channel_map = new std::vector<void*> ();
        sc_inst_1 = new pfm_dynamic_auto_cc_1(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m00_couplers.auto_cc");
        sc_inst_1->xsim_set_dbg_index(2124);
        xsim_sc_channel<0, bool > *p_1_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_aclk.bind(*p_1_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_1_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_aresetn.bind(*p_1_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axi_awaddr.bind(*p_1_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->s_axi_awprot.bind(*p_1_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_1_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_awvalid.bind(*p_1_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_awready.bind(*p_1_s_axi_awready);
        p_1_s_axi_awready->set_sv_netview_offsetfromdp(5924320);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axi_wdata.bind(*p_1_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_1_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_1->s_axi_wstrb.bind(*p_1_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_1_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_wvalid.bind(*p_1_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_wready.bind(*p_1_s_axi_wready);
        p_1_s_axi_wready->set_sv_netview_offsetfromdp(5924544);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axi_bresp.bind(*p_1_s_axi_bresp);
        p_1_s_axi_bresp->set_sv_netview_offsetfromdp(5924600);
        xsim_sc_channel<0, bool > *p_1_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_bvalid.bind(*p_1_s_axi_bvalid);
        p_1_s_axi_bvalid->set_sv_netview_offsetfromdp(5924656);
        xsim_sc_channel<0, bool > *p_1_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_bready.bind(*p_1_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axi_araddr.bind(*p_1_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->s_axi_arprot.bind(*p_1_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_1_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_arvalid.bind(*p_1_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_arready.bind(*p_1_s_axi_arready);
        p_1_s_axi_arready->set_sv_netview_offsetfromdp(5924936);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axi_rdata.bind(*p_1_s_axi_rdata);
        p_1_s_axi_rdata->set_sv_netview_offsetfromdp(5924992);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axi_rresp.bind(*p_1_s_axi_rresp);
        p_1_s_axi_rresp->set_sv_netview_offsetfromdp(5925048);
        xsim_sc_channel<0, bool > *p_1_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_rvalid.bind(*p_1_s_axi_rvalid);
        p_1_s_axi_rvalid->set_sv_netview_offsetfromdp(5925104);
        xsim_sc_channel<0, bool > *p_1_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_rready.bind(*p_1_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_rready);
        xsim_sc_channel<0, bool > *p_1_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_aclk.bind(*p_1_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_1_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_aresetn.bind(*p_1_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->m_axi_awaddr.bind(*p_1_m_axi_awaddr);
        p_1_m_axi_awaddr->set_sv_netview_offsetfromdp(5925328);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->m_axi_awprot.bind(*p_1_m_axi_awprot);
        p_1_m_axi_awprot->set_sv_netview_offsetfromdp(5925384);
        xsim_sc_channel<0, bool > *p_1_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_awvalid.bind(*p_1_m_axi_awvalid);
        p_1_m_axi_awvalid->set_sv_netview_offsetfromdp(5925440);
        xsim_sc_channel<0, bool > *p_1_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_awready.bind(*p_1_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->m_axi_wdata.bind(*p_1_m_axi_wdata);
        p_1_m_axi_wdata->set_sv_netview_offsetfromdp(5925552);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_1_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_1->m_axi_wstrb.bind(*p_1_m_axi_wstrb);
        p_1_m_axi_wstrb->set_sv_netview_offsetfromdp(5925608);
        xsim_sc_channel<0, bool > *p_1_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_wvalid.bind(*p_1_m_axi_wvalid);
        p_1_m_axi_wvalid->set_sv_netview_offsetfromdp(5925664);
        xsim_sc_channel<0, bool > *p_1_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_wready.bind(*p_1_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->m_axi_bresp.bind(*p_1_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_1_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_bvalid.bind(*p_1_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_1_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_bready.bind(*p_1_m_axi_bready);
        p_1_m_axi_bready->set_sv_netview_offsetfromdp(5925888);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->m_axi_araddr.bind(*p_1_m_axi_araddr);
        p_1_m_axi_araddr->set_sv_netview_offsetfromdp(5925944);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->m_axi_arprot.bind(*p_1_m_axi_arprot);
        p_1_m_axi_arprot->set_sv_netview_offsetfromdp(5926000);
        xsim_sc_channel<0, bool > *p_1_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_arvalid.bind(*p_1_m_axi_arvalid);
        p_1_m_axi_arvalid->set_sv_netview_offsetfromdp(5926056);
        xsim_sc_channel<0, bool > *p_1_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_arready.bind(*p_1_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->m_axi_rdata.bind(*p_1_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->m_axi_rresp.bind(*p_1_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_1_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_rvalid.bind(*p_1_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_1_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_rready.bind(*p_1_m_axi_rready);
        p_1_m_axi_rready->set_sv_netview_offsetfromdp(5926336);
        sc_inst_2 = new pfm_dynamic_m00_regslice_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m00_couplers.m00_regslice");
        sc_inst_2->xsim_set_dbg_index(2125);
        xsim_sc_channel<0, bool > *p_2_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_2->aclk.bind(*p_2_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_2_aclk);
        xsim_sc_channel<0, bool > *p_2_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_2->aresetn.bind(*p_2_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_2_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->s_axi_awaddr.bind(*p_2_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->s_axi_awprot.bind(*p_2_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_2_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_awvalid.bind(*p_2_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_awready.bind(*p_2_s_axi_awready);
        p_2_s_axi_awready->set_sv_netview_offsetfromdp(5926720);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->s_axi_wdata.bind(*p_2_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_2_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_2->s_axi_wstrb.bind(*p_2_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_2_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_wvalid.bind(*p_2_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_wready.bind(*p_2_s_axi_wready);
        p_2_s_axi_wready->set_sv_netview_offsetfromdp(5926944);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->s_axi_bresp.bind(*p_2_s_axi_bresp);
        p_2_s_axi_bresp->set_sv_netview_offsetfromdp(5927000);
        xsim_sc_channel<0, bool > *p_2_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_bvalid.bind(*p_2_s_axi_bvalid);
        p_2_s_axi_bvalid->set_sv_netview_offsetfromdp(5927056);
        xsim_sc_channel<0, bool > *p_2_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_bready.bind(*p_2_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->s_axi_araddr.bind(*p_2_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->s_axi_arprot.bind(*p_2_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_2_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_arvalid.bind(*p_2_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_arready.bind(*p_2_s_axi_arready);
        p_2_s_axi_arready->set_sv_netview_offsetfromdp(5927336);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->s_axi_rdata.bind(*p_2_s_axi_rdata);
        p_2_s_axi_rdata->set_sv_netview_offsetfromdp(5927392);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->s_axi_rresp.bind(*p_2_s_axi_rresp);
        p_2_s_axi_rresp->set_sv_netview_offsetfromdp(5927448);
        xsim_sc_channel<0, bool > *p_2_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_rvalid.bind(*p_2_s_axi_rvalid);
        p_2_s_axi_rvalid->set_sv_netview_offsetfromdp(5927504);
        xsim_sc_channel<0, bool > *p_2_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_rready.bind(*p_2_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->m_axi_awaddr.bind(*p_2_m_axi_awaddr);
        p_2_m_axi_awaddr->set_sv_netview_offsetfromdp(5927616);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->m_axi_awprot.bind(*p_2_m_axi_awprot);
        p_2_m_axi_awprot->set_sv_netview_offsetfromdp(5927672);
        xsim_sc_channel<0, bool > *p_2_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_awvalid.bind(*p_2_m_axi_awvalid);
        p_2_m_axi_awvalid->set_sv_netview_offsetfromdp(5927728);
        xsim_sc_channel<0, bool > *p_2_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_awready.bind(*p_2_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->m_axi_wdata.bind(*p_2_m_axi_wdata);
        p_2_m_axi_wdata->set_sv_netview_offsetfromdp(5927840);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_2_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_2->m_axi_wstrb.bind(*p_2_m_axi_wstrb);
        p_2_m_axi_wstrb->set_sv_netview_offsetfromdp(5927896);
        xsim_sc_channel<0, bool > *p_2_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_wvalid.bind(*p_2_m_axi_wvalid);
        p_2_m_axi_wvalid->set_sv_netview_offsetfromdp(5927952);
        xsim_sc_channel<0, bool > *p_2_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_wready.bind(*p_2_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->m_axi_bresp.bind(*p_2_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_2_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_bvalid.bind(*p_2_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_2_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_bready.bind(*p_2_m_axi_bready);
        p_2_m_axi_bready->set_sv_netview_offsetfromdp(5928176);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->m_axi_araddr.bind(*p_2_m_axi_araddr);
        p_2_m_axi_araddr->set_sv_netview_offsetfromdp(5928232);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->m_axi_arprot.bind(*p_2_m_axi_arprot);
        p_2_m_axi_arprot->set_sv_netview_offsetfromdp(5928288);
        xsim_sc_channel<0, bool > *p_2_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_arvalid.bind(*p_2_m_axi_arvalid);
        p_2_m_axi_arvalid->set_sv_netview_offsetfromdp(5928344);
        xsim_sc_channel<0, bool > *p_2_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_arready.bind(*p_2_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->m_axi_rdata.bind(*p_2_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->m_axi_rresp.bind(*p_2_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_2_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_rvalid.bind(*p_2_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_2_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_rready.bind(*p_2_m_axi_rready);
        p_2_m_axi_rready->set_sv_netview_offsetfromdp(5928624);
        sc_inst_3 = new pfm_dynamic_auto_cc_2(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m01_couplers.auto_cc");
        sc_inst_3->xsim_set_dbg_index(2166);
        xsim_sc_channel<0, bool > *p_3_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_aclk.bind(*p_3_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_3_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_aresetn.bind(*p_3_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_awaddr.bind(*p_3_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->s_axi_awprot.bind(*p_3_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_3_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awvalid.bind(*p_3_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awready.bind(*p_3_s_axi_awready);
        p_3_s_axi_awready->set_sv_netview_offsetfromdp(5964496);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_wdata.bind(*p_3_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->s_axi_wstrb.bind(*p_3_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_3_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wvalid.bind(*p_3_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wready.bind(*p_3_s_axi_wready);
        p_3_s_axi_wready->set_sv_netview_offsetfromdp(5964720);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_bresp.bind(*p_3_s_axi_bresp);
        p_3_s_axi_bresp->set_sv_netview_offsetfromdp(5964776);
        xsim_sc_channel<0, bool > *p_3_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bvalid.bind(*p_3_s_axi_bvalid);
        p_3_s_axi_bvalid->set_sv_netview_offsetfromdp(5964832);
        xsim_sc_channel<0, bool > *p_3_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bready.bind(*p_3_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_araddr.bind(*p_3_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->s_axi_arprot.bind(*p_3_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_3_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arvalid.bind(*p_3_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arready.bind(*p_3_s_axi_arready);
        p_3_s_axi_arready->set_sv_netview_offsetfromdp(5965112);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_rdata.bind(*p_3_s_axi_rdata);
        p_3_s_axi_rdata->set_sv_netview_offsetfromdp(5965168);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_rresp.bind(*p_3_s_axi_rresp);
        p_3_s_axi_rresp->set_sv_netview_offsetfromdp(5965224);
        xsim_sc_channel<0, bool > *p_3_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rvalid.bind(*p_3_s_axi_rvalid);
        p_3_s_axi_rvalid->set_sv_netview_offsetfromdp(5965280);
        xsim_sc_channel<0, bool > *p_3_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rready.bind(*p_3_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_rready);
        xsim_sc_channel<0, bool > *p_3_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_aclk.bind(*p_3_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_3_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_aresetn.bind(*p_3_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axi_awaddr.bind(*p_3_m_axi_awaddr);
        p_3_m_axi_awaddr->set_sv_netview_offsetfromdp(5965504);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->m_axi_awprot.bind(*p_3_m_axi_awprot);
        p_3_m_axi_awprot->set_sv_netview_offsetfromdp(5965560);
        xsim_sc_channel<0, bool > *p_3_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_awvalid.bind(*p_3_m_axi_awvalid);
        p_3_m_axi_awvalid->set_sv_netview_offsetfromdp(5965616);
        xsim_sc_channel<0, bool > *p_3_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_awready.bind(*p_3_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->m_axi_wdata.bind(*p_3_m_axi_wdata);
        p_3_m_axi_wdata->set_sv_netview_offsetfromdp(5965728);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->m_axi_wstrb.bind(*p_3_m_axi_wstrb);
        p_3_m_axi_wstrb->set_sv_netview_offsetfromdp(5965784);
        xsim_sc_channel<0, bool > *p_3_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_wvalid.bind(*p_3_m_axi_wvalid);
        p_3_m_axi_wvalid->set_sv_netview_offsetfromdp(5965840);
        xsim_sc_channel<0, bool > *p_3_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_wready.bind(*p_3_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->m_axi_bresp.bind(*p_3_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_3_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_bvalid.bind(*p_3_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_3_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_bready.bind(*p_3_m_axi_bready);
        p_3_m_axi_bready->set_sv_netview_offsetfromdp(5966064);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axi_araddr.bind(*p_3_m_axi_araddr);
        p_3_m_axi_araddr->set_sv_netview_offsetfromdp(5966120);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->m_axi_arprot.bind(*p_3_m_axi_arprot);
        p_3_m_axi_arprot->set_sv_netview_offsetfromdp(5966176);
        xsim_sc_channel<0, bool > *p_3_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_arvalid.bind(*p_3_m_axi_arvalid);
        p_3_m_axi_arvalid->set_sv_netview_offsetfromdp(5966232);
        xsim_sc_channel<0, bool > *p_3_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_arready.bind(*p_3_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->m_axi_rdata.bind(*p_3_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->m_axi_rresp.bind(*p_3_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_3_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_rvalid.bind(*p_3_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_3_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_rready.bind(*p_3_m_axi_rready);
        p_3_m_axi_rready->set_sv_netview_offsetfromdp(5966512);
        sc_inst_4 = new pfm_dynamic_m01_regslice_8(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m01_couplers.m01_regslice");
        sc_inst_4->xsim_set_dbg_index(2167);
        xsim_sc_channel<0, bool > *p_4_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_4->aclk.bind(*p_4_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_4_aclk);
        xsim_sc_channel<0, bool > *p_4_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_4->aresetn.bind(*p_4_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_4_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->s_axi_awaddr.bind(*p_4_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->s_axi_awprot.bind(*p_4_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_4_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_awvalid.bind(*p_4_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_awready.bind(*p_4_s_axi_awready);
        p_4_s_axi_awready->set_sv_netview_offsetfromdp(5966896);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->s_axi_wdata.bind(*p_4_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->s_axi_wstrb.bind(*p_4_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_4_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_wvalid.bind(*p_4_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_wready.bind(*p_4_s_axi_wready);
        p_4_s_axi_wready->set_sv_netview_offsetfromdp(5967120);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->s_axi_bresp.bind(*p_4_s_axi_bresp);
        p_4_s_axi_bresp->set_sv_netview_offsetfromdp(5967176);
        xsim_sc_channel<0, bool > *p_4_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_bvalid.bind(*p_4_s_axi_bvalid);
        p_4_s_axi_bvalid->set_sv_netview_offsetfromdp(5967232);
        xsim_sc_channel<0, bool > *p_4_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_bready.bind(*p_4_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->s_axi_araddr.bind(*p_4_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->s_axi_arprot.bind(*p_4_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_4_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_arvalid.bind(*p_4_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_arready.bind(*p_4_s_axi_arready);
        p_4_s_axi_arready->set_sv_netview_offsetfromdp(5967512);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->s_axi_rdata.bind(*p_4_s_axi_rdata);
        p_4_s_axi_rdata->set_sv_netview_offsetfromdp(5967568);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->s_axi_rresp.bind(*p_4_s_axi_rresp);
        p_4_s_axi_rresp->set_sv_netview_offsetfromdp(5967624);
        xsim_sc_channel<0, bool > *p_4_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_rvalid.bind(*p_4_s_axi_rvalid);
        p_4_s_axi_rvalid->set_sv_netview_offsetfromdp(5967680);
        xsim_sc_channel<0, bool > *p_4_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_rready.bind(*p_4_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->m_axi_awaddr.bind(*p_4_m_axi_awaddr);
        p_4_m_axi_awaddr->set_sv_netview_offsetfromdp(5967792);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->m_axi_awprot.bind(*p_4_m_axi_awprot);
        p_4_m_axi_awprot->set_sv_netview_offsetfromdp(5967848);
        xsim_sc_channel<0, bool > *p_4_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_awvalid.bind(*p_4_m_axi_awvalid);
        p_4_m_axi_awvalid->set_sv_netview_offsetfromdp(5967904);
        xsim_sc_channel<0, bool > *p_4_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_awready.bind(*p_4_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->m_axi_wdata.bind(*p_4_m_axi_wdata);
        p_4_m_axi_wdata->set_sv_netview_offsetfromdp(5968016);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->m_axi_wstrb.bind(*p_4_m_axi_wstrb);
        p_4_m_axi_wstrb->set_sv_netview_offsetfromdp(5968072);
        xsim_sc_channel<0, bool > *p_4_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_wvalid.bind(*p_4_m_axi_wvalid);
        p_4_m_axi_wvalid->set_sv_netview_offsetfromdp(5968128);
        xsim_sc_channel<0, bool > *p_4_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_wready.bind(*p_4_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->m_axi_bresp.bind(*p_4_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_4_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_bvalid.bind(*p_4_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_4_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_bready.bind(*p_4_m_axi_bready);
        p_4_m_axi_bready->set_sv_netview_offsetfromdp(5968352);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->m_axi_araddr.bind(*p_4_m_axi_araddr);
        p_4_m_axi_araddr->set_sv_netview_offsetfromdp(5968408);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->m_axi_arprot.bind(*p_4_m_axi_arprot);
        p_4_m_axi_arprot->set_sv_netview_offsetfromdp(5968464);
        xsim_sc_channel<0, bool > *p_4_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_arvalid.bind(*p_4_m_axi_arvalid);
        p_4_m_axi_arvalid->set_sv_netview_offsetfromdp(5968520);
        xsim_sc_channel<0, bool > *p_4_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_arready.bind(*p_4_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->m_axi_rdata.bind(*p_4_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->m_axi_rresp.bind(*p_4_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_4_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_rvalid.bind(*p_4_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_4_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_rready.bind(*p_4_m_axi_rready);
        p_4_m_axi_rready->set_sv_netview_offsetfromdp(5968800);
        sc_inst_5 = new pfm_dynamic_auto_cc_3(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m02_couplers.auto_cc");
        sc_inst_5->xsim_set_dbg_index(2208);
        xsim_sc_channel<0, bool > *p_5_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_aclk.bind(*p_5_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_5_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_aresetn.bind(*p_5_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->s_axi_awaddr.bind(*p_5_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->s_axi_awprot.bind(*p_5_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_5_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_awvalid.bind(*p_5_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_5_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_awready.bind(*p_5_s_axi_awready);
        p_5_s_axi_awready->set_sv_netview_offsetfromdp(6004672);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->s_axi_wdata.bind(*p_5_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->s_axi_wstrb.bind(*p_5_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_5_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_wvalid.bind(*p_5_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_5_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_wready.bind(*p_5_s_axi_wready);
        p_5_s_axi_wready->set_sv_netview_offsetfromdp(6004896);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->s_axi_bresp.bind(*p_5_s_axi_bresp);
        p_5_s_axi_bresp->set_sv_netview_offsetfromdp(6004952);
        xsim_sc_channel<0, bool > *p_5_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_bvalid.bind(*p_5_s_axi_bvalid);
        p_5_s_axi_bvalid->set_sv_netview_offsetfromdp(6005008);
        xsim_sc_channel<0, bool > *p_5_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_bready.bind(*p_5_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->s_axi_araddr.bind(*p_5_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->s_axi_arprot.bind(*p_5_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_5_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_arvalid.bind(*p_5_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_5_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_arready.bind(*p_5_s_axi_arready);
        p_5_s_axi_arready->set_sv_netview_offsetfromdp(6005288);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->s_axi_rdata.bind(*p_5_s_axi_rdata);
        p_5_s_axi_rdata->set_sv_netview_offsetfromdp(6005344);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->s_axi_rresp.bind(*p_5_s_axi_rresp);
        p_5_s_axi_rresp->set_sv_netview_offsetfromdp(6005400);
        xsim_sc_channel<0, bool > *p_5_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_rvalid.bind(*p_5_s_axi_rvalid);
        p_5_s_axi_rvalid->set_sv_netview_offsetfromdp(6005456);
        xsim_sc_channel<0, bool > *p_5_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_rready.bind(*p_5_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_rready);
        xsim_sc_channel<0, bool > *p_5_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_aclk.bind(*p_5_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_5_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_aresetn.bind(*p_5_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->m_axi_awaddr.bind(*p_5_m_axi_awaddr);
        p_5_m_axi_awaddr->set_sv_netview_offsetfromdp(6005680);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->m_axi_awprot.bind(*p_5_m_axi_awprot);
        p_5_m_axi_awprot->set_sv_netview_offsetfromdp(6005736);
        xsim_sc_channel<0, bool > *p_5_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_awvalid.bind(*p_5_m_axi_awvalid);
        p_5_m_axi_awvalid->set_sv_netview_offsetfromdp(6005792);
        xsim_sc_channel<0, bool > *p_5_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_awready.bind(*p_5_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->m_axi_wdata.bind(*p_5_m_axi_wdata);
        p_5_m_axi_wdata->set_sv_netview_offsetfromdp(6005904);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->m_axi_wstrb.bind(*p_5_m_axi_wstrb);
        p_5_m_axi_wstrb->set_sv_netview_offsetfromdp(6005960);
        xsim_sc_channel<0, bool > *p_5_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_wvalid.bind(*p_5_m_axi_wvalid);
        p_5_m_axi_wvalid->set_sv_netview_offsetfromdp(6006016);
        xsim_sc_channel<0, bool > *p_5_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_wready.bind(*p_5_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->m_axi_bresp.bind(*p_5_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_5_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_bvalid.bind(*p_5_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_5_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_bready.bind(*p_5_m_axi_bready);
        p_5_m_axi_bready->set_sv_netview_offsetfromdp(6006240);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->m_axi_araddr.bind(*p_5_m_axi_araddr);
        p_5_m_axi_araddr->set_sv_netview_offsetfromdp(6006296);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->m_axi_arprot.bind(*p_5_m_axi_arprot);
        p_5_m_axi_arprot->set_sv_netview_offsetfromdp(6006352);
        xsim_sc_channel<0, bool > *p_5_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_arvalid.bind(*p_5_m_axi_arvalid);
        p_5_m_axi_arvalid->set_sv_netview_offsetfromdp(6006408);
        xsim_sc_channel<0, bool > *p_5_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_arready.bind(*p_5_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->m_axi_rdata.bind(*p_5_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->m_axi_rresp.bind(*p_5_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_5_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_rvalid.bind(*p_5_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_5_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_rready.bind(*p_5_m_axi_rready);
        p_5_m_axi_rready->set_sv_netview_offsetfromdp(6006688);
        sc_inst_6 = new pfm_dynamic_m02_regslice_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m02_couplers.m02_regslice");
        sc_inst_6->xsim_set_dbg_index(2209);
        xsim_sc_channel<0, bool > *p_6_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_6->aclk.bind(*p_6_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_6_aclk);
        xsim_sc_channel<0, bool > *p_6_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_6->aresetn.bind(*p_6_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_6_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->s_axi_awaddr.bind(*p_6_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->s_axi_awprot.bind(*p_6_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_6_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_awvalid.bind(*p_6_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_6_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_awready.bind(*p_6_s_axi_awready);
        p_6_s_axi_awready->set_sv_netview_offsetfromdp(6007072);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->s_axi_wdata.bind(*p_6_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->s_axi_wstrb.bind(*p_6_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_6_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_wvalid.bind(*p_6_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_6_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_wready.bind(*p_6_s_axi_wready);
        p_6_s_axi_wready->set_sv_netview_offsetfromdp(6007296);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->s_axi_bresp.bind(*p_6_s_axi_bresp);
        p_6_s_axi_bresp->set_sv_netview_offsetfromdp(6007352);
        xsim_sc_channel<0, bool > *p_6_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_bvalid.bind(*p_6_s_axi_bvalid);
        p_6_s_axi_bvalid->set_sv_netview_offsetfromdp(6007408);
        xsim_sc_channel<0, bool > *p_6_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_bready.bind(*p_6_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->s_axi_araddr.bind(*p_6_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->s_axi_arprot.bind(*p_6_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_6_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_arvalid.bind(*p_6_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_6_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_arready.bind(*p_6_s_axi_arready);
        p_6_s_axi_arready->set_sv_netview_offsetfromdp(6007688);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->s_axi_rdata.bind(*p_6_s_axi_rdata);
        p_6_s_axi_rdata->set_sv_netview_offsetfromdp(6007744);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->s_axi_rresp.bind(*p_6_s_axi_rresp);
        p_6_s_axi_rresp->set_sv_netview_offsetfromdp(6007800);
        xsim_sc_channel<0, bool > *p_6_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_rvalid.bind(*p_6_s_axi_rvalid);
        p_6_s_axi_rvalid->set_sv_netview_offsetfromdp(6007856);
        xsim_sc_channel<0, bool > *p_6_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_rready.bind(*p_6_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->m_axi_awaddr.bind(*p_6_m_axi_awaddr);
        p_6_m_axi_awaddr->set_sv_netview_offsetfromdp(6007968);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->m_axi_awprot.bind(*p_6_m_axi_awprot);
        p_6_m_axi_awprot->set_sv_netview_offsetfromdp(6008024);
        xsim_sc_channel<0, bool > *p_6_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_awvalid.bind(*p_6_m_axi_awvalid);
        p_6_m_axi_awvalid->set_sv_netview_offsetfromdp(6008080);
        xsim_sc_channel<0, bool > *p_6_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_awready.bind(*p_6_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->m_axi_wdata.bind(*p_6_m_axi_wdata);
        p_6_m_axi_wdata->set_sv_netview_offsetfromdp(6008192);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->m_axi_wstrb.bind(*p_6_m_axi_wstrb);
        p_6_m_axi_wstrb->set_sv_netview_offsetfromdp(6008248);
        xsim_sc_channel<0, bool > *p_6_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_wvalid.bind(*p_6_m_axi_wvalid);
        p_6_m_axi_wvalid->set_sv_netview_offsetfromdp(6008304);
        xsim_sc_channel<0, bool > *p_6_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_wready.bind(*p_6_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->m_axi_bresp.bind(*p_6_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_6_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_bvalid.bind(*p_6_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_6_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_bready.bind(*p_6_m_axi_bready);
        p_6_m_axi_bready->set_sv_netview_offsetfromdp(6008528);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->m_axi_araddr.bind(*p_6_m_axi_araddr);
        p_6_m_axi_araddr->set_sv_netview_offsetfromdp(6008584);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->m_axi_arprot.bind(*p_6_m_axi_arprot);
        p_6_m_axi_arprot->set_sv_netview_offsetfromdp(6008640);
        xsim_sc_channel<0, bool > *p_6_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_arvalid.bind(*p_6_m_axi_arvalid);
        p_6_m_axi_arvalid->set_sv_netview_offsetfromdp(6008696);
        xsim_sc_channel<0, bool > *p_6_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_arready.bind(*p_6_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->m_axi_rdata.bind(*p_6_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->m_axi_rresp.bind(*p_6_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_6_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_rvalid.bind(*p_6_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_6_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_rready.bind(*p_6_m_axi_rready);
        p_6_m_axi_rready->set_sv_netview_offsetfromdp(6008976);
        sc_inst_7 = new pfm_dynamic_s00_regslice_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.s00_couplers.s00_regslice");
        sc_inst_7->xsim_set_dbg_index(2250);
        xsim_sc_channel<0, bool > *p_7_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_7->aclk.bind(*p_7_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_7_aclk);
        xsim_sc_channel<0, bool > *p_7_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_7->aresetn.bind(*p_7_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_7_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_7_s_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_7->s_axi_awaddr.bind(*p_7_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->s_axi_awprot.bind(*p_7_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_7_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_awvalid.bind(*p_7_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_7_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_awready.bind(*p_7_s_axi_awready);
        p_7_s_axi_awready->set_sv_netview_offsetfromdp(6032616);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_axi_wdata.bind(*p_7_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->s_axi_wstrb.bind(*p_7_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_7_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_wvalid.bind(*p_7_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_7_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_wready.bind(*p_7_s_axi_wready);
        p_7_s_axi_wready->set_sv_netview_offsetfromdp(6032840);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->s_axi_bresp.bind(*p_7_s_axi_bresp);
        p_7_s_axi_bresp->set_sv_netview_offsetfromdp(6032896);
        xsim_sc_channel<0, bool > *p_7_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_bvalid.bind(*p_7_s_axi_bvalid);
        p_7_s_axi_bvalid->set_sv_netview_offsetfromdp(6032952);
        xsim_sc_channel<0, bool > *p_7_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_bready.bind(*p_7_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_7_s_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_7->s_axi_araddr.bind(*p_7_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->s_axi_arprot.bind(*p_7_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_7_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_arvalid.bind(*p_7_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_7_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_arready.bind(*p_7_s_axi_arready);
        p_7_s_axi_arready->set_sv_netview_offsetfromdp(6033232);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_axi_rdata.bind(*p_7_s_axi_rdata);
        p_7_s_axi_rdata->set_sv_netview_offsetfromdp(6033288);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->s_axi_rresp.bind(*p_7_s_axi_rresp);
        p_7_s_axi_rresp->set_sv_netview_offsetfromdp(6033344);
        xsim_sc_channel<0, bool > *p_7_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_rvalid.bind(*p_7_s_axi_rvalid);
        p_7_s_axi_rvalid->set_sv_netview_offsetfromdp(6033400);
        xsim_sc_channel<0, bool > *p_7_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_rready.bind(*p_7_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_7_m_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_7->m_axi_awaddr.bind(*p_7_m_axi_awaddr);
        p_7_m_axi_awaddr->set_sv_netview_offsetfromdp(6033512);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->m_axi_awprot.bind(*p_7_m_axi_awprot);
        p_7_m_axi_awprot->set_sv_netview_offsetfromdp(6033568);
        xsim_sc_channel<0, bool > *p_7_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_awvalid.bind(*p_7_m_axi_awvalid);
        p_7_m_axi_awvalid->set_sv_netview_offsetfromdp(6033624);
        xsim_sc_channel<0, bool > *p_7_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_awready.bind(*p_7_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->m_axi_wdata.bind(*p_7_m_axi_wdata);
        p_7_m_axi_wdata->set_sv_netview_offsetfromdp(6033736);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->m_axi_wstrb.bind(*p_7_m_axi_wstrb);
        p_7_m_axi_wstrb->set_sv_netview_offsetfromdp(6033792);
        xsim_sc_channel<0, bool > *p_7_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_wvalid.bind(*p_7_m_axi_wvalid);
        p_7_m_axi_wvalid->set_sv_netview_offsetfromdp(6033848);
        xsim_sc_channel<0, bool > *p_7_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_wready.bind(*p_7_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->m_axi_bresp.bind(*p_7_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_7_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_bvalid.bind(*p_7_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_7_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_bready.bind(*p_7_m_axi_bready);
        p_7_m_axi_bready->set_sv_netview_offsetfromdp(6034072);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_7_m_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_7->m_axi_araddr.bind(*p_7_m_axi_araddr);
        p_7_m_axi_araddr->set_sv_netview_offsetfromdp(6034128);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->m_axi_arprot.bind(*p_7_m_axi_arprot);
        p_7_m_axi_arprot->set_sv_netview_offsetfromdp(6034184);
        xsim_sc_channel<0, bool > *p_7_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_arvalid.bind(*p_7_m_axi_arvalid);
        p_7_m_axi_arvalid->set_sv_netview_offsetfromdp(6034240);
        xsim_sc_channel<0, bool > *p_7_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_arready.bind(*p_7_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->m_axi_rdata.bind(*p_7_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->m_axi_rresp.bind(*p_7_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_7_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_rvalid.bind(*p_7_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_7_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_rready.bind(*p_7_m_axi_rready);
        p_7_m_axi_rready->set_sv_netview_offsetfromdp(6034520);
        sc_inst_8 = new pfm_dynamic_xbar_6(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.xbar");
        sc_inst_8->xsim_set_dbg_index(1153);
        xsim_sc_channel<0, bool > *p_8_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_8->aclk.bind(*p_8_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_8_aclk);
        xsim_sc_channel<0, bool > *p_8_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_8->aresetn.bind(*p_8_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_8_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_8_s_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_8->s_axi_awaddr.bind(*p_8_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s_axi_awprot.bind(*p_8_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_awprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s_axi_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s_axi_awvalid.bind(*p_8_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s_axi_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s_axi_awready.bind(*p_8_s_axi_awready);
        p_8_s_axi_awready->set_sv_netview_offsetfromdp(6034904);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_axi_wdata.bind(*p_8_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_axi_wstrb.bind(*p_8_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s_axi_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s_axi_wvalid.bind(*p_8_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s_axi_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s_axi_wready.bind(*p_8_s_axi_wready);
        p_8_s_axi_wready->set_sv_netview_offsetfromdp(6035128);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s_axi_bresp.bind(*p_8_s_axi_bresp);
        p_8_s_axi_bresp->set_sv_netview_offsetfromdp(6035184);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s_axi_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s_axi_bvalid.bind(*p_8_s_axi_bvalid);
        p_8_s_axi_bvalid->set_sv_netview_offsetfromdp(6035240);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s_axi_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s_axi_bready.bind(*p_8_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_8_s_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_8->s_axi_araddr.bind(*p_8_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s_axi_arprot.bind(*p_8_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_arprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s_axi_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s_axi_arvalid.bind(*p_8_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s_axi_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s_axi_arready.bind(*p_8_s_axi_arready);
        p_8_s_axi_arready->set_sv_netview_offsetfromdp(6035520);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_axi_rdata.bind(*p_8_s_axi_rdata);
        p_8_s_axi_rdata->set_sv_netview_offsetfromdp(6035576);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s_axi_rresp.bind(*p_8_s_axi_rresp);
        p_8_s_axi_rresp->set_sv_netview_offsetfromdp(6035632);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s_axi_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s_axi_rvalid.bind(*p_8_s_axi_rvalid);
        p_8_s_axi_rvalid->set_sv_netview_offsetfromdp(6035688);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s_axi_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s_axi_rready.bind(*p_8_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_rready);
        xsim_sc_channel<192, sc_dt::sc_bv<192> > *p_8_m_axi_awaddr = new xsim_sc_channel<192, sc_dt::sc_bv<192> >();
        sc_inst_8->m_axi_awaddr.bind(*p_8_m_axi_awaddr);
        p_8_m_axi_awaddr->set_sv_netview_offsetfromdp(6035800);
        xsim_sc_channel<9, sc_dt::sc_bv<9> > *p_8_m_axi_awprot = new xsim_sc_channel<9, sc_dt::sc_bv<9> >();
        sc_inst_8->m_axi_awprot.bind(*p_8_m_axi_awprot);
        p_8_m_axi_awprot->set_sv_netview_offsetfromdp(6035856);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m_axi_awvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m_axi_awvalid.bind(*p_8_m_axi_awvalid);
        p_8_m_axi_awvalid->set_sv_netview_offsetfromdp(6035912);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m_axi_awready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m_axi_awready.bind(*p_8_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_awready);
        xsim_sc_channel<96, sc_dt::sc_bv<96> > *p_8_m_axi_wdata = new xsim_sc_channel<96, sc_dt::sc_bv<96> >();
        sc_inst_8->m_axi_wdata.bind(*p_8_m_axi_wdata);
        p_8_m_axi_wdata->set_sv_netview_offsetfromdp(6036024);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_8_m_axi_wstrb = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_8->m_axi_wstrb.bind(*p_8_m_axi_wstrb);
        p_8_m_axi_wstrb->set_sv_netview_offsetfromdp(6036080);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m_axi_wvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m_axi_wvalid.bind(*p_8_m_axi_wvalid);
        p_8_m_axi_wvalid->set_sv_netview_offsetfromdp(6036136);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m_axi_wready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m_axi_wready.bind(*p_8_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_wready);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_8_m_axi_bresp = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_8->m_axi_bresp.bind(*p_8_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_bresp);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m_axi_bvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m_axi_bvalid.bind(*p_8_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_bvalid);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m_axi_bready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m_axi_bready.bind(*p_8_m_axi_bready);
        p_8_m_axi_bready->set_sv_netview_offsetfromdp(6036360);
        xsim_sc_channel<192, sc_dt::sc_bv<192> > *p_8_m_axi_araddr = new xsim_sc_channel<192, sc_dt::sc_bv<192> >();
        sc_inst_8->m_axi_araddr.bind(*p_8_m_axi_araddr);
        p_8_m_axi_araddr->set_sv_netview_offsetfromdp(6036416);
        xsim_sc_channel<9, sc_dt::sc_bv<9> > *p_8_m_axi_arprot = new xsim_sc_channel<9, sc_dt::sc_bv<9> >();
        sc_inst_8->m_axi_arprot.bind(*p_8_m_axi_arprot);
        p_8_m_axi_arprot->set_sv_netview_offsetfromdp(6036472);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m_axi_arvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m_axi_arvalid.bind(*p_8_m_axi_arvalid);
        p_8_m_axi_arvalid->set_sv_netview_offsetfromdp(6036528);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m_axi_arready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m_axi_arready.bind(*p_8_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_arready);
        xsim_sc_channel<96, sc_dt::sc_bv<96> > *p_8_m_axi_rdata = new xsim_sc_channel<96, sc_dt::sc_bv<96> >();
        sc_inst_8->m_axi_rdata.bind(*p_8_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_rdata);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_8_m_axi_rresp = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_8->m_axi_rresp.bind(*p_8_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_rresp);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m_axi_rvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m_axi_rvalid.bind(*p_8_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_rvalid);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m_axi_rready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m_axi_rready.bind(*p_8_m_axi_rready);
        p_8_m_axi_rready->set_sv_netview_offsetfromdp(6036808);
        sc_inst_9 = new pfm_dynamic_dpa_hub_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_hub");
        sc_inst_9->xsim_set_dbg_index(758);
        xsim_sc_channel<0, bool > *p_9_s_aximm_clk = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_aximm_clk.bind(*p_9_s_aximm_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_aximm_clk);
        xsim_sc_channel<0, bool > *p_9_s_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_aximm_aresetn.bind(*p_9_s_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_9_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_9->trace_clk.bind(*p_9_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_9_trace_clk);
        xsim_sc_channel<0, bool > *p_9_trace_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_9->trace_aresetn.bind(*p_9_trace_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_9_trace_aresetn);
        xsim_sc_channel<0, bool > *p_9_axilite_clk = new xsim_sc_channel<0, bool >();
        sc_inst_9->axilite_clk.bind(*p_9_axilite_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_9_axilite_clk);
        xsim_sc_channel<0, bool > *p_9_axilite_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_9->axilite_aresetn.bind(*p_9_axilite_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_9_axilite_aresetn);
        xsim_sc_channel<0, bool > *p_9_trace_tready0 = new xsim_sc_channel<0, bool >();
        sc_inst_9->trace_tready0.bind(*p_9_trace_tready0);
        p_9_trace_tready0->set_sv_netview_offsetfromdp(6037248);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_9_trace_tdata0 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_9->trace_tdata0.bind(*p_9_trace_tdata0);
        (*_glb_hdl_sc_channel_map).push_back(p_9_trace_tdata0);
        xsim_sc_channel<0, bool > *p_9_trace_tlast0 = new xsim_sc_channel<0, bool >();
        sc_inst_9->trace_tlast0.bind(*p_9_trace_tlast0);
        (*_glb_hdl_sc_channel_map).push_back(p_9_trace_tlast0);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_trace_tid0 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->trace_tid0.bind(*p_9_trace_tid0);
        (*_glb_hdl_sc_channel_map).push_back(p_9_trace_tid0);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_trace_tdest0 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->trace_tdest0.bind(*p_9_trace_tdest0);
        (*_glb_hdl_sc_channel_map).push_back(p_9_trace_tdest0);
        xsim_sc_channel<0, bool > *p_9_trace_tvalid0 = new xsim_sc_channel<0, bool >();
        sc_inst_9->trace_tvalid0.bind(*p_9_trace_tvalid0);
        (*_glb_hdl_sc_channel_map).push_back(p_9_trace_tvalid0);
        xsim_sc_channel<0, bool > *p_9_trace_tready1 = new xsim_sc_channel<0, bool >();
        sc_inst_9->trace_tready1.bind(*p_9_trace_tready1);
        p_9_trace_tready1->set_sv_netview_offsetfromdp(6037584);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_9_trace_tdata1 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_9->trace_tdata1.bind(*p_9_trace_tdata1);
        p_9_trace_tdata1->set_sv_netview_offsetfromdp(6037640);
        xsim_sc_channel<0, bool > *p_9_trace_tlast1 = new xsim_sc_channel<0, bool >();
        sc_inst_9->trace_tlast1.bind(*p_9_trace_tlast1);
        (*_glb_hdl_sc_channel_map).push_back(p_9_trace_tlast1);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_trace_tid1 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->trace_tid1.bind(*p_9_trace_tid1);
        (*_glb_hdl_sc_channel_map).push_back(p_9_trace_tid1);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_trace_tdest1 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->trace_tdest1.bind(*p_9_trace_tdest1);
        (*_glb_hdl_sc_channel_map).push_back(p_9_trace_tdest1);
        xsim_sc_channel<0, bool > *p_9_trace_tvalid1 = new xsim_sc_channel<0, bool >();
        sc_inst_9->trace_tvalid1.bind(*p_9_trace_tvalid1);
        (*_glb_hdl_sc_channel_map).push_back(p_9_trace_tvalid1);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->s_axi_awaddr.bind(*p_9_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_9_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_awvalid.bind(*p_9_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_9_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_awready.bind(*p_9_s_axi_awready);
        p_9_s_axi_awready->set_sv_netview_offsetfromdp(6038032);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_axi_wdata.bind(*p_9_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_axi_wstrb.bind(*p_9_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_9_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_wvalid.bind(*p_9_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_9_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_wready.bind(*p_9_s_axi_wready);
        p_9_s_axi_wready->set_sv_netview_offsetfromdp(6038256);
        xsim_sc_channel<0, bool > *p_9_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_bvalid.bind(*p_9_s_axi_bvalid);
        p_9_s_axi_bvalid->set_sv_netview_offsetfromdp(6038312);
        xsim_sc_channel<0, bool > *p_9_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_bready.bind(*p_9_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_axi_bresp.bind(*p_9_s_axi_bresp);
        p_9_s_axi_bresp->set_sv_netview_offsetfromdp(6038424);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->s_axi_araddr.bind(*p_9_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_9_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_arvalid.bind(*p_9_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_9_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_arready.bind(*p_9_s_axi_arready);
        p_9_s_axi_arready->set_sv_netview_offsetfromdp(6038592);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_axi_rdata.bind(*p_9_s_axi_rdata);
        p_9_s_axi_rdata->set_sv_netview_offsetfromdp(6038648);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_axi_rresp.bind(*p_9_s_axi_rresp);
        p_9_s_axi_rresp->set_sv_netview_offsetfromdp(6038704);
        xsim_sc_channel<0, bool > *p_9_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_rvalid.bind(*p_9_s_axi_rvalid);
        p_9_s_axi_rvalid->set_sv_netview_offsetfromdp(6038760);
        xsim_sc_channel<0, bool > *p_9_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_rready.bind(*p_9_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_s_axihub_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->s_axihub_awaddr.bind(*p_9_s_axihub_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axihub_awaddr);
        xsim_sc_channel<0, bool > *p_9_s_axihub_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axihub_awvalid.bind(*p_9_s_axihub_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axihub_awvalid);
        xsim_sc_channel<0, bool > *p_9_s_axihub_awready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axihub_awready.bind(*p_9_s_axihub_awready);
        p_9_s_axihub_awready->set_sv_netview_offsetfromdp(6038984);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_axihub_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_axihub_wdata.bind(*p_9_s_axihub_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axihub_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_axihub_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_axihub_wstrb.bind(*p_9_s_axihub_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axihub_wstrb);
        xsim_sc_channel<0, bool > *p_9_s_axihub_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axihub_wvalid.bind(*p_9_s_axihub_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axihub_wvalid);
        xsim_sc_channel<0, bool > *p_9_s_axihub_wready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axihub_wready.bind(*p_9_s_axihub_wready);
        p_9_s_axihub_wready->set_sv_netview_offsetfromdp(6039208);
        xsim_sc_channel<0, bool > *p_9_s_axihub_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axihub_bvalid.bind(*p_9_s_axihub_bvalid);
        p_9_s_axihub_bvalid->set_sv_netview_offsetfromdp(6039264);
        xsim_sc_channel<0, bool > *p_9_s_axihub_bready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axihub_bready.bind(*p_9_s_axihub_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axihub_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_axihub_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_axihub_bresp.bind(*p_9_s_axihub_bresp);
        p_9_s_axihub_bresp->set_sv_netview_offsetfromdp(6039376);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_s_axihub_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->s_axihub_araddr.bind(*p_9_s_axihub_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axihub_araddr);
        xsim_sc_channel<0, bool > *p_9_s_axihub_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axihub_arvalid.bind(*p_9_s_axihub_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axihub_arvalid);
        xsim_sc_channel<0, bool > *p_9_s_axihub_arready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axihub_arready.bind(*p_9_s_axihub_arready);
        p_9_s_axihub_arready->set_sv_netview_offsetfromdp(6039544);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_axihub_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_axihub_rdata.bind(*p_9_s_axihub_rdata);
        p_9_s_axihub_rdata->set_sv_netview_offsetfromdp(6039600);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_axihub_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_axihub_rresp.bind(*p_9_s_axihub_rresp);
        p_9_s_axihub_rresp->set_sv_netview_offsetfromdp(6039656);
        xsim_sc_channel<0, bool > *p_9_s_axihub_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axihub_rvalid.bind(*p_9_s_axihub_rvalid);
        p_9_s_axihub_rvalid->set_sv_netview_offsetfromdp(6039712);
        xsim_sc_channel<0, bool > *p_9_s_axihub_rready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axihub_rready.bind(*p_9_s_axihub_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axihub_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_aximm_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_aximm_awaddr.bind(*p_9_s_aximm_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_aximm_awaddr);
        xsim_sc_channel<0, bool > *p_9_s_aximm_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_aximm_awvalid.bind(*p_9_s_aximm_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_aximm_awvalid);
        xsim_sc_channel<0, bool > *p_9_s_aximm_awready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_aximm_awready.bind(*p_9_s_aximm_awready);
        p_9_s_aximm_awready->set_sv_netview_offsetfromdp(6039936);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_s_aximm_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->s_aximm_awlen.bind(*p_9_s_aximm_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_aximm_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s_aximm_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s_aximm_awsize.bind(*p_9_s_aximm_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_aximm_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_aximm_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_aximm_awburst.bind(*p_9_s_aximm_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_aximm_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_s_aximm_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->s_aximm_awid.bind(*p_9_s_aximm_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_aximm_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_9_s_aximm_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_9->s_aximm_wdata.bind(*p_9_s_aximm_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_aximm_wdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_s_aximm_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->s_aximm_wstrb.bind(*p_9_s_aximm_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_aximm_wstrb);
        xsim_sc_channel<0, bool > *p_9_s_aximm_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_aximm_wvalid.bind(*p_9_s_aximm_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_aximm_wvalid);
        xsim_sc_channel<0, bool > *p_9_s_aximm_wready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_aximm_wready.bind(*p_9_s_aximm_wready);
        p_9_s_aximm_wready->set_sv_netview_offsetfromdp(6040384);
        xsim_sc_channel<0, bool > *p_9_s_aximm_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_aximm_bvalid.bind(*p_9_s_aximm_bvalid);
        p_9_s_aximm_bvalid->set_sv_netview_offsetfromdp(6040440);
        xsim_sc_channel<0, bool > *p_9_s_aximm_bready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_aximm_bready.bind(*p_9_s_aximm_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_aximm_bready);
        xsim_sc_channel<0, bool > *p_9_s_aximm_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_aximm_wlast.bind(*p_9_s_aximm_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_aximm_wlast);
        xsim_sc_channel<0, bool > *p_9_s_aximm_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_aximm_rlast.bind(*p_9_s_aximm_rlast);
        p_9_s_aximm_rlast->set_sv_netview_offsetfromdp(6040608);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_aximm_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_aximm_bresp.bind(*p_9_s_aximm_bresp);
        p_9_s_aximm_bresp->set_sv_netview_offsetfromdp(6040664);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_s_aximm_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->s_aximm_bid.bind(*p_9_s_aximm_bid);
        p_9_s_aximm_bid->set_sv_netview_offsetfromdp(6040720);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_aximm_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_aximm_araddr.bind(*p_9_s_aximm_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_aximm_araddr);
        xsim_sc_channel<0, bool > *p_9_s_aximm_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_aximm_arvalid.bind(*p_9_s_aximm_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_aximm_arvalid);
        xsim_sc_channel<0, bool > *p_9_s_aximm_arready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_aximm_arready.bind(*p_9_s_aximm_arready);
        p_9_s_aximm_arready->set_sv_netview_offsetfromdp(6040888);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_s_aximm_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->s_aximm_arlen.bind(*p_9_s_aximm_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_aximm_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s_aximm_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s_aximm_arsize.bind(*p_9_s_aximm_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_aximm_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_aximm_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_aximm_arburst.bind(*p_9_s_aximm_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_aximm_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_s_aximm_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->s_aximm_arid.bind(*p_9_s_aximm_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_aximm_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_9_s_aximm_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_9->s_aximm_rdata.bind(*p_9_s_aximm_rdata);
        p_9_s_aximm_rdata->set_sv_netview_offsetfromdp(6041168);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_s_aximm_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->s_aximm_rid.bind(*p_9_s_aximm_rid);
        p_9_s_aximm_rid->set_sv_netview_offsetfromdp(6041224);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_aximm_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_aximm_rresp.bind(*p_9_s_aximm_rresp);
        p_9_s_aximm_rresp->set_sv_netview_offsetfromdp(6041280);
        xsim_sc_channel<0, bool > *p_9_s_aximm_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_aximm_rvalid.bind(*p_9_s_aximm_rvalid);
        p_9_s_aximm_rvalid->set_sv_netview_offsetfromdp(6041336);
        xsim_sc_channel<0, bool > *p_9_s_aximm_rready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_aximm_rready.bind(*p_9_s_aximm_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_aximm_rready);
        sc_inst_10 = new pfm_dynamic_dpa_mon0_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_mon0");
        sc_inst_10->xsim_set_dbg_index(759);
        xsim_sc_channel<0, bool > *p_10_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_10->mon_clk.bind(*p_10_mon_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_10_mon_clk);
        xsim_sc_channel<0, bool > *p_10_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_10->mon_resetn.bind(*p_10_mon_resetn);
        (*_glb_hdl_sc_channel_map).push_back(p_10_mon_resetn);
        xsim_sc_channel<0, bool > *p_10_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_10->trace_clk.bind(*p_10_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_10_trace_clk);
        xsim_sc_channel<0, bool > *p_10_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_10->trace_rst.bind(*p_10_trace_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_10_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->s_axi_awaddr.bind(*p_10_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_10_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_awvalid.bind(*p_10_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_10_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_awready.bind(*p_10_s_axi_awready);
        p_10_s_axi_awready->set_sv_netview_offsetfromdp(6041832);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_axi_wdata.bind(*p_10_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_axi_wstrb.bind(*p_10_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_10_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_wvalid.bind(*p_10_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_10_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_wready.bind(*p_10_s_axi_wready);
        p_10_s_axi_wready->set_sv_netview_offsetfromdp(6042056);
        xsim_sc_channel<0, bool > *p_10_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_bvalid.bind(*p_10_s_axi_bvalid);
        p_10_s_axi_bvalid->set_sv_netview_offsetfromdp(6042112);
        xsim_sc_channel<0, bool > *p_10_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_bready.bind(*p_10_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s_axi_bresp.bind(*p_10_s_axi_bresp);
        p_10_s_axi_bresp->set_sv_netview_offsetfromdp(6042224);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->s_axi_araddr.bind(*p_10_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_10_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_arvalid.bind(*p_10_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_10_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_arready.bind(*p_10_s_axi_arready);
        p_10_s_axi_arready->set_sv_netview_offsetfromdp(6042392);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_axi_rdata.bind(*p_10_s_axi_rdata);
        p_10_s_axi_rdata->set_sv_netview_offsetfromdp(6042448);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s_axi_rresp.bind(*p_10_s_axi_rresp);
        p_10_s_axi_rresp->set_sv_netview_offsetfromdp(6042504);
        xsim_sc_channel<0, bool > *p_10_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_rvalid.bind(*p_10_s_axi_rvalid);
        p_10_s_axi_rvalid->set_sv_netview_offsetfromdp(6042560);
        xsim_sc_channel<0, bool > *p_10_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_rready.bind(*p_10_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_rready);
        xsim_sc_channel<0, bool > *p_10_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_10->mon_AWVALID.bind(*p_10_mon_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_10_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_10_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_10->mon_AWREADY.bind(*p_10_mon_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_10_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_10_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_10->mon_AWADDR.bind(*p_10_mon_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_10_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->mon_AWID.bind(*p_10_mon_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_10_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->mon_AWLEN.bind(*p_10_mon_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_10_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->mon_AWSIZE.bind(*p_10_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_10_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->mon_AWBURST.bind(*p_10_mon_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_10_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_10_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_10->mon_WVALID.bind(*p_10_mon_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_10_mon_WVALID);
        xsim_sc_channel<0, bool > *p_10_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_10->mon_WREADY.bind(*p_10_mon_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_10_mon_WREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_10_mon_WDATA = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_10->mon_WDATA.bind(*p_10_mon_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_10_mon_WDATA);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_mon_WSTRB = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->mon_WSTRB.bind(*p_10_mon_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_10_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_10_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_10->mon_WLAST.bind(*p_10_mon_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_10_mon_WLAST);
        xsim_sc_channel<0, bool > *p_10_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_10->mon_ARVALID.bind(*p_10_mon_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_10_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_10_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_10->mon_ARREADY.bind(*p_10_mon_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_10_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_10_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_10->mon_ARADDR.bind(*p_10_mon_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_10_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->mon_ARID.bind(*p_10_mon_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_10_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->mon_ARLEN.bind(*p_10_mon_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_10_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->mon_ARSIZE.bind(*p_10_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_10_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->mon_ARBURST.bind(*p_10_mon_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_10_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_10_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_10->mon_RVALID.bind(*p_10_mon_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_10_mon_RVALID);
        xsim_sc_channel<0, bool > *p_10_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_10->mon_RREADY.bind(*p_10_mon_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_10_mon_RREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_10_mon_RDATA = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_10->mon_RDATA.bind(*p_10_mon_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_10_mon_RDATA);
        xsim_sc_channel<0, bool > *p_10_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_10->mon_RLAST.bind(*p_10_mon_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_10_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->mon_RID.bind(*p_10_mon_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_10_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->mon_RRESP.bind(*p_10_mon_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_10_mon_RRESP);
        xsim_sc_channel<0, bool > *p_10_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_10->mon_BVALID.bind(*p_10_mon_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_10_mon_BVALID);
        xsim_sc_channel<0, bool > *p_10_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_10->mon_BREADY.bind(*p_10_mon_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_10_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->mon_BRESP.bind(*p_10_mon_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_10_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->mon_BID.bind(*p_10_mon_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_10_mon_BID);
        xsim_sc_channel<0, bool > *p_10_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axis_rd_tready.bind(*p_10_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_10_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_10->m_axis_rd_tdata.bind(*p_10_m_axis_rd_tdata);
        p_10_m_axis_rd_tdata->set_sv_netview_offsetfromdp(6044352);
        xsim_sc_channel<0, bool > *p_10_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axis_rd_tlast.bind(*p_10_m_axis_rd_tlast);
        p_10_m_axis_rd_tlast->set_sv_netview_offsetfromdp(6044408);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->m_axis_rd_tid.bind(*p_10_m_axis_rd_tid);
        p_10_m_axis_rd_tid->set_sv_netview_offsetfromdp(6044464);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->m_axis_rd_tdest.bind(*p_10_m_axis_rd_tdest);
        p_10_m_axis_rd_tdest->set_sv_netview_offsetfromdp(6044520);
        xsim_sc_channel<0, bool > *p_10_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axis_wr_tready.bind(*p_10_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_10_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_10->m_axis_wr_tdata.bind(*p_10_m_axis_wr_tdata);
        p_10_m_axis_wr_tdata->set_sv_netview_offsetfromdp(6044632);
        xsim_sc_channel<0, bool > *p_10_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axis_wr_tlast.bind(*p_10_m_axis_wr_tlast);
        p_10_m_axis_wr_tlast->set_sv_netview_offsetfromdp(6044688);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->m_axis_wr_tid.bind(*p_10_m_axis_wr_tid);
        p_10_m_axis_wr_tid->set_sv_netview_offsetfromdp(6044744);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->m_axis_wr_tdest.bind(*p_10_m_axis_wr_tdest);
        p_10_m_axis_wr_tdest->set_sv_netview_offsetfromdp(6044800);
        xsim_sc_channel<0, bool > *p_10_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axis_wr_tvalid.bind(*p_10_m_axis_wr_tvalid);
        p_10_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(6044856);
        xsim_sc_channel<0, bool > *p_10_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axis_rd_tvalid.bind(*p_10_m_axis_rd_tvalid);
        p_10_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(6044912);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->s_axi_awaddr_mon.bind(*p_10_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s_axi_awprot_mon.bind(*p_10_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_10_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_awvalid_mon.bind(*p_10_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_10_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_awready_mon.bind(*p_10_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_axi_wdata_mon.bind(*p_10_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_axi_wstrb_mon.bind(*p_10_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_10_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_wvalid_mon.bind(*p_10_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_10_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_wready_mon.bind(*p_10_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s_axi_bresp_mon.bind(*p_10_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_10_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_bvalid_mon.bind(*p_10_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_10_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_bready_mon.bind(*p_10_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->s_axi_araddr_mon.bind(*p_10_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s_axi_arprot_mon.bind(*p_10_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_10_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_arvalid_mon.bind(*p_10_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_10_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_arready_mon.bind(*p_10_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_axi_rdata_mon.bind(*p_10_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s_axi_rresp_mon.bind(*p_10_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_10_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_rvalid_mon.bind(*p_10_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_10_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_rready_mon.bind(*p_10_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_rready_mon);
        sc_inst_11 = new pfm_dynamic_irq_const_tieoff_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.irq_const_tieoff");
        sc_inst_11->xsim_set_dbg_index(58);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_dout = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->dout.bind(*p_11_dout);
        p_11_dout->set_sv_netview_offsetfromdp(6220312);
        sc_inst_12 = new bd_d216_sci(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.bd_d216_sci_inst");
        sc_inst_12->xsim_set_dbg_index(1259);
        sc_inst_13 = new bd_d216_interconnect_M00_AXI_MEM00_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_m00_axi_mem00");
        sc_inst_13->xsim_set_dbg_index(2296);
        xsim_sc_channel<0, bool > *p_13_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_13->aclk.bind(*p_13_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_13_aclk);
        xsim_sc_channel<0, bool > *p_13_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_13->aclk1.bind(*p_13_aclk1);
        (*_glb_hdl_sc_channel_map).push_back(p_13_aclk1);
        xsim_sc_channel<0, bool > *p_13_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_13->aresetn.bind(*p_13_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_13_aresetn);
        xsim_sc_channel<39, sc_dt::sc_bv<39> > *p_13_S00_AXI_awaddr = new xsim_sc_channel<39, sc_dt::sc_bv<39> >();
        sc_inst_13->S00_AXI_awaddr.bind(*p_13_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->S00_AXI_awlen.bind(*p_13_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->S00_AXI_awsize.bind(*p_13_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->S00_AXI_awburst.bind(*p_13_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->S00_AXI_awlock.bind(*p_13_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->S00_AXI_awcache.bind(*p_13_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->S00_AXI_awprot.bind(*p_13_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->S00_AXI_awqos.bind(*p_13_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S00_AXI_awqos);
        xsim_sc_channel<0, bool > *p_13_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->S00_AXI_awvalid.bind(*p_13_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_13_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->S00_AXI_awready.bind(*p_13_S00_AXI_awready);
        p_13_S00_AXI_awready->set_sv_netview_offsetfromdp(6381856);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->S00_AXI_wdata.bind(*p_13_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->S00_AXI_wstrb.bind(*p_13_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_13_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->S00_AXI_wlast.bind(*p_13_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S00_AXI_wlast);
        xsim_sc_channel<0, bool > *p_13_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->S00_AXI_wvalid.bind(*p_13_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_13_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->S00_AXI_wready.bind(*p_13_S00_AXI_wready);
        p_13_S00_AXI_wready->set_sv_netview_offsetfromdp(6382136);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->S00_AXI_bresp.bind(*p_13_S00_AXI_bresp);
        p_13_S00_AXI_bresp->set_sv_netview_offsetfromdp(6382192);
        xsim_sc_channel<0, bool > *p_13_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->S00_AXI_bvalid.bind(*p_13_S00_AXI_bvalid);
        p_13_S00_AXI_bvalid->set_sv_netview_offsetfromdp(6382248);
        xsim_sc_channel<0, bool > *p_13_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->S00_AXI_bready.bind(*p_13_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S00_AXI_bready);
        xsim_sc_channel<39, sc_dt::sc_bv<39> > *p_13_S00_AXI_araddr = new xsim_sc_channel<39, sc_dt::sc_bv<39> >();
        sc_inst_13->S00_AXI_araddr.bind(*p_13_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->S00_AXI_arlen.bind(*p_13_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->S00_AXI_arsize.bind(*p_13_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->S00_AXI_arburst.bind(*p_13_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->S00_AXI_arlock.bind(*p_13_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->S00_AXI_arcache.bind(*p_13_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->S00_AXI_arprot.bind(*p_13_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->S00_AXI_arqos.bind(*p_13_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S00_AXI_arqos);
        xsim_sc_channel<0, bool > *p_13_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->S00_AXI_arvalid.bind(*p_13_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_13_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->S00_AXI_arready.bind(*p_13_S00_AXI_arready);
        p_13_S00_AXI_arready->set_sv_netview_offsetfromdp(6382864);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->S00_AXI_rdata.bind(*p_13_S00_AXI_rdata);
        p_13_S00_AXI_rdata->set_sv_netview_offsetfromdp(6382920);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->S00_AXI_rresp.bind(*p_13_S00_AXI_rresp);
        p_13_S00_AXI_rresp->set_sv_netview_offsetfromdp(6382976);
        xsim_sc_channel<0, bool > *p_13_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->S00_AXI_rlast.bind(*p_13_S00_AXI_rlast);
        p_13_S00_AXI_rlast->set_sv_netview_offsetfromdp(6383032);
        xsim_sc_channel<0, bool > *p_13_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->S00_AXI_rvalid.bind(*p_13_S00_AXI_rvalid);
        p_13_S00_AXI_rvalid->set_sv_netview_offsetfromdp(6383088);
        xsim_sc_channel<0, bool > *p_13_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->S00_AXI_rready.bind(*p_13_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S00_AXI_rready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_S01_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->S01_AXI_awid.bind(*p_13_S01_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S01_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_S01_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->S01_AXI_awaddr.bind(*p_13_S01_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S01_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_S01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->S01_AXI_awlen.bind(*p_13_S01_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S01_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_S01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->S01_AXI_awsize.bind(*p_13_S01_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S01_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_S01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->S01_AXI_awburst.bind(*p_13_S01_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S01_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_S01_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->S01_AXI_awlock.bind(*p_13_S01_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S01_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_S01_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->S01_AXI_awcache.bind(*p_13_S01_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S01_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_S01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->S01_AXI_awprot.bind(*p_13_S01_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S01_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_S01_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->S01_AXI_awqos.bind(*p_13_S01_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S01_AXI_awqos);
        xsim_sc_channel<0, bool > *p_13_S01_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->S01_AXI_awvalid.bind(*p_13_S01_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S01_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_13_S01_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->S01_AXI_awready.bind(*p_13_S01_AXI_awready);
        p_13_S01_AXI_awready->set_sv_netview_offsetfromdp(6383760);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_S01_AXI_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->S01_AXI_wdata.bind(*p_13_S01_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S01_AXI_wdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_S01_AXI_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->S01_AXI_wstrb.bind(*p_13_S01_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S01_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_13_S01_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->S01_AXI_wlast.bind(*p_13_S01_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S01_AXI_wlast);
        xsim_sc_channel<0, bool > *p_13_S01_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->S01_AXI_wvalid.bind(*p_13_S01_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S01_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_13_S01_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->S01_AXI_wready.bind(*p_13_S01_AXI_wready);
        p_13_S01_AXI_wready->set_sv_netview_offsetfromdp(6384040);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_S01_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->S01_AXI_bid.bind(*p_13_S01_AXI_bid);
        p_13_S01_AXI_bid->set_sv_netview_offsetfromdp(6384096);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_S01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->S01_AXI_bresp.bind(*p_13_S01_AXI_bresp);
        p_13_S01_AXI_bresp->set_sv_netview_offsetfromdp(6384152);
        xsim_sc_channel<0, bool > *p_13_S01_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->S01_AXI_bvalid.bind(*p_13_S01_AXI_bvalid);
        p_13_S01_AXI_bvalid->set_sv_netview_offsetfromdp(6384208);
        xsim_sc_channel<0, bool > *p_13_S01_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->S01_AXI_bready.bind(*p_13_S01_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S01_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_S01_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->S01_AXI_arid.bind(*p_13_S01_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S01_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_S01_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->S01_AXI_araddr.bind(*p_13_S01_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S01_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_S01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->S01_AXI_arlen.bind(*p_13_S01_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S01_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_S01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->S01_AXI_arsize.bind(*p_13_S01_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S01_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_S01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->S01_AXI_arburst.bind(*p_13_S01_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S01_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_S01_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->S01_AXI_arlock.bind(*p_13_S01_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S01_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_S01_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->S01_AXI_arcache.bind(*p_13_S01_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S01_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_S01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->S01_AXI_arprot.bind(*p_13_S01_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S01_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_S01_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->S01_AXI_arqos.bind(*p_13_S01_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S01_AXI_arqos);
        xsim_sc_channel<0, bool > *p_13_S01_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->S01_AXI_arvalid.bind(*p_13_S01_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S01_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_13_S01_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->S01_AXI_arready.bind(*p_13_S01_AXI_arready);
        p_13_S01_AXI_arready->set_sv_netview_offsetfromdp(6384880);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_S01_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->S01_AXI_rid.bind(*p_13_S01_AXI_rid);
        p_13_S01_AXI_rid->set_sv_netview_offsetfromdp(6384936);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_S01_AXI_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->S01_AXI_rdata.bind(*p_13_S01_AXI_rdata);
        p_13_S01_AXI_rdata->set_sv_netview_offsetfromdp(6384992);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_S01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->S01_AXI_rresp.bind(*p_13_S01_AXI_rresp);
        p_13_S01_AXI_rresp->set_sv_netview_offsetfromdp(6385048);
        xsim_sc_channel<0, bool > *p_13_S01_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->S01_AXI_rlast.bind(*p_13_S01_AXI_rlast);
        p_13_S01_AXI_rlast->set_sv_netview_offsetfromdp(6385104);
        xsim_sc_channel<0, bool > *p_13_S01_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->S01_AXI_rvalid.bind(*p_13_S01_AXI_rvalid);
        p_13_S01_AXI_rvalid->set_sv_netview_offsetfromdp(6385160);
        xsim_sc_channel<0, bool > *p_13_S01_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->S01_AXI_rready.bind(*p_13_S01_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_S01_AXI_rready);
        xsim_sc_channel<39, sc_dt::sc_bv<39> > *p_13_M00_AXI_awaddr = new xsim_sc_channel<39, sc_dt::sc_bv<39> >();
        sc_inst_13->M00_AXI_awaddr.bind(*p_13_M00_AXI_awaddr);
        p_13_M00_AXI_awaddr->set_sv_netview_offsetfromdp(6385272);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->M00_AXI_awlen.bind(*p_13_M00_AXI_awlen);
        p_13_M00_AXI_awlen->set_sv_netview_offsetfromdp(6385328);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->M00_AXI_awsize.bind(*p_13_M00_AXI_awsize);
        p_13_M00_AXI_awsize->set_sv_netview_offsetfromdp(6385384);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->M00_AXI_awburst.bind(*p_13_M00_AXI_awburst);
        p_13_M00_AXI_awburst->set_sv_netview_offsetfromdp(6385440);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->M00_AXI_awlock.bind(*p_13_M00_AXI_awlock);
        p_13_M00_AXI_awlock->set_sv_netview_offsetfromdp(6385496);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->M00_AXI_awcache.bind(*p_13_M00_AXI_awcache);
        p_13_M00_AXI_awcache->set_sv_netview_offsetfromdp(6385552);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->M00_AXI_awprot.bind(*p_13_M00_AXI_awprot);
        p_13_M00_AXI_awprot->set_sv_netview_offsetfromdp(6385608);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->M00_AXI_awqos.bind(*p_13_M00_AXI_awqos);
        p_13_M00_AXI_awqos->set_sv_netview_offsetfromdp(6385664);
        xsim_sc_channel<0, bool > *p_13_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->M00_AXI_awvalid.bind(*p_13_M00_AXI_awvalid);
        p_13_M00_AXI_awvalid->set_sv_netview_offsetfromdp(6385720);
        xsim_sc_channel<0, bool > *p_13_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->M00_AXI_awready.bind(*p_13_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_13_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_13->M00_AXI_wdata.bind(*p_13_M00_AXI_wdata);
        p_13_M00_AXI_wdata->set_sv_netview_offsetfromdp(6385832);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->M00_AXI_wstrb.bind(*p_13_M00_AXI_wstrb);
        p_13_M00_AXI_wstrb->set_sv_netview_offsetfromdp(6385888);
        xsim_sc_channel<0, bool > *p_13_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->M00_AXI_wlast.bind(*p_13_M00_AXI_wlast);
        p_13_M00_AXI_wlast->set_sv_netview_offsetfromdp(6385944);
        xsim_sc_channel<0, bool > *p_13_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->M00_AXI_wvalid.bind(*p_13_M00_AXI_wvalid);
        p_13_M00_AXI_wvalid->set_sv_netview_offsetfromdp(6386000);
        xsim_sc_channel<0, bool > *p_13_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->M00_AXI_wready.bind(*p_13_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->M00_AXI_bresp.bind(*p_13_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_13_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_13_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->M00_AXI_bvalid.bind(*p_13_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_13_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->M00_AXI_bready.bind(*p_13_M00_AXI_bready);
        p_13_M00_AXI_bready->set_sv_netview_offsetfromdp(6386224);
        xsim_sc_channel<39, sc_dt::sc_bv<39> > *p_13_M00_AXI_araddr = new xsim_sc_channel<39, sc_dt::sc_bv<39> >();
        sc_inst_13->M00_AXI_araddr.bind(*p_13_M00_AXI_araddr);
        p_13_M00_AXI_araddr->set_sv_netview_offsetfromdp(6386280);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->M00_AXI_arlen.bind(*p_13_M00_AXI_arlen);
        p_13_M00_AXI_arlen->set_sv_netview_offsetfromdp(6386336);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->M00_AXI_arsize.bind(*p_13_M00_AXI_arsize);
        p_13_M00_AXI_arsize->set_sv_netview_offsetfromdp(6386392);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->M00_AXI_arburst.bind(*p_13_M00_AXI_arburst);
        p_13_M00_AXI_arburst->set_sv_netview_offsetfromdp(6386448);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->M00_AXI_arlock.bind(*p_13_M00_AXI_arlock);
        p_13_M00_AXI_arlock->set_sv_netview_offsetfromdp(6386504);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->M00_AXI_arcache.bind(*p_13_M00_AXI_arcache);
        p_13_M00_AXI_arcache->set_sv_netview_offsetfromdp(6386560);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->M00_AXI_arprot.bind(*p_13_M00_AXI_arprot);
        p_13_M00_AXI_arprot->set_sv_netview_offsetfromdp(6386616);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->M00_AXI_arqos.bind(*p_13_M00_AXI_arqos);
        p_13_M00_AXI_arqos->set_sv_netview_offsetfromdp(6386672);
        xsim_sc_channel<0, bool > *p_13_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->M00_AXI_arvalid.bind(*p_13_M00_AXI_arvalid);
        p_13_M00_AXI_arvalid->set_sv_netview_offsetfromdp(6386728);
        xsim_sc_channel<0, bool > *p_13_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->M00_AXI_arready.bind(*p_13_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_13_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_13->M00_AXI_rdata.bind(*p_13_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_13_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->M00_AXI_rresp.bind(*p_13_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_13_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_13_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->M00_AXI_rlast.bind(*p_13_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_13_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_13_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->M00_AXI_rvalid.bind(*p_13_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_13_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->M00_AXI_rready.bind(*p_13_M00_AXI_rready);
        p_13_M00_AXI_rready->set_sv_netview_offsetfromdp(6387064);
        sc_inst_14 = new bd_d216_rs_M00_AXI_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.rs_m00_axi");
        sc_inst_14->xsim_set_dbg_index(2297);
        xsim_sc_channel<0, bool > *p_14_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_14->aclk.bind(*p_14_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_14_aclk);
        xsim_sc_channel<0, bool > *p_14_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_14->aresetn.bind(*p_14_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_14_aresetn);
        xsim_sc_channel<39, sc_dt::sc_bv<39> > *p_14_s_axi_awaddr = new xsim_sc_channel<39, sc_dt::sc_bv<39> >();
        sc_inst_14->s_axi_awaddr.bind(*p_14_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->s_axi_awlen.bind(*p_14_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s_axi_awsize.bind(*p_14_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s_axi_awburst.bind(*p_14_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s_axi_awlock.bind(*p_14_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s_axi_awcache.bind(*p_14_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s_axi_awprot.bind(*p_14_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s_axi_awregion.bind(*p_14_s_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s_axi_awqos.bind(*p_14_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_14_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_awvalid.bind(*p_14_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_14_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_awready.bind(*p_14_s_axi_awready);
        p_14_s_axi_awready->set_sv_netview_offsetfromdp(6387840);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_14_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_14->s_axi_wdata.bind(*p_14_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->s_axi_wstrb.bind(*p_14_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_14_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_wlast.bind(*p_14_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_14_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_wvalid.bind(*p_14_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_14_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_wready.bind(*p_14_s_axi_wready);
        p_14_s_axi_wready->set_sv_netview_offsetfromdp(6388120);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s_axi_bresp.bind(*p_14_s_axi_bresp);
        p_14_s_axi_bresp->set_sv_netview_offsetfromdp(6388176);
        xsim_sc_channel<0, bool > *p_14_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_bvalid.bind(*p_14_s_axi_bvalid);
        p_14_s_axi_bvalid->set_sv_netview_offsetfromdp(6388232);
        xsim_sc_channel<0, bool > *p_14_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_bready.bind(*p_14_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_bready);
        xsim_sc_channel<39, sc_dt::sc_bv<39> > *p_14_s_axi_araddr = new xsim_sc_channel<39, sc_dt::sc_bv<39> >();
        sc_inst_14->s_axi_araddr.bind(*p_14_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->s_axi_arlen.bind(*p_14_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s_axi_arsize.bind(*p_14_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s_axi_arburst.bind(*p_14_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s_axi_arlock.bind(*p_14_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s_axi_arcache.bind(*p_14_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s_axi_arprot.bind(*p_14_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s_axi_arregion.bind(*p_14_s_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s_axi_arqos.bind(*p_14_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_14_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_arvalid.bind(*p_14_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_14_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_arready.bind(*p_14_s_axi_arready);
        p_14_s_axi_arready->set_sv_netview_offsetfromdp(6388904);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_14_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_14->s_axi_rdata.bind(*p_14_s_axi_rdata);
        p_14_s_axi_rdata->set_sv_netview_offsetfromdp(6388960);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s_axi_rresp.bind(*p_14_s_axi_rresp);
        p_14_s_axi_rresp->set_sv_netview_offsetfromdp(6389016);
        xsim_sc_channel<0, bool > *p_14_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_rlast.bind(*p_14_s_axi_rlast);
        p_14_s_axi_rlast->set_sv_netview_offsetfromdp(6389072);
        xsim_sc_channel<0, bool > *p_14_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_rvalid.bind(*p_14_s_axi_rvalid);
        p_14_s_axi_rvalid->set_sv_netview_offsetfromdp(6389128);
        xsim_sc_channel<0, bool > *p_14_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_rready.bind(*p_14_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_rready);
        xsim_sc_channel<39, sc_dt::sc_bv<39> > *p_14_m_axi_awaddr = new xsim_sc_channel<39, sc_dt::sc_bv<39> >();
        sc_inst_14->m_axi_awaddr.bind(*p_14_m_axi_awaddr);
        p_14_m_axi_awaddr->set_sv_netview_offsetfromdp(6389240);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_m_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->m_axi_awlen.bind(*p_14_m_axi_awlen);
        p_14_m_axi_awlen->set_sv_netview_offsetfromdp(6389296);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m_axi_awsize.bind(*p_14_m_axi_awsize);
        p_14_m_axi_awsize->set_sv_netview_offsetfromdp(6389352);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m_axi_awburst.bind(*p_14_m_axi_awburst);
        p_14_m_axi_awburst->set_sv_netview_offsetfromdp(6389408);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m_axi_awlock.bind(*p_14_m_axi_awlock);
        p_14_m_axi_awlock->set_sv_netview_offsetfromdp(6389464);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m_axi_awcache.bind(*p_14_m_axi_awcache);
        p_14_m_axi_awcache->set_sv_netview_offsetfromdp(6389520);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m_axi_awprot.bind(*p_14_m_axi_awprot);
        p_14_m_axi_awprot->set_sv_netview_offsetfromdp(6389576);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m_axi_awregion.bind(*p_14_m_axi_awregion);
        p_14_m_axi_awregion->set_sv_netview_offsetfromdp(6389632);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m_axi_awqos.bind(*p_14_m_axi_awqos);
        p_14_m_axi_awqos->set_sv_netview_offsetfromdp(6389688);
        xsim_sc_channel<0, bool > *p_14_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m_axi_awvalid.bind(*p_14_m_axi_awvalid);
        p_14_m_axi_awvalid->set_sv_netview_offsetfromdp(6389744);
        xsim_sc_channel<0, bool > *p_14_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m_axi_awready.bind(*p_14_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m_axi_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_14_m_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_14->m_axi_wdata.bind(*p_14_m_axi_wdata);
        p_14_m_axi_wdata->set_sv_netview_offsetfromdp(6389856);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_m_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->m_axi_wstrb.bind(*p_14_m_axi_wstrb);
        p_14_m_axi_wstrb->set_sv_netview_offsetfromdp(6389912);
        xsim_sc_channel<0, bool > *p_14_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->m_axi_wlast.bind(*p_14_m_axi_wlast);
        p_14_m_axi_wlast->set_sv_netview_offsetfromdp(6389968);
        xsim_sc_channel<0, bool > *p_14_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m_axi_wvalid.bind(*p_14_m_axi_wvalid);
        p_14_m_axi_wvalid->set_sv_netview_offsetfromdp(6390024);
        xsim_sc_channel<0, bool > *p_14_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m_axi_wready.bind(*p_14_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m_axi_bresp.bind(*p_14_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_14_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m_axi_bvalid.bind(*p_14_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_14_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m_axi_bready.bind(*p_14_m_axi_bready);
        p_14_m_axi_bready->set_sv_netview_offsetfromdp(6390248);
        xsim_sc_channel<39, sc_dt::sc_bv<39> > *p_14_m_axi_araddr = new xsim_sc_channel<39, sc_dt::sc_bv<39> >();
        sc_inst_14->m_axi_araddr.bind(*p_14_m_axi_araddr);
        p_14_m_axi_araddr->set_sv_netview_offsetfromdp(6390304);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_m_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->m_axi_arlen.bind(*p_14_m_axi_arlen);
        p_14_m_axi_arlen->set_sv_netview_offsetfromdp(6390360);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m_axi_arsize.bind(*p_14_m_axi_arsize);
        p_14_m_axi_arsize->set_sv_netview_offsetfromdp(6390416);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m_axi_arburst.bind(*p_14_m_axi_arburst);
        p_14_m_axi_arburst->set_sv_netview_offsetfromdp(6390472);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m_axi_arlock.bind(*p_14_m_axi_arlock);
        p_14_m_axi_arlock->set_sv_netview_offsetfromdp(6390528);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m_axi_arcache.bind(*p_14_m_axi_arcache);
        p_14_m_axi_arcache->set_sv_netview_offsetfromdp(6390584);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m_axi_arprot.bind(*p_14_m_axi_arprot);
        p_14_m_axi_arprot->set_sv_netview_offsetfromdp(6390640);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m_axi_arregion.bind(*p_14_m_axi_arregion);
        p_14_m_axi_arregion->set_sv_netview_offsetfromdp(6390696);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m_axi_arqos.bind(*p_14_m_axi_arqos);
        p_14_m_axi_arqos->set_sv_netview_offsetfromdp(6390752);
        xsim_sc_channel<0, bool > *p_14_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m_axi_arvalid.bind(*p_14_m_axi_arvalid);
        p_14_m_axi_arvalid->set_sv_netview_offsetfromdp(6390808);
        xsim_sc_channel<0, bool > *p_14_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m_axi_arready.bind(*p_14_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m_axi_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_14_m_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_14->m_axi_rdata.bind(*p_14_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m_axi_rresp.bind(*p_14_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_14_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->m_axi_rlast.bind(*p_14_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_14_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m_axi_rvalid.bind(*p_14_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_14_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m_axi_rready.bind(*p_14_m_axi_rready);
        p_14_m_axi_rready->set_sv_netview_offsetfromdp(6391144);
        sc_inst_15 = new bd_d216_calib_const_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.calib_const");
        sc_inst_15->xsim_set_dbg_index(2406);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_dout = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->dout.bind(*p_15_dout);
        p_15_dout->set_sv_netview_offsetfromdp(6401504);
        sc_inst_16 = new pfm_dynamic_sci(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.pfm_dynamic_sci_inst");
        sc_inst_16->xsim_set_dbg_index(64);
        sc_inst_17 = new pfm_dynamic_profile_vip_0_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.profile_vip_0");
        sc_inst_17->xsim_set_dbg_index(65);
        xsim_sc_channel<0, bool > *p_17_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_17->aclk.bind(*p_17_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_17_aclk);
        xsim_sc_channel<0, bool > *p_17_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_17->aresetn.bind(*p_17_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_17_aresetn);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->s_axi_awaddr.bind(*p_17_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->s_axi_awlen.bind(*p_17_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s_axi_awburst.bind(*p_17_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->s_axi_awlock.bind(*p_17_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s_axi_awcache.bind(*p_17_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->s_axi_awprot.bind(*p_17_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s_axi_awqos.bind(*p_17_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_17_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_awvalid.bind(*p_17_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_17_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_awready.bind(*p_17_s_axi_awready);
        p_17_s_axi_awready->set_sv_netview_offsetfromdp(6602992);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_s_axi_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->s_axi_wdata.bind(*p_17_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_wdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_s_axi_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->s_axi_wstrb.bind(*p_17_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_17_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_wlast.bind(*p_17_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_17_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_wvalid.bind(*p_17_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_17_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_wready.bind(*p_17_s_axi_wready);
        p_17_s_axi_wready->set_sv_netview_offsetfromdp(6603272);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s_axi_bresp.bind(*p_17_s_axi_bresp);
        p_17_s_axi_bresp->set_sv_netview_offsetfromdp(6603328);
        xsim_sc_channel<0, bool > *p_17_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_bvalid.bind(*p_17_s_axi_bvalid);
        p_17_s_axi_bvalid->set_sv_netview_offsetfromdp(6603384);
        xsim_sc_channel<0, bool > *p_17_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_bready.bind(*p_17_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->s_axi_araddr.bind(*p_17_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->s_axi_arlen.bind(*p_17_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s_axi_arburst.bind(*p_17_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->s_axi_arlock.bind(*p_17_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s_axi_arcache.bind(*p_17_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->s_axi_arprot.bind(*p_17_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s_axi_arqos.bind(*p_17_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_17_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_arvalid.bind(*p_17_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_17_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_arready.bind(*p_17_s_axi_arready);
        p_17_s_axi_arready->set_sv_netview_offsetfromdp(6603944);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_s_axi_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->s_axi_rdata.bind(*p_17_s_axi_rdata);
        p_17_s_axi_rdata->set_sv_netview_offsetfromdp(6604000);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s_axi_rresp.bind(*p_17_s_axi_rresp);
        p_17_s_axi_rresp->set_sv_netview_offsetfromdp(6604056);
        xsim_sc_channel<0, bool > *p_17_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_rlast.bind(*p_17_s_axi_rlast);
        p_17_s_axi_rlast->set_sv_netview_offsetfromdp(6604112);
        xsim_sc_channel<0, bool > *p_17_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_rvalid.bind(*p_17_s_axi_rvalid);
        p_17_s_axi_rvalid->set_sv_netview_offsetfromdp(6604168);
        xsim_sc_channel<0, bool > *p_17_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_rready.bind(*p_17_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_m_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->m_axi_awaddr.bind(*p_17_m_axi_awaddr);
        p_17_m_axi_awaddr->set_sv_netview_offsetfromdp(6604280);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_m_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->m_axi_awlen.bind(*p_17_m_axi_awlen);
        p_17_m_axi_awlen->set_sv_netview_offsetfromdp(6604336);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->m_axi_awburst.bind(*p_17_m_axi_awburst);
        p_17_m_axi_awburst->set_sv_netview_offsetfromdp(6604392);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m_axi_awlock.bind(*p_17_m_axi_awlock);
        p_17_m_axi_awlock->set_sv_netview_offsetfromdp(6604448);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m_axi_awcache.bind(*p_17_m_axi_awcache);
        p_17_m_axi_awcache->set_sv_netview_offsetfromdp(6604504);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->m_axi_awprot.bind(*p_17_m_axi_awprot);
        p_17_m_axi_awprot->set_sv_netview_offsetfromdp(6604560);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m_axi_awqos.bind(*p_17_m_axi_awqos);
        p_17_m_axi_awqos->set_sv_netview_offsetfromdp(6604616);
        xsim_sc_channel<0, bool > *p_17_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_awvalid.bind(*p_17_m_axi_awvalid);
        p_17_m_axi_awvalid->set_sv_netview_offsetfromdp(6604672);
        xsim_sc_channel<0, bool > *p_17_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_awready.bind(*p_17_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m_axi_awready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_m_axi_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->m_axi_wdata.bind(*p_17_m_axi_wdata);
        p_17_m_axi_wdata->set_sv_netview_offsetfromdp(6604784);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_m_axi_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->m_axi_wstrb.bind(*p_17_m_axi_wstrb);
        p_17_m_axi_wstrb->set_sv_netview_offsetfromdp(6604840);
        xsim_sc_channel<0, bool > *p_17_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_wlast.bind(*p_17_m_axi_wlast);
        p_17_m_axi_wlast->set_sv_netview_offsetfromdp(6604896);
        xsim_sc_channel<0, bool > *p_17_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_wvalid.bind(*p_17_m_axi_wvalid);
        p_17_m_axi_wvalid->set_sv_netview_offsetfromdp(6604952);
        xsim_sc_channel<0, bool > *p_17_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_wready.bind(*p_17_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->m_axi_bresp.bind(*p_17_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_17_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_bvalid.bind(*p_17_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_17_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_bready.bind(*p_17_m_axi_bready);
        p_17_m_axi_bready->set_sv_netview_offsetfromdp(6605176);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_m_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->m_axi_araddr.bind(*p_17_m_axi_araddr);
        p_17_m_axi_araddr->set_sv_netview_offsetfromdp(6605232);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_m_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->m_axi_arlen.bind(*p_17_m_axi_arlen);
        p_17_m_axi_arlen->set_sv_netview_offsetfromdp(6605288);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->m_axi_arburst.bind(*p_17_m_axi_arburst);
        p_17_m_axi_arburst->set_sv_netview_offsetfromdp(6605344);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m_axi_arlock.bind(*p_17_m_axi_arlock);
        p_17_m_axi_arlock->set_sv_netview_offsetfromdp(6605400);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m_axi_arcache.bind(*p_17_m_axi_arcache);
        p_17_m_axi_arcache->set_sv_netview_offsetfromdp(6605456);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->m_axi_arprot.bind(*p_17_m_axi_arprot);
        p_17_m_axi_arprot->set_sv_netview_offsetfromdp(6605512);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m_axi_arqos.bind(*p_17_m_axi_arqos);
        p_17_m_axi_arqos->set_sv_netview_offsetfromdp(6605568);
        xsim_sc_channel<0, bool > *p_17_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_arvalid.bind(*p_17_m_axi_arvalid);
        p_17_m_axi_arvalid->set_sv_netview_offsetfromdp(6605624);
        xsim_sc_channel<0, bool > *p_17_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_arready.bind(*p_17_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m_axi_arready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_m_axi_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->m_axi_rdata.bind(*p_17_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->m_axi_rresp.bind(*p_17_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_17_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_rlast.bind(*p_17_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_17_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_rvalid.bind(*p_17_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_17_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_rready.bind(*p_17_m_axi_rready);
        p_17_m_axi_rready->set_sv_netview_offsetfromdp(6605960);
        sc_inst_18 = new pfm_dynamic_m01_regslice_6(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.slr0.interconnect_axilite_user_0.m01_couplers.m01_regslice");
        sc_inst_18->xsim_set_dbg_index(2595);
        xsim_sc_channel<0, bool > *p_18_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_18->aclk.bind(*p_18_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_18_aclk);
        xsim_sc_channel<0, bool > *p_18_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_18->aresetn.bind(*p_18_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_18_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_18_s_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_18->s_axi_awaddr.bind(*p_18_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->s_axi_awprot.bind(*p_18_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_18_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_awvalid.bind(*p_18_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_18_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_awready.bind(*p_18_s_axi_awready);
        p_18_s_axi_awready->set_sv_netview_offsetfromdp(6867816);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->s_axi_wdata.bind(*p_18_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->s_axi_wstrb.bind(*p_18_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_18_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_wvalid.bind(*p_18_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_18_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_wready.bind(*p_18_s_axi_wready);
        p_18_s_axi_wready->set_sv_netview_offsetfromdp(6868040);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->s_axi_bresp.bind(*p_18_s_axi_bresp);
        p_18_s_axi_bresp->set_sv_netview_offsetfromdp(6868096);
        xsim_sc_channel<0, bool > *p_18_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_bvalid.bind(*p_18_s_axi_bvalid);
        p_18_s_axi_bvalid->set_sv_netview_offsetfromdp(6868152);
        xsim_sc_channel<0, bool > *p_18_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_bready.bind(*p_18_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_18_s_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_18->s_axi_araddr.bind(*p_18_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->s_axi_arprot.bind(*p_18_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_18_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_arvalid.bind(*p_18_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_18_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_arready.bind(*p_18_s_axi_arready);
        p_18_s_axi_arready->set_sv_netview_offsetfromdp(6868432);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->s_axi_rdata.bind(*p_18_s_axi_rdata);
        p_18_s_axi_rdata->set_sv_netview_offsetfromdp(6868488);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->s_axi_rresp.bind(*p_18_s_axi_rresp);
        p_18_s_axi_rresp->set_sv_netview_offsetfromdp(6868544);
        xsim_sc_channel<0, bool > *p_18_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_rvalid.bind(*p_18_s_axi_rvalid);
        p_18_s_axi_rvalid->set_sv_netview_offsetfromdp(6868600);
        xsim_sc_channel<0, bool > *p_18_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_rready.bind(*p_18_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_18_m_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_18->m_axi_awaddr.bind(*p_18_m_axi_awaddr);
        p_18_m_axi_awaddr->set_sv_netview_offsetfromdp(6868712);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->m_axi_awprot.bind(*p_18_m_axi_awprot);
        p_18_m_axi_awprot->set_sv_netview_offsetfromdp(6868768);
        xsim_sc_channel<0, bool > *p_18_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_awvalid.bind(*p_18_m_axi_awvalid);
        p_18_m_axi_awvalid->set_sv_netview_offsetfromdp(6868824);
        xsim_sc_channel<0, bool > *p_18_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_awready.bind(*p_18_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_18_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->m_axi_wdata.bind(*p_18_m_axi_wdata);
        p_18_m_axi_wdata->set_sv_netview_offsetfromdp(6868936);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->m_axi_wstrb.bind(*p_18_m_axi_wstrb);
        p_18_m_axi_wstrb->set_sv_netview_offsetfromdp(6868992);
        xsim_sc_channel<0, bool > *p_18_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_wvalid.bind(*p_18_m_axi_wvalid);
        p_18_m_axi_wvalid->set_sv_netview_offsetfromdp(6869048);
        xsim_sc_channel<0, bool > *p_18_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_wready.bind(*p_18_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_18_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->m_axi_bresp.bind(*p_18_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_18_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_18_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_bvalid.bind(*p_18_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_18_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_18_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_bready.bind(*p_18_m_axi_bready);
        p_18_m_axi_bready->set_sv_netview_offsetfromdp(6869272);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_18_m_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_18->m_axi_araddr.bind(*p_18_m_axi_araddr);
        p_18_m_axi_araddr->set_sv_netview_offsetfromdp(6869328);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->m_axi_arprot.bind(*p_18_m_axi_arprot);
        p_18_m_axi_arprot->set_sv_netview_offsetfromdp(6869384);
        xsim_sc_channel<0, bool > *p_18_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_arvalid.bind(*p_18_m_axi_arvalid);
        p_18_m_axi_arvalid->set_sv_netview_offsetfromdp(6869440);
        xsim_sc_channel<0, bool > *p_18_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_arready.bind(*p_18_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_18_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->m_axi_rdata.bind(*p_18_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_18_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->m_axi_rresp.bind(*p_18_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_18_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_18_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_rvalid.bind(*p_18_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_18_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_18_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_rready.bind(*p_18_m_axi_rready);
        p_18_m_axi_rready->set_sv_netview_offsetfromdp(6869720);
        sc_inst_19 = new pfm_dynamic_xbar_4(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.slr0.interconnect_axilite_user_0.xbar");
        sc_inst_19->xsim_set_dbg_index(1451);
        xsim_sc_channel<0, bool > *p_19_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_19->aclk.bind(*p_19_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_19_aclk);
        xsim_sc_channel<0, bool > *p_19_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_19->aresetn.bind(*p_19_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_19_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_s_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->s_axi_awaddr.bind(*p_19_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->s_axi_awprot.bind(*p_19_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_awprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_s_axi_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->s_axi_awvalid.bind(*p_19_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_s_axi_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->s_axi_awready.bind(*p_19_s_axi_awready);
        p_19_s_axi_awready->set_sv_netview_offsetfromdp(6880280);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_19_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_19->s_axi_wdata.bind(*p_19_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->s_axi_wstrb.bind(*p_19_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_s_axi_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->s_axi_wvalid.bind(*p_19_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_s_axi_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->s_axi_wready.bind(*p_19_s_axi_wready);
        p_19_s_axi_wready->set_sv_netview_offsetfromdp(6880504);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->s_axi_bresp.bind(*p_19_s_axi_bresp);
        p_19_s_axi_bresp->set_sv_netview_offsetfromdp(6880560);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_s_axi_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->s_axi_bvalid.bind(*p_19_s_axi_bvalid);
        p_19_s_axi_bvalid->set_sv_netview_offsetfromdp(6880616);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_s_axi_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->s_axi_bready.bind(*p_19_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_s_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->s_axi_araddr.bind(*p_19_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->s_axi_arprot.bind(*p_19_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_arprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_s_axi_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->s_axi_arvalid.bind(*p_19_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_s_axi_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->s_axi_arready.bind(*p_19_s_axi_arready);
        p_19_s_axi_arready->set_sv_netview_offsetfromdp(6880896);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_19_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_19->s_axi_rdata.bind(*p_19_s_axi_rdata);
        p_19_s_axi_rdata->set_sv_netview_offsetfromdp(6880952);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->s_axi_rresp.bind(*p_19_s_axi_rresp);
        p_19_s_axi_rresp->set_sv_netview_offsetfromdp(6881008);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_s_axi_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->s_axi_rvalid.bind(*p_19_s_axi_rvalid);
        p_19_s_axi_rvalid->set_sv_netview_offsetfromdp(6881064);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_s_axi_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->s_axi_rready.bind(*p_19_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_rready);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_19_m_axi_awaddr = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_19->m_axi_awaddr.bind(*p_19_m_axi_awaddr);
        p_19_m_axi_awaddr->set_sv_netview_offsetfromdp(6881176);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_19_m_axi_awprot = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_19->m_axi_awprot.bind(*p_19_m_axi_awprot);
        p_19_m_axi_awprot->set_sv_netview_offsetfromdp(6881232);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_axi_awvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_axi_awvalid.bind(*p_19_m_axi_awvalid);
        p_19_m_axi_awvalid->set_sv_netview_offsetfromdp(6881288);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_axi_awready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_axi_awready.bind(*p_19_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axi_awready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_m_axi_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->m_axi_wdata.bind(*p_19_m_axi_wdata);
        p_19_m_axi_wdata->set_sv_netview_offsetfromdp(6881400);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_m_axi_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->m_axi_wstrb.bind(*p_19_m_axi_wstrb);
        p_19_m_axi_wstrb->set_sv_netview_offsetfromdp(6881456);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_axi_wvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_axi_wvalid.bind(*p_19_m_axi_wvalid);
        p_19_m_axi_wvalid->set_sv_netview_offsetfromdp(6881512);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_axi_wready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_axi_wready.bind(*p_19_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axi_wready);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_bresp = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_bresp.bind(*p_19_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axi_bresp);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_axi_bvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_axi_bvalid.bind(*p_19_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axi_bvalid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_axi_bready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_axi_bready.bind(*p_19_m_axi_bready);
        p_19_m_axi_bready->set_sv_netview_offsetfromdp(6881736);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_19_m_axi_araddr = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_19->m_axi_araddr.bind(*p_19_m_axi_araddr);
        p_19_m_axi_araddr->set_sv_netview_offsetfromdp(6881792);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_19_m_axi_arprot = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_19->m_axi_arprot.bind(*p_19_m_axi_arprot);
        p_19_m_axi_arprot->set_sv_netview_offsetfromdp(6881848);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_axi_arvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_axi_arvalid.bind(*p_19_m_axi_arvalid);
        p_19_m_axi_arvalid->set_sv_netview_offsetfromdp(6881904);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_axi_arready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_axi_arready.bind(*p_19_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axi_arready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_m_axi_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->m_axi_rdata.bind(*p_19_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axi_rdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_rresp = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_rresp.bind(*p_19_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axi_rresp);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_axi_rvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_axi_rvalid.bind(*p_19_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axi_rvalid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_axi_rready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_axi_rready.bind(*p_19_m_axi_rready);
        p_19_m_axi_rready->set_sv_netview_offsetfromdp(6882184);
        sc_inst_20 = new pfm_dynamic_auto_cc_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.slr1.interconnect_axilite_user_1.m01_couplers.auto_cc");
        sc_inst_20->xsim_set_dbg_index(2792);
        xsim_sc_channel<0, bool > *p_20_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_aclk.bind(*p_20_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_20_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_aresetn.bind(*p_20_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_aresetn);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_20_s_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_20->s_axi_awaddr.bind(*p_20_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->s_axi_awprot.bind(*p_20_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_20_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_awvalid.bind(*p_20_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_20_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_awready.bind(*p_20_s_axi_awready);
        p_20_s_axi_awready->set_sv_netview_offsetfromdp(7375344);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->s_axi_wdata.bind(*p_20_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->s_axi_wstrb.bind(*p_20_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_20_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_wvalid.bind(*p_20_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_20_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_wready.bind(*p_20_s_axi_wready);
        p_20_s_axi_wready->set_sv_netview_offsetfromdp(7375568);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s_axi_bresp.bind(*p_20_s_axi_bresp);
        p_20_s_axi_bresp->set_sv_netview_offsetfromdp(7375624);
        xsim_sc_channel<0, bool > *p_20_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_bvalid.bind(*p_20_s_axi_bvalid);
        p_20_s_axi_bvalid->set_sv_netview_offsetfromdp(7375680);
        xsim_sc_channel<0, bool > *p_20_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_bready.bind(*p_20_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_bready);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_20_s_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_20->s_axi_araddr.bind(*p_20_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->s_axi_arprot.bind(*p_20_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_20_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_arvalid.bind(*p_20_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_20_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_arready.bind(*p_20_s_axi_arready);
        p_20_s_axi_arready->set_sv_netview_offsetfromdp(7375960);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->s_axi_rdata.bind(*p_20_s_axi_rdata);
        p_20_s_axi_rdata->set_sv_netview_offsetfromdp(7376016);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s_axi_rresp.bind(*p_20_s_axi_rresp);
        p_20_s_axi_rresp->set_sv_netview_offsetfromdp(7376072);
        xsim_sc_channel<0, bool > *p_20_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_rvalid.bind(*p_20_s_axi_rvalid);
        p_20_s_axi_rvalid->set_sv_netview_offsetfromdp(7376128);
        xsim_sc_channel<0, bool > *p_20_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_rready.bind(*p_20_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_rready);
        xsim_sc_channel<0, bool > *p_20_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_aclk.bind(*p_20_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_20_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_aresetn.bind(*p_20_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_aresetn);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_20_m_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_20->m_axi_awaddr.bind(*p_20_m_axi_awaddr);
        p_20_m_axi_awaddr->set_sv_netview_offsetfromdp(7376352);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m_axi_awprot.bind(*p_20_m_axi_awprot);
        p_20_m_axi_awprot->set_sv_netview_offsetfromdp(7376408);
        xsim_sc_channel<0, bool > *p_20_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_awvalid.bind(*p_20_m_axi_awvalid);
        p_20_m_axi_awvalid->set_sv_netview_offsetfromdp(7376464);
        xsim_sc_channel<0, bool > *p_20_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_awready.bind(*p_20_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->m_axi_wdata.bind(*p_20_m_axi_wdata);
        p_20_m_axi_wdata->set_sv_netview_offsetfromdp(7376576);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_wstrb.bind(*p_20_m_axi_wstrb);
        p_20_m_axi_wstrb->set_sv_netview_offsetfromdp(7376632);
        xsim_sc_channel<0, bool > *p_20_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_wvalid.bind(*p_20_m_axi_wvalid);
        p_20_m_axi_wvalid->set_sv_netview_offsetfromdp(7376688);
        xsim_sc_channel<0, bool > *p_20_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_wready.bind(*p_20_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_bresp.bind(*p_20_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_20_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_bvalid.bind(*p_20_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_20_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_bready.bind(*p_20_m_axi_bready);
        p_20_m_axi_bready->set_sv_netview_offsetfromdp(7376912);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_20_m_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_20->m_axi_araddr.bind(*p_20_m_axi_araddr);
        p_20_m_axi_araddr->set_sv_netview_offsetfromdp(7376968);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m_axi_arprot.bind(*p_20_m_axi_arprot);
        p_20_m_axi_arprot->set_sv_netview_offsetfromdp(7377024);
        xsim_sc_channel<0, bool > *p_20_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_arvalid.bind(*p_20_m_axi_arvalid);
        p_20_m_axi_arvalid->set_sv_netview_offsetfromdp(7377080);
        xsim_sc_channel<0, bool > *p_20_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_arready.bind(*p_20_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->m_axi_rdata.bind(*p_20_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_rresp.bind(*p_20_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_20_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_rvalid.bind(*p_20_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_20_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_rready.bind(*p_20_m_axi_rready);
        p_20_m_axi_rready->set_sv_netview_offsetfromdp(7377360);
        sc_inst_21 = new pfm_dynamic_m01_regslice_7(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.slr1.interconnect_axilite_user_1.m01_couplers.m01_regslice");
        sc_inst_21->xsim_set_dbg_index(2793);
        xsim_sc_channel<0, bool > *p_21_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_21->aclk.bind(*p_21_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_21_aclk);
        xsim_sc_channel<0, bool > *p_21_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_21->aresetn.bind(*p_21_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_21_aresetn);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_s_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->s_axi_awaddr.bind(*p_21_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->s_axi_awprot.bind(*p_21_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_21_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_awvalid.bind(*p_21_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_21_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_awready.bind(*p_21_s_axi_awready);
        p_21_s_axi_awready->set_sv_netview_offsetfromdp(7377744);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->s_axi_wdata.bind(*p_21_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->s_axi_wstrb.bind(*p_21_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_21_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_wvalid.bind(*p_21_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_21_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_wready.bind(*p_21_s_axi_wready);
        p_21_s_axi_wready->set_sv_netview_offsetfromdp(7377968);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->s_axi_bresp.bind(*p_21_s_axi_bresp);
        p_21_s_axi_bresp->set_sv_netview_offsetfromdp(7378024);
        xsim_sc_channel<0, bool > *p_21_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_bvalid.bind(*p_21_s_axi_bvalid);
        p_21_s_axi_bvalid->set_sv_netview_offsetfromdp(7378080);
        xsim_sc_channel<0, bool > *p_21_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_bready.bind(*p_21_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_bready);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_s_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->s_axi_araddr.bind(*p_21_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->s_axi_arprot.bind(*p_21_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_21_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_arvalid.bind(*p_21_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_21_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_arready.bind(*p_21_s_axi_arready);
        p_21_s_axi_arready->set_sv_netview_offsetfromdp(7378360);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->s_axi_rdata.bind(*p_21_s_axi_rdata);
        p_21_s_axi_rdata->set_sv_netview_offsetfromdp(7378416);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->s_axi_rresp.bind(*p_21_s_axi_rresp);
        p_21_s_axi_rresp->set_sv_netview_offsetfromdp(7378472);
        xsim_sc_channel<0, bool > *p_21_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_rvalid.bind(*p_21_s_axi_rvalid);
        p_21_s_axi_rvalid->set_sv_netview_offsetfromdp(7378528);
        xsim_sc_channel<0, bool > *p_21_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_rready.bind(*p_21_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_rready);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_m_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->m_axi_awaddr.bind(*p_21_m_axi_awaddr);
        p_21_m_axi_awaddr->set_sv_netview_offsetfromdp(7378640);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->m_axi_awprot.bind(*p_21_m_axi_awprot);
        p_21_m_axi_awprot->set_sv_netview_offsetfromdp(7378696);
        xsim_sc_channel<0, bool > *p_21_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_awvalid.bind(*p_21_m_axi_awvalid);
        p_21_m_axi_awvalid->set_sv_netview_offsetfromdp(7378752);
        xsim_sc_channel<0, bool > *p_21_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_awready.bind(*p_21_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->m_axi_wdata.bind(*p_21_m_axi_wdata);
        p_21_m_axi_wdata->set_sv_netview_offsetfromdp(7378864);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_axi_wstrb.bind(*p_21_m_axi_wstrb);
        p_21_m_axi_wstrb->set_sv_netview_offsetfromdp(7378920);
        xsim_sc_channel<0, bool > *p_21_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_wvalid.bind(*p_21_m_axi_wvalid);
        p_21_m_axi_wvalid->set_sv_netview_offsetfromdp(7378976);
        xsim_sc_channel<0, bool > *p_21_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_wready.bind(*p_21_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->m_axi_bresp.bind(*p_21_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_21_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_bvalid.bind(*p_21_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_21_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_bready.bind(*p_21_m_axi_bready);
        p_21_m_axi_bready->set_sv_netview_offsetfromdp(7379200);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_m_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->m_axi_araddr.bind(*p_21_m_axi_araddr);
        p_21_m_axi_araddr->set_sv_netview_offsetfromdp(7379256);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->m_axi_arprot.bind(*p_21_m_axi_arprot);
        p_21_m_axi_arprot->set_sv_netview_offsetfromdp(7379312);
        xsim_sc_channel<0, bool > *p_21_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_arvalid.bind(*p_21_m_axi_arvalid);
        p_21_m_axi_arvalid->set_sv_netview_offsetfromdp(7379368);
        xsim_sc_channel<0, bool > *p_21_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_arready.bind(*p_21_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->m_axi_rdata.bind(*p_21_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->m_axi_rresp.bind(*p_21_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_21_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_rvalid.bind(*p_21_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_21_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_rready.bind(*p_21_m_axi_rready);
        p_21_m_axi_rready->set_sv_netview_offsetfromdp(7379648);
        sc_inst_22 = new pfm_dynamic_xbar_5(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.slr1.interconnect_axilite_user_1.xbar");
        sc_inst_22->xsim_set_dbg_index(1513);
        xsim_sc_channel<0, bool > *p_22_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_22->aclk.bind(*p_22_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_22_aclk);
        xsim_sc_channel<0, bool > *p_22_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_22->aresetn.bind(*p_22_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_22_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_22_s_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_22->s_axi_awaddr.bind(*p_22_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->s_axi_awprot.bind(*p_22_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_awprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_s_axi_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->s_axi_awvalid.bind(*p_22_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_s_axi_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->s_axi_awready.bind(*p_22_s_axi_awready);
        p_22_s_axi_awready->set_sv_netview_offsetfromdp(7390208);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_22_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_22->s_axi_wdata.bind(*p_22_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->s_axi_wstrb.bind(*p_22_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_s_axi_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->s_axi_wvalid.bind(*p_22_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_s_axi_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->s_axi_wready.bind(*p_22_s_axi_wready);
        p_22_s_axi_wready->set_sv_netview_offsetfromdp(7390432);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->s_axi_bresp.bind(*p_22_s_axi_bresp);
        p_22_s_axi_bresp->set_sv_netview_offsetfromdp(7390488);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_s_axi_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->s_axi_bvalid.bind(*p_22_s_axi_bvalid);
        p_22_s_axi_bvalid->set_sv_netview_offsetfromdp(7390544);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_s_axi_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->s_axi_bready.bind(*p_22_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_22_s_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_22->s_axi_araddr.bind(*p_22_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->s_axi_arprot.bind(*p_22_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_arprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_s_axi_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->s_axi_arvalid.bind(*p_22_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_s_axi_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->s_axi_arready.bind(*p_22_s_axi_arready);
        p_22_s_axi_arready->set_sv_netview_offsetfromdp(7390824);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_22_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_22->s_axi_rdata.bind(*p_22_s_axi_rdata);
        p_22_s_axi_rdata->set_sv_netview_offsetfromdp(7390880);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->s_axi_rresp.bind(*p_22_s_axi_rresp);
        p_22_s_axi_rresp->set_sv_netview_offsetfromdp(7390936);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_s_axi_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->s_axi_rvalid.bind(*p_22_s_axi_rvalid);
        p_22_s_axi_rvalid->set_sv_netview_offsetfromdp(7390992);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_s_axi_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->s_axi_rready.bind(*p_22_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_rready);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_22_m_axi_awaddr = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_22->m_axi_awaddr.bind(*p_22_m_axi_awaddr);
        p_22_m_axi_awaddr->set_sv_netview_offsetfromdp(7391104);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_22_m_axi_awprot = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_22->m_axi_awprot.bind(*p_22_m_axi_awprot);
        p_22_m_axi_awprot->set_sv_netview_offsetfromdp(7391160);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_awvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_awvalid.bind(*p_22_m_axi_awvalid);
        p_22_m_axi_awvalid->set_sv_netview_offsetfromdp(7391216);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_awready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_awready.bind(*p_22_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_awready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_22_m_axi_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_22->m_axi_wdata.bind(*p_22_m_axi_wdata);
        p_22_m_axi_wdata->set_sv_netview_offsetfromdp(7391328);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_22_m_axi_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_22->m_axi_wstrb.bind(*p_22_m_axi_wstrb);
        p_22_m_axi_wstrb->set_sv_netview_offsetfromdp(7391384);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_wvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_wvalid.bind(*p_22_m_axi_wvalid);
        p_22_m_axi_wvalid->set_sv_netview_offsetfromdp(7391440);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_wready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_wready.bind(*p_22_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_wready);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_bresp = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_bresp.bind(*p_22_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_bresp);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_bvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_bvalid.bind(*p_22_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_bvalid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_bready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_bready.bind(*p_22_m_axi_bready);
        p_22_m_axi_bready->set_sv_netview_offsetfromdp(7391664);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_22_m_axi_araddr = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_22->m_axi_araddr.bind(*p_22_m_axi_araddr);
        p_22_m_axi_araddr->set_sv_netview_offsetfromdp(7391720);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_22_m_axi_arprot = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_22->m_axi_arprot.bind(*p_22_m_axi_arprot);
        p_22_m_axi_arprot->set_sv_netview_offsetfromdp(7391776);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_arvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_arvalid.bind(*p_22_m_axi_arvalid);
        p_22_m_axi_arvalid->set_sv_netview_offsetfromdp(7391832);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_arready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_arready.bind(*p_22_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_arready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_22_m_axi_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_22->m_axi_rdata.bind(*p_22_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_rdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_rresp = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_rresp.bind(*p_22_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_rresp);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_rvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_rvalid.bind(*p_22_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_rvalid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_rready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_rready.bind(*p_22_m_axi_rready);
        p_22_m_axi_rready->set_sv_netview_offsetfromdp(7392112);
        sc_inst_23 = new pfm_dynamic_smartconn_data_0_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.smartconn_data_0");
        sc_inst_23->xsim_set_dbg_index(74);
        xsim_sc_channel<0, bool > *p_23_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_23->aclk.bind(*p_23_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_23_aclk);
        xsim_sc_channel<0, bool > *p_23_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_23->aresetn.bind(*p_23_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_23_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->S00_AXI_awid.bind(*p_23_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_23_S00_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_23->S00_AXI_awaddr.bind(*p_23_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->S00_AXI_awlen.bind(*p_23_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->S00_AXI_awsize.bind(*p_23_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->S00_AXI_awburst.bind(*p_23_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->S00_AXI_awlock.bind(*p_23_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->S00_AXI_awcache.bind(*p_23_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->S00_AXI_awprot.bind(*p_23_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->S00_AXI_awqos.bind(*p_23_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_awqos);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_awvalid.bind(*p_23_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_awready.bind(*p_23_S00_AXI_awready);
        p_23_S00_AXI_awready->set_sv_netview_offsetfromdp(8648744);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->S00_AXI_wdata.bind(*p_23_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->S00_AXI_wstrb.bind(*p_23_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_wlast.bind(*p_23_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_wlast);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_wvalid.bind(*p_23_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_wready.bind(*p_23_S00_AXI_wready);
        p_23_S00_AXI_wready->set_sv_netview_offsetfromdp(8649024);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->S00_AXI_bid.bind(*p_23_S00_AXI_bid);
        p_23_S00_AXI_bid->set_sv_netview_offsetfromdp(8649080);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->S00_AXI_bresp.bind(*p_23_S00_AXI_bresp);
        p_23_S00_AXI_bresp->set_sv_netview_offsetfromdp(8649136);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_bvalid.bind(*p_23_S00_AXI_bvalid);
        p_23_S00_AXI_bvalid->set_sv_netview_offsetfromdp(8649192);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_bready.bind(*p_23_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->S00_AXI_arid.bind(*p_23_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_23_S00_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_23->S00_AXI_araddr.bind(*p_23_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->S00_AXI_arlen.bind(*p_23_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->S00_AXI_arsize.bind(*p_23_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->S00_AXI_arburst.bind(*p_23_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->S00_AXI_arlock.bind(*p_23_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->S00_AXI_arcache.bind(*p_23_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->S00_AXI_arprot.bind(*p_23_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->S00_AXI_arqos.bind(*p_23_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_arqos);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_arvalid.bind(*p_23_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_arready.bind(*p_23_S00_AXI_arready);
        p_23_S00_AXI_arready->set_sv_netview_offsetfromdp(8649864);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->S00_AXI_rid.bind(*p_23_S00_AXI_rid);
        p_23_S00_AXI_rid->set_sv_netview_offsetfromdp(8649920);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->S00_AXI_rdata.bind(*p_23_S00_AXI_rdata);
        p_23_S00_AXI_rdata->set_sv_netview_offsetfromdp(8649976);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->S00_AXI_rresp.bind(*p_23_S00_AXI_rresp);
        p_23_S00_AXI_rresp->set_sv_netview_offsetfromdp(8650032);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_rlast.bind(*p_23_S00_AXI_rlast);
        p_23_S00_AXI_rlast->set_sv_netview_offsetfromdp(8650088);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_rvalid.bind(*p_23_S00_AXI_rvalid);
        p_23_S00_AXI_rvalid->set_sv_netview_offsetfromdp(8650144);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_rready.bind(*p_23_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_rready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_S01_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->S01_AXI_awid.bind(*p_23_S01_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S01_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_23_S01_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_23->S01_AXI_awaddr.bind(*p_23_S01_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S01_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_S01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->S01_AXI_awlen.bind(*p_23_S01_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S01_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_S01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->S01_AXI_awsize.bind(*p_23_S01_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S01_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_S01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->S01_AXI_awburst.bind(*p_23_S01_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S01_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_S01_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->S01_AXI_awlock.bind(*p_23_S01_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S01_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_S01_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->S01_AXI_awcache.bind(*p_23_S01_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S01_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_S01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->S01_AXI_awprot.bind(*p_23_S01_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S01_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_S01_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->S01_AXI_awqos.bind(*p_23_S01_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S01_AXI_awqos);
        xsim_sc_channel<0, bool > *p_23_S01_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->S01_AXI_awvalid.bind(*p_23_S01_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S01_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_23_S01_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_23->S01_AXI_awready.bind(*p_23_S01_AXI_awready);
        p_23_S01_AXI_awready->set_sv_netview_offsetfromdp(8650816);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_S01_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->S01_AXI_wdata.bind(*p_23_S01_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S01_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_S01_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->S01_AXI_wstrb.bind(*p_23_S01_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S01_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_23_S01_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->S01_AXI_wlast.bind(*p_23_S01_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S01_AXI_wlast);
        xsim_sc_channel<0, bool > *p_23_S01_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->S01_AXI_wvalid.bind(*p_23_S01_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S01_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_23_S01_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_23->S01_AXI_wready.bind(*p_23_S01_AXI_wready);
        p_23_S01_AXI_wready->set_sv_netview_offsetfromdp(8651096);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_S01_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->S01_AXI_bid.bind(*p_23_S01_AXI_bid);
        p_23_S01_AXI_bid->set_sv_netview_offsetfromdp(8651152);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_S01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->S01_AXI_bresp.bind(*p_23_S01_AXI_bresp);
        p_23_S01_AXI_bresp->set_sv_netview_offsetfromdp(8651208);
        xsim_sc_channel<0, bool > *p_23_S01_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->S01_AXI_bvalid.bind(*p_23_S01_AXI_bvalid);
        p_23_S01_AXI_bvalid->set_sv_netview_offsetfromdp(8651264);
        xsim_sc_channel<0, bool > *p_23_S01_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_23->S01_AXI_bready.bind(*p_23_S01_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S01_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_S01_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->S01_AXI_arid.bind(*p_23_S01_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S01_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_23_S01_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_23->S01_AXI_araddr.bind(*p_23_S01_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S01_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_S01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->S01_AXI_arlen.bind(*p_23_S01_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S01_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_S01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->S01_AXI_arsize.bind(*p_23_S01_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S01_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_S01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->S01_AXI_arburst.bind(*p_23_S01_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S01_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_S01_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->S01_AXI_arlock.bind(*p_23_S01_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S01_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_S01_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->S01_AXI_arcache.bind(*p_23_S01_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S01_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_S01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->S01_AXI_arprot.bind(*p_23_S01_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S01_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_S01_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->S01_AXI_arqos.bind(*p_23_S01_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S01_AXI_arqos);
        xsim_sc_channel<0, bool > *p_23_S01_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->S01_AXI_arvalid.bind(*p_23_S01_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S01_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_23_S01_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_23->S01_AXI_arready.bind(*p_23_S01_AXI_arready);
        p_23_S01_AXI_arready->set_sv_netview_offsetfromdp(8651936);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_S01_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->S01_AXI_rid.bind(*p_23_S01_AXI_rid);
        p_23_S01_AXI_rid->set_sv_netview_offsetfromdp(8651992);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_S01_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->S01_AXI_rdata.bind(*p_23_S01_AXI_rdata);
        p_23_S01_AXI_rdata->set_sv_netview_offsetfromdp(8652048);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_S01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->S01_AXI_rresp.bind(*p_23_S01_AXI_rresp);
        p_23_S01_AXI_rresp->set_sv_netview_offsetfromdp(8652104);
        xsim_sc_channel<0, bool > *p_23_S01_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->S01_AXI_rlast.bind(*p_23_S01_AXI_rlast);
        p_23_S01_AXI_rlast->set_sv_netview_offsetfromdp(8652160);
        xsim_sc_channel<0, bool > *p_23_S01_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->S01_AXI_rvalid.bind(*p_23_S01_AXI_rvalid);
        p_23_S01_AXI_rvalid->set_sv_netview_offsetfromdp(8652216);
        xsim_sc_channel<0, bool > *p_23_S01_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_23->S01_AXI_rready.bind(*p_23_S01_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S01_AXI_rready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_S02_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->S02_AXI_awid.bind(*p_23_S02_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S02_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_23_S02_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_23->S02_AXI_awaddr.bind(*p_23_S02_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S02_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_S02_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->S02_AXI_awlen.bind(*p_23_S02_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S02_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_S02_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->S02_AXI_awsize.bind(*p_23_S02_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S02_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_S02_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->S02_AXI_awburst.bind(*p_23_S02_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S02_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_S02_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->S02_AXI_awlock.bind(*p_23_S02_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S02_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_S02_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->S02_AXI_awcache.bind(*p_23_S02_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S02_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_S02_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->S02_AXI_awprot.bind(*p_23_S02_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S02_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_S02_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->S02_AXI_awqos.bind(*p_23_S02_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S02_AXI_awqos);
        xsim_sc_channel<0, bool > *p_23_S02_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->S02_AXI_awvalid.bind(*p_23_S02_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S02_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_23_S02_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_23->S02_AXI_awready.bind(*p_23_S02_AXI_awready);
        p_23_S02_AXI_awready->set_sv_netview_offsetfromdp(8652888);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_S02_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->S02_AXI_wdata.bind(*p_23_S02_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S02_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_S02_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->S02_AXI_wstrb.bind(*p_23_S02_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S02_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_23_S02_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->S02_AXI_wlast.bind(*p_23_S02_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S02_AXI_wlast);
        xsim_sc_channel<0, bool > *p_23_S02_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->S02_AXI_wvalid.bind(*p_23_S02_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S02_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_23_S02_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_23->S02_AXI_wready.bind(*p_23_S02_AXI_wready);
        p_23_S02_AXI_wready->set_sv_netview_offsetfromdp(8653168);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_S02_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->S02_AXI_bid.bind(*p_23_S02_AXI_bid);
        p_23_S02_AXI_bid->set_sv_netview_offsetfromdp(8653224);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_S02_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->S02_AXI_bresp.bind(*p_23_S02_AXI_bresp);
        p_23_S02_AXI_bresp->set_sv_netview_offsetfromdp(8653280);
        xsim_sc_channel<0, bool > *p_23_S02_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->S02_AXI_bvalid.bind(*p_23_S02_AXI_bvalid);
        p_23_S02_AXI_bvalid->set_sv_netview_offsetfromdp(8653336);
        xsim_sc_channel<0, bool > *p_23_S02_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_23->S02_AXI_bready.bind(*p_23_S02_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S02_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_S02_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->S02_AXI_arid.bind(*p_23_S02_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S02_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_23_S02_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_23->S02_AXI_araddr.bind(*p_23_S02_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S02_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_S02_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->S02_AXI_arlen.bind(*p_23_S02_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S02_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_S02_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->S02_AXI_arsize.bind(*p_23_S02_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S02_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_S02_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->S02_AXI_arburst.bind(*p_23_S02_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S02_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_S02_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->S02_AXI_arlock.bind(*p_23_S02_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S02_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_S02_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->S02_AXI_arcache.bind(*p_23_S02_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S02_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_S02_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->S02_AXI_arprot.bind(*p_23_S02_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S02_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_S02_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->S02_AXI_arqos.bind(*p_23_S02_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S02_AXI_arqos);
        xsim_sc_channel<0, bool > *p_23_S02_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->S02_AXI_arvalid.bind(*p_23_S02_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S02_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_23_S02_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_23->S02_AXI_arready.bind(*p_23_S02_AXI_arready);
        p_23_S02_AXI_arready->set_sv_netview_offsetfromdp(8654008);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_S02_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->S02_AXI_rid.bind(*p_23_S02_AXI_rid);
        p_23_S02_AXI_rid->set_sv_netview_offsetfromdp(8654064);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_S02_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->S02_AXI_rdata.bind(*p_23_S02_AXI_rdata);
        p_23_S02_AXI_rdata->set_sv_netview_offsetfromdp(8654120);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_S02_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->S02_AXI_rresp.bind(*p_23_S02_AXI_rresp);
        p_23_S02_AXI_rresp->set_sv_netview_offsetfromdp(8654176);
        xsim_sc_channel<0, bool > *p_23_S02_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->S02_AXI_rlast.bind(*p_23_S02_AXI_rlast);
        p_23_S02_AXI_rlast->set_sv_netview_offsetfromdp(8654232);
        xsim_sc_channel<0, bool > *p_23_S02_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->S02_AXI_rvalid.bind(*p_23_S02_AXI_rvalid);
        p_23_S02_AXI_rvalid->set_sv_netview_offsetfromdp(8654288);
        xsim_sc_channel<0, bool > *p_23_S02_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_23->S02_AXI_rready.bind(*p_23_S02_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S02_AXI_rready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_S03_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->S03_AXI_awid.bind(*p_23_S03_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S03_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_23_S03_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_23->S03_AXI_awaddr.bind(*p_23_S03_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S03_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_S03_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->S03_AXI_awlen.bind(*p_23_S03_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S03_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_S03_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->S03_AXI_awsize.bind(*p_23_S03_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S03_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_S03_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->S03_AXI_awburst.bind(*p_23_S03_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S03_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_S03_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->S03_AXI_awlock.bind(*p_23_S03_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S03_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_S03_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->S03_AXI_awcache.bind(*p_23_S03_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S03_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_S03_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->S03_AXI_awprot.bind(*p_23_S03_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S03_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_S03_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->S03_AXI_awqos.bind(*p_23_S03_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S03_AXI_awqos);
        xsim_sc_channel<0, bool > *p_23_S03_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->S03_AXI_awvalid.bind(*p_23_S03_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S03_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_23_S03_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_23->S03_AXI_awready.bind(*p_23_S03_AXI_awready);
        p_23_S03_AXI_awready->set_sv_netview_offsetfromdp(8654960);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_S03_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->S03_AXI_wdata.bind(*p_23_S03_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S03_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_S03_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->S03_AXI_wstrb.bind(*p_23_S03_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S03_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_23_S03_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->S03_AXI_wlast.bind(*p_23_S03_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S03_AXI_wlast);
        xsim_sc_channel<0, bool > *p_23_S03_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->S03_AXI_wvalid.bind(*p_23_S03_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S03_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_23_S03_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_23->S03_AXI_wready.bind(*p_23_S03_AXI_wready);
        p_23_S03_AXI_wready->set_sv_netview_offsetfromdp(8655240);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_S03_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->S03_AXI_bid.bind(*p_23_S03_AXI_bid);
        p_23_S03_AXI_bid->set_sv_netview_offsetfromdp(8655296);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_S03_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->S03_AXI_bresp.bind(*p_23_S03_AXI_bresp);
        p_23_S03_AXI_bresp->set_sv_netview_offsetfromdp(8655352);
        xsim_sc_channel<0, bool > *p_23_S03_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->S03_AXI_bvalid.bind(*p_23_S03_AXI_bvalid);
        p_23_S03_AXI_bvalid->set_sv_netview_offsetfromdp(8655408);
        xsim_sc_channel<0, bool > *p_23_S03_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_23->S03_AXI_bready.bind(*p_23_S03_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S03_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_S03_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->S03_AXI_arid.bind(*p_23_S03_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S03_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_23_S03_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_23->S03_AXI_araddr.bind(*p_23_S03_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S03_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_S03_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->S03_AXI_arlen.bind(*p_23_S03_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S03_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_S03_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->S03_AXI_arsize.bind(*p_23_S03_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S03_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_S03_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->S03_AXI_arburst.bind(*p_23_S03_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S03_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_S03_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->S03_AXI_arlock.bind(*p_23_S03_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S03_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_S03_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->S03_AXI_arcache.bind(*p_23_S03_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S03_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_S03_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->S03_AXI_arprot.bind(*p_23_S03_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S03_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_S03_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->S03_AXI_arqos.bind(*p_23_S03_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S03_AXI_arqos);
        xsim_sc_channel<0, bool > *p_23_S03_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->S03_AXI_arvalid.bind(*p_23_S03_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S03_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_23_S03_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_23->S03_AXI_arready.bind(*p_23_S03_AXI_arready);
        p_23_S03_AXI_arready->set_sv_netview_offsetfromdp(8656080);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_S03_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->S03_AXI_rid.bind(*p_23_S03_AXI_rid);
        p_23_S03_AXI_rid->set_sv_netview_offsetfromdp(8656136);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_S03_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->S03_AXI_rdata.bind(*p_23_S03_AXI_rdata);
        p_23_S03_AXI_rdata->set_sv_netview_offsetfromdp(8656192);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_S03_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->S03_AXI_rresp.bind(*p_23_S03_AXI_rresp);
        p_23_S03_AXI_rresp->set_sv_netview_offsetfromdp(8656248);
        xsim_sc_channel<0, bool > *p_23_S03_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->S03_AXI_rlast.bind(*p_23_S03_AXI_rlast);
        p_23_S03_AXI_rlast->set_sv_netview_offsetfromdp(8656304);
        xsim_sc_channel<0, bool > *p_23_S03_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->S03_AXI_rvalid.bind(*p_23_S03_AXI_rvalid);
        p_23_S03_AXI_rvalid->set_sv_netview_offsetfromdp(8656360);
        xsim_sc_channel<0, bool > *p_23_S03_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_23->S03_AXI_rready.bind(*p_23_S03_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S03_AXI_rready);
        xsim_sc_channel<39, sc_dt::sc_bv<39> > *p_23_M00_AXI_awaddr = new xsim_sc_channel<39, sc_dt::sc_bv<39> >();
        sc_inst_23->M00_AXI_awaddr.bind(*p_23_M00_AXI_awaddr);
        p_23_M00_AXI_awaddr->set_sv_netview_offsetfromdp(8656472);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->M00_AXI_awlen.bind(*p_23_M00_AXI_awlen);
        p_23_M00_AXI_awlen->set_sv_netview_offsetfromdp(8656528);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->M00_AXI_awsize.bind(*p_23_M00_AXI_awsize);
        p_23_M00_AXI_awsize->set_sv_netview_offsetfromdp(8656584);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->M00_AXI_awburst.bind(*p_23_M00_AXI_awburst);
        p_23_M00_AXI_awburst->set_sv_netview_offsetfromdp(8656640);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->M00_AXI_awlock.bind(*p_23_M00_AXI_awlock);
        p_23_M00_AXI_awlock->set_sv_netview_offsetfromdp(8656696);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M00_AXI_awcache.bind(*p_23_M00_AXI_awcache);
        p_23_M00_AXI_awcache->set_sv_netview_offsetfromdp(8656752);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->M00_AXI_awprot.bind(*p_23_M00_AXI_awprot);
        p_23_M00_AXI_awprot->set_sv_netview_offsetfromdp(8656808);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M00_AXI_awqos.bind(*p_23_M00_AXI_awqos);
        p_23_M00_AXI_awqos->set_sv_netview_offsetfromdp(8656864);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_awvalid.bind(*p_23_M00_AXI_awvalid);
        p_23_M00_AXI_awvalid->set_sv_netview_offsetfromdp(8656920);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_awready.bind(*p_23_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M00_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_M00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->M00_AXI_wdata.bind(*p_23_M00_AXI_wdata);
        p_23_M00_AXI_wdata->set_sv_netview_offsetfromdp(8657032);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M00_AXI_wstrb.bind(*p_23_M00_AXI_wstrb);
        p_23_M00_AXI_wstrb->set_sv_netview_offsetfromdp(8657088);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_wlast.bind(*p_23_M00_AXI_wlast);
        p_23_M00_AXI_wlast->set_sv_netview_offsetfromdp(8657144);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_wvalid.bind(*p_23_M00_AXI_wvalid);
        p_23_M00_AXI_wvalid->set_sv_netview_offsetfromdp(8657200);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_wready.bind(*p_23_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->M00_AXI_bresp.bind(*p_23_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_bvalid.bind(*p_23_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_bready.bind(*p_23_M00_AXI_bready);
        p_23_M00_AXI_bready->set_sv_netview_offsetfromdp(8657424);
        xsim_sc_channel<39, sc_dt::sc_bv<39> > *p_23_M00_AXI_araddr = new xsim_sc_channel<39, sc_dt::sc_bv<39> >();
        sc_inst_23->M00_AXI_araddr.bind(*p_23_M00_AXI_araddr);
        p_23_M00_AXI_araddr->set_sv_netview_offsetfromdp(8657480);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->M00_AXI_arlen.bind(*p_23_M00_AXI_arlen);
        p_23_M00_AXI_arlen->set_sv_netview_offsetfromdp(8657536);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->M00_AXI_arsize.bind(*p_23_M00_AXI_arsize);
        p_23_M00_AXI_arsize->set_sv_netview_offsetfromdp(8657592);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->M00_AXI_arburst.bind(*p_23_M00_AXI_arburst);
        p_23_M00_AXI_arburst->set_sv_netview_offsetfromdp(8657648);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->M00_AXI_arlock.bind(*p_23_M00_AXI_arlock);
        p_23_M00_AXI_arlock->set_sv_netview_offsetfromdp(8657704);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M00_AXI_arcache.bind(*p_23_M00_AXI_arcache);
        p_23_M00_AXI_arcache->set_sv_netview_offsetfromdp(8657760);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->M00_AXI_arprot.bind(*p_23_M00_AXI_arprot);
        p_23_M00_AXI_arprot->set_sv_netview_offsetfromdp(8657816);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M00_AXI_arqos.bind(*p_23_M00_AXI_arqos);
        p_23_M00_AXI_arqos->set_sv_netview_offsetfromdp(8657872);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_arvalid.bind(*p_23_M00_AXI_arvalid);
        p_23_M00_AXI_arvalid->set_sv_netview_offsetfromdp(8657928);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_arready.bind(*p_23_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M00_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_M00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->M00_AXI_rdata.bind(*p_23_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->M00_AXI_rresp.bind(*p_23_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_rlast.bind(*p_23_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_rvalid.bind(*p_23_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_rready.bind(*p_23_M00_AXI_rready);
        p_23_M00_AXI_rready->set_sv_netview_offsetfromdp(8658264);
        xsim_sc_channel<39, sc_dt::sc_bv<39> > *p_23_M01_AXI_awaddr = new xsim_sc_channel<39, sc_dt::sc_bv<39> >();
        sc_inst_23->M01_AXI_awaddr.bind(*p_23_M01_AXI_awaddr);
        p_23_M01_AXI_awaddr->set_sv_netview_offsetfromdp(8658320);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_M01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->M01_AXI_awlen.bind(*p_23_M01_AXI_awlen);
        p_23_M01_AXI_awlen->set_sv_netview_offsetfromdp(8658376);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_M01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->M01_AXI_awsize.bind(*p_23_M01_AXI_awsize);
        p_23_M01_AXI_awsize->set_sv_netview_offsetfromdp(8658432);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_M01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->M01_AXI_awburst.bind(*p_23_M01_AXI_awburst);
        p_23_M01_AXI_awburst->set_sv_netview_offsetfromdp(8658488);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_M01_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->M01_AXI_awlock.bind(*p_23_M01_AXI_awlock);
        p_23_M01_AXI_awlock->set_sv_netview_offsetfromdp(8658544);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M01_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M01_AXI_awcache.bind(*p_23_M01_AXI_awcache);
        p_23_M01_AXI_awcache->set_sv_netview_offsetfromdp(8658600);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_M01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->M01_AXI_awprot.bind(*p_23_M01_AXI_awprot);
        p_23_M01_AXI_awprot->set_sv_netview_offsetfromdp(8658656);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M01_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M01_AXI_awqos.bind(*p_23_M01_AXI_awqos);
        p_23_M01_AXI_awqos->set_sv_netview_offsetfromdp(8658712);
        xsim_sc_channel<0, bool > *p_23_M01_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M01_AXI_awvalid.bind(*p_23_M01_AXI_awvalid);
        p_23_M01_AXI_awvalid->set_sv_netview_offsetfromdp(8658768);
        xsim_sc_channel<0, bool > *p_23_M01_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M01_AXI_awready.bind(*p_23_M01_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M01_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_M01_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->M01_AXI_wdata.bind(*p_23_M01_AXI_wdata);
        p_23_M01_AXI_wdata->set_sv_netview_offsetfromdp(8658880);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M01_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M01_AXI_wstrb.bind(*p_23_M01_AXI_wstrb);
        p_23_M01_AXI_wstrb->set_sv_netview_offsetfromdp(8658936);
        xsim_sc_channel<0, bool > *p_23_M01_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->M01_AXI_wlast.bind(*p_23_M01_AXI_wlast);
        p_23_M01_AXI_wlast->set_sv_netview_offsetfromdp(8658992);
        xsim_sc_channel<0, bool > *p_23_M01_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M01_AXI_wvalid.bind(*p_23_M01_AXI_wvalid);
        p_23_M01_AXI_wvalid->set_sv_netview_offsetfromdp(8659048);
        xsim_sc_channel<0, bool > *p_23_M01_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M01_AXI_wready.bind(*p_23_M01_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M01_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_M01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->M01_AXI_bresp.bind(*p_23_M01_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M01_AXI_bresp);
        xsim_sc_channel<0, bool > *p_23_M01_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M01_AXI_bvalid.bind(*p_23_M01_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M01_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_23_M01_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M01_AXI_bready.bind(*p_23_M01_AXI_bready);
        p_23_M01_AXI_bready->set_sv_netview_offsetfromdp(8659272);
        xsim_sc_channel<39, sc_dt::sc_bv<39> > *p_23_M01_AXI_araddr = new xsim_sc_channel<39, sc_dt::sc_bv<39> >();
        sc_inst_23->M01_AXI_araddr.bind(*p_23_M01_AXI_araddr);
        p_23_M01_AXI_araddr->set_sv_netview_offsetfromdp(8659328);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_M01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->M01_AXI_arlen.bind(*p_23_M01_AXI_arlen);
        p_23_M01_AXI_arlen->set_sv_netview_offsetfromdp(8659384);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_M01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->M01_AXI_arsize.bind(*p_23_M01_AXI_arsize);
        p_23_M01_AXI_arsize->set_sv_netview_offsetfromdp(8659440);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_M01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->M01_AXI_arburst.bind(*p_23_M01_AXI_arburst);
        p_23_M01_AXI_arburst->set_sv_netview_offsetfromdp(8659496);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_M01_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->M01_AXI_arlock.bind(*p_23_M01_AXI_arlock);
        p_23_M01_AXI_arlock->set_sv_netview_offsetfromdp(8659552);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M01_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M01_AXI_arcache.bind(*p_23_M01_AXI_arcache);
        p_23_M01_AXI_arcache->set_sv_netview_offsetfromdp(8659608);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_M01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->M01_AXI_arprot.bind(*p_23_M01_AXI_arprot);
        p_23_M01_AXI_arprot->set_sv_netview_offsetfromdp(8659664);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M01_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M01_AXI_arqos.bind(*p_23_M01_AXI_arqos);
        p_23_M01_AXI_arqos->set_sv_netview_offsetfromdp(8659720);
        xsim_sc_channel<0, bool > *p_23_M01_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M01_AXI_arvalid.bind(*p_23_M01_AXI_arvalid);
        p_23_M01_AXI_arvalid->set_sv_netview_offsetfromdp(8659776);
        xsim_sc_channel<0, bool > *p_23_M01_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M01_AXI_arready.bind(*p_23_M01_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M01_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_M01_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->M01_AXI_rdata.bind(*p_23_M01_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M01_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_M01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->M01_AXI_rresp.bind(*p_23_M01_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M01_AXI_rresp);
        xsim_sc_channel<0, bool > *p_23_M01_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->M01_AXI_rlast.bind(*p_23_M01_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M01_AXI_rlast);
        xsim_sc_channel<0, bool > *p_23_M01_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M01_AXI_rvalid.bind(*p_23_M01_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M01_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_23_M01_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M01_AXI_rready.bind(*p_23_M01_AXI_rready);
        p_23_M01_AXI_rready->set_sv_netview_offsetfromdp(8660112);
        xsim_sc_channel<39, sc_dt::sc_bv<39> > *p_23_M02_AXI_awaddr = new xsim_sc_channel<39, sc_dt::sc_bv<39> >();
        sc_inst_23->M02_AXI_awaddr.bind(*p_23_M02_AXI_awaddr);
        p_23_M02_AXI_awaddr->set_sv_netview_offsetfromdp(8660168);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_M02_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->M02_AXI_awlen.bind(*p_23_M02_AXI_awlen);
        p_23_M02_AXI_awlen->set_sv_netview_offsetfromdp(8660224);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_M02_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->M02_AXI_awsize.bind(*p_23_M02_AXI_awsize);
        p_23_M02_AXI_awsize->set_sv_netview_offsetfromdp(8660280);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_M02_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->M02_AXI_awburst.bind(*p_23_M02_AXI_awburst);
        p_23_M02_AXI_awburst->set_sv_netview_offsetfromdp(8660336);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_M02_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->M02_AXI_awlock.bind(*p_23_M02_AXI_awlock);
        p_23_M02_AXI_awlock->set_sv_netview_offsetfromdp(8660392);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M02_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M02_AXI_awcache.bind(*p_23_M02_AXI_awcache);
        p_23_M02_AXI_awcache->set_sv_netview_offsetfromdp(8660448);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_M02_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->M02_AXI_awprot.bind(*p_23_M02_AXI_awprot);
        p_23_M02_AXI_awprot->set_sv_netview_offsetfromdp(8660504);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M02_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M02_AXI_awqos.bind(*p_23_M02_AXI_awqos);
        p_23_M02_AXI_awqos->set_sv_netview_offsetfromdp(8660560);
        xsim_sc_channel<0, bool > *p_23_M02_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M02_AXI_awvalid.bind(*p_23_M02_AXI_awvalid);
        p_23_M02_AXI_awvalid->set_sv_netview_offsetfromdp(8660616);
        xsim_sc_channel<0, bool > *p_23_M02_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M02_AXI_awready.bind(*p_23_M02_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M02_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_M02_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->M02_AXI_wdata.bind(*p_23_M02_AXI_wdata);
        p_23_M02_AXI_wdata->set_sv_netview_offsetfromdp(8660728);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M02_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M02_AXI_wstrb.bind(*p_23_M02_AXI_wstrb);
        p_23_M02_AXI_wstrb->set_sv_netview_offsetfromdp(8660784);
        xsim_sc_channel<0, bool > *p_23_M02_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->M02_AXI_wlast.bind(*p_23_M02_AXI_wlast);
        p_23_M02_AXI_wlast->set_sv_netview_offsetfromdp(8660840);
        xsim_sc_channel<0, bool > *p_23_M02_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M02_AXI_wvalid.bind(*p_23_M02_AXI_wvalid);
        p_23_M02_AXI_wvalid->set_sv_netview_offsetfromdp(8660896);
        xsim_sc_channel<0, bool > *p_23_M02_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M02_AXI_wready.bind(*p_23_M02_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M02_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_M02_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->M02_AXI_bresp.bind(*p_23_M02_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M02_AXI_bresp);
        xsim_sc_channel<0, bool > *p_23_M02_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M02_AXI_bvalid.bind(*p_23_M02_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M02_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_23_M02_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M02_AXI_bready.bind(*p_23_M02_AXI_bready);
        p_23_M02_AXI_bready->set_sv_netview_offsetfromdp(8661120);
        xsim_sc_channel<39, sc_dt::sc_bv<39> > *p_23_M02_AXI_araddr = new xsim_sc_channel<39, sc_dt::sc_bv<39> >();
        sc_inst_23->M02_AXI_araddr.bind(*p_23_M02_AXI_araddr);
        p_23_M02_AXI_araddr->set_sv_netview_offsetfromdp(8661176);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_M02_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->M02_AXI_arlen.bind(*p_23_M02_AXI_arlen);
        p_23_M02_AXI_arlen->set_sv_netview_offsetfromdp(8661232);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_M02_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->M02_AXI_arsize.bind(*p_23_M02_AXI_arsize);
        p_23_M02_AXI_arsize->set_sv_netview_offsetfromdp(8661288);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_M02_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->M02_AXI_arburst.bind(*p_23_M02_AXI_arburst);
        p_23_M02_AXI_arburst->set_sv_netview_offsetfromdp(8661344);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_M02_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->M02_AXI_arlock.bind(*p_23_M02_AXI_arlock);
        p_23_M02_AXI_arlock->set_sv_netview_offsetfromdp(8661400);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M02_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M02_AXI_arcache.bind(*p_23_M02_AXI_arcache);
        p_23_M02_AXI_arcache->set_sv_netview_offsetfromdp(8661456);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_M02_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->M02_AXI_arprot.bind(*p_23_M02_AXI_arprot);
        p_23_M02_AXI_arprot->set_sv_netview_offsetfromdp(8661512);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M02_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M02_AXI_arqos.bind(*p_23_M02_AXI_arqos);
        p_23_M02_AXI_arqos->set_sv_netview_offsetfromdp(8661568);
        xsim_sc_channel<0, bool > *p_23_M02_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M02_AXI_arvalid.bind(*p_23_M02_AXI_arvalid);
        p_23_M02_AXI_arvalid->set_sv_netview_offsetfromdp(8661624);
        xsim_sc_channel<0, bool > *p_23_M02_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M02_AXI_arready.bind(*p_23_M02_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M02_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_M02_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->M02_AXI_rdata.bind(*p_23_M02_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M02_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_M02_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->M02_AXI_rresp.bind(*p_23_M02_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M02_AXI_rresp);
        xsim_sc_channel<0, bool > *p_23_M02_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->M02_AXI_rlast.bind(*p_23_M02_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M02_AXI_rlast);
        xsim_sc_channel<0, bool > *p_23_M02_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M02_AXI_rvalid.bind(*p_23_M02_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M02_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_23_M02_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M02_AXI_rready.bind(*p_23_M02_AXI_rready);
        p_23_M02_AXI_rready->set_sv_netview_offsetfromdp(8661960);
        xsim_sc_channel<39, sc_dt::sc_bv<39> > *p_23_M03_AXI_awaddr = new xsim_sc_channel<39, sc_dt::sc_bv<39> >();
        sc_inst_23->M03_AXI_awaddr.bind(*p_23_M03_AXI_awaddr);
        p_23_M03_AXI_awaddr->set_sv_netview_offsetfromdp(8662016);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_M03_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->M03_AXI_awlen.bind(*p_23_M03_AXI_awlen);
        p_23_M03_AXI_awlen->set_sv_netview_offsetfromdp(8662072);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_M03_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->M03_AXI_awsize.bind(*p_23_M03_AXI_awsize);
        p_23_M03_AXI_awsize->set_sv_netview_offsetfromdp(8662128);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_M03_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->M03_AXI_awburst.bind(*p_23_M03_AXI_awburst);
        p_23_M03_AXI_awburst->set_sv_netview_offsetfromdp(8662184);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_M03_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->M03_AXI_awlock.bind(*p_23_M03_AXI_awlock);
        p_23_M03_AXI_awlock->set_sv_netview_offsetfromdp(8662240);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M03_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M03_AXI_awcache.bind(*p_23_M03_AXI_awcache);
        p_23_M03_AXI_awcache->set_sv_netview_offsetfromdp(8662296);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_M03_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->M03_AXI_awprot.bind(*p_23_M03_AXI_awprot);
        p_23_M03_AXI_awprot->set_sv_netview_offsetfromdp(8662352);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M03_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M03_AXI_awqos.bind(*p_23_M03_AXI_awqos);
        p_23_M03_AXI_awqos->set_sv_netview_offsetfromdp(8662408);
        xsim_sc_channel<0, bool > *p_23_M03_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M03_AXI_awvalid.bind(*p_23_M03_AXI_awvalid);
        p_23_M03_AXI_awvalid->set_sv_netview_offsetfromdp(8662464);
        xsim_sc_channel<0, bool > *p_23_M03_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M03_AXI_awready.bind(*p_23_M03_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M03_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_M03_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->M03_AXI_wdata.bind(*p_23_M03_AXI_wdata);
        p_23_M03_AXI_wdata->set_sv_netview_offsetfromdp(8662576);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M03_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M03_AXI_wstrb.bind(*p_23_M03_AXI_wstrb);
        p_23_M03_AXI_wstrb->set_sv_netview_offsetfromdp(8662632);
        xsim_sc_channel<0, bool > *p_23_M03_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->M03_AXI_wlast.bind(*p_23_M03_AXI_wlast);
        p_23_M03_AXI_wlast->set_sv_netview_offsetfromdp(8662688);
        xsim_sc_channel<0, bool > *p_23_M03_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M03_AXI_wvalid.bind(*p_23_M03_AXI_wvalid);
        p_23_M03_AXI_wvalid->set_sv_netview_offsetfromdp(8662744);
        xsim_sc_channel<0, bool > *p_23_M03_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M03_AXI_wready.bind(*p_23_M03_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M03_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_M03_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->M03_AXI_bresp.bind(*p_23_M03_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M03_AXI_bresp);
        xsim_sc_channel<0, bool > *p_23_M03_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M03_AXI_bvalid.bind(*p_23_M03_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M03_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_23_M03_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M03_AXI_bready.bind(*p_23_M03_AXI_bready);
        p_23_M03_AXI_bready->set_sv_netview_offsetfromdp(8662968);
        xsim_sc_channel<39, sc_dt::sc_bv<39> > *p_23_M03_AXI_araddr = new xsim_sc_channel<39, sc_dt::sc_bv<39> >();
        sc_inst_23->M03_AXI_araddr.bind(*p_23_M03_AXI_araddr);
        p_23_M03_AXI_araddr->set_sv_netview_offsetfromdp(8663024);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_M03_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->M03_AXI_arlen.bind(*p_23_M03_AXI_arlen);
        p_23_M03_AXI_arlen->set_sv_netview_offsetfromdp(8663080);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_M03_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->M03_AXI_arsize.bind(*p_23_M03_AXI_arsize);
        p_23_M03_AXI_arsize->set_sv_netview_offsetfromdp(8663136);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_M03_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->M03_AXI_arburst.bind(*p_23_M03_AXI_arburst);
        p_23_M03_AXI_arburst->set_sv_netview_offsetfromdp(8663192);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_M03_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->M03_AXI_arlock.bind(*p_23_M03_AXI_arlock);
        p_23_M03_AXI_arlock->set_sv_netview_offsetfromdp(8663248);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M03_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M03_AXI_arcache.bind(*p_23_M03_AXI_arcache);
        p_23_M03_AXI_arcache->set_sv_netview_offsetfromdp(8663304);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_M03_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->M03_AXI_arprot.bind(*p_23_M03_AXI_arprot);
        p_23_M03_AXI_arprot->set_sv_netview_offsetfromdp(8663360);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M03_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M03_AXI_arqos.bind(*p_23_M03_AXI_arqos);
        p_23_M03_AXI_arqos->set_sv_netview_offsetfromdp(8663416);
        xsim_sc_channel<0, bool > *p_23_M03_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M03_AXI_arvalid.bind(*p_23_M03_AXI_arvalid);
        p_23_M03_AXI_arvalid->set_sv_netview_offsetfromdp(8663472);
        xsim_sc_channel<0, bool > *p_23_M03_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M03_AXI_arready.bind(*p_23_M03_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M03_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_M03_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->M03_AXI_rdata.bind(*p_23_M03_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M03_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_M03_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->M03_AXI_rresp.bind(*p_23_M03_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M03_AXI_rresp);
        xsim_sc_channel<0, bool > *p_23_M03_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->M03_AXI_rlast.bind(*p_23_M03_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M03_AXI_rlast);
        xsim_sc_channel<0, bool > *p_23_M03_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M03_AXI_rvalid.bind(*p_23_M03_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M03_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_23_M03_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M03_AXI_rready.bind(*p_23_M03_AXI_rready);
        p_23_M03_AXI_rready->set_sv_netview_offsetfromdp(8663808);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_M04_AXI_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->M04_AXI_awaddr.bind(*p_23_M04_AXI_awaddr);
        p_23_M04_AXI_awaddr->set_sv_netview_offsetfromdp(8663864);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_M04_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->M04_AXI_awlen.bind(*p_23_M04_AXI_awlen);
        p_23_M04_AXI_awlen->set_sv_netview_offsetfromdp(8663920);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_M04_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->M04_AXI_awsize.bind(*p_23_M04_AXI_awsize);
        p_23_M04_AXI_awsize->set_sv_netview_offsetfromdp(8663976);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_M04_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->M04_AXI_awburst.bind(*p_23_M04_AXI_awburst);
        p_23_M04_AXI_awburst->set_sv_netview_offsetfromdp(8664032);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_M04_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->M04_AXI_awlock.bind(*p_23_M04_AXI_awlock);
        p_23_M04_AXI_awlock->set_sv_netview_offsetfromdp(8664088);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M04_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M04_AXI_awcache.bind(*p_23_M04_AXI_awcache);
        p_23_M04_AXI_awcache->set_sv_netview_offsetfromdp(8664144);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_M04_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->M04_AXI_awprot.bind(*p_23_M04_AXI_awprot);
        p_23_M04_AXI_awprot->set_sv_netview_offsetfromdp(8664200);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M04_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M04_AXI_awqos.bind(*p_23_M04_AXI_awqos);
        p_23_M04_AXI_awqos->set_sv_netview_offsetfromdp(8664256);
        xsim_sc_channel<0, bool > *p_23_M04_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M04_AXI_awvalid.bind(*p_23_M04_AXI_awvalid);
        p_23_M04_AXI_awvalid->set_sv_netview_offsetfromdp(8664312);
        xsim_sc_channel<0, bool > *p_23_M04_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M04_AXI_awready.bind(*p_23_M04_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M04_AXI_awready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_23_M04_AXI_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_23->M04_AXI_wdata.bind(*p_23_M04_AXI_wdata);
        p_23_M04_AXI_wdata->set_sv_netview_offsetfromdp(8664424);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_M04_AXI_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->M04_AXI_wstrb.bind(*p_23_M04_AXI_wstrb);
        p_23_M04_AXI_wstrb->set_sv_netview_offsetfromdp(8664480);
        xsim_sc_channel<0, bool > *p_23_M04_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->M04_AXI_wlast.bind(*p_23_M04_AXI_wlast);
        p_23_M04_AXI_wlast->set_sv_netview_offsetfromdp(8664536);
        xsim_sc_channel<0, bool > *p_23_M04_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M04_AXI_wvalid.bind(*p_23_M04_AXI_wvalid);
        p_23_M04_AXI_wvalid->set_sv_netview_offsetfromdp(8664592);
        xsim_sc_channel<0, bool > *p_23_M04_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M04_AXI_wready.bind(*p_23_M04_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M04_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_M04_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->M04_AXI_bresp.bind(*p_23_M04_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M04_AXI_bresp);
        xsim_sc_channel<0, bool > *p_23_M04_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M04_AXI_bvalid.bind(*p_23_M04_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M04_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_23_M04_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M04_AXI_bready.bind(*p_23_M04_AXI_bready);
        p_23_M04_AXI_bready->set_sv_netview_offsetfromdp(8664816);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_M04_AXI_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->M04_AXI_araddr.bind(*p_23_M04_AXI_araddr);
        p_23_M04_AXI_araddr->set_sv_netview_offsetfromdp(8664872);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_M04_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->M04_AXI_arlen.bind(*p_23_M04_AXI_arlen);
        p_23_M04_AXI_arlen->set_sv_netview_offsetfromdp(8664928);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_M04_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->M04_AXI_arsize.bind(*p_23_M04_AXI_arsize);
        p_23_M04_AXI_arsize->set_sv_netview_offsetfromdp(8664984);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_M04_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->M04_AXI_arburst.bind(*p_23_M04_AXI_arburst);
        p_23_M04_AXI_arburst->set_sv_netview_offsetfromdp(8665040);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_M04_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->M04_AXI_arlock.bind(*p_23_M04_AXI_arlock);
        p_23_M04_AXI_arlock->set_sv_netview_offsetfromdp(8665096);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M04_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M04_AXI_arcache.bind(*p_23_M04_AXI_arcache);
        p_23_M04_AXI_arcache->set_sv_netview_offsetfromdp(8665152);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_M04_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->M04_AXI_arprot.bind(*p_23_M04_AXI_arprot);
        p_23_M04_AXI_arprot->set_sv_netview_offsetfromdp(8665208);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M04_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M04_AXI_arqos.bind(*p_23_M04_AXI_arqos);
        p_23_M04_AXI_arqos->set_sv_netview_offsetfromdp(8665264);
        xsim_sc_channel<0, bool > *p_23_M04_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M04_AXI_arvalid.bind(*p_23_M04_AXI_arvalid);
        p_23_M04_AXI_arvalid->set_sv_netview_offsetfromdp(8665320);
        xsim_sc_channel<0, bool > *p_23_M04_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M04_AXI_arready.bind(*p_23_M04_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M04_AXI_arready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_23_M04_AXI_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_23->M04_AXI_rdata.bind(*p_23_M04_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M04_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_M04_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->M04_AXI_rresp.bind(*p_23_M04_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M04_AXI_rresp);
        xsim_sc_channel<0, bool > *p_23_M04_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->M04_AXI_rlast.bind(*p_23_M04_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M04_AXI_rlast);
        xsim_sc_channel<0, bool > *p_23_M04_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M04_AXI_rvalid.bind(*p_23_M04_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M04_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_23_M04_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M04_AXI_rready.bind(*p_23_M04_AXI_rready);
        p_23_M04_AXI_rready->set_sv_netview_offsetfromdp(8665656);
        sc_inst_24 = new pfm_top_sci(".pfm_top_wrapper.pfm_top_i.pfm_top_sci_inst");
        sc_inst_24->xsim_set_dbg_index(24);
        sc_inst_25 = new pfm_top_axi_clock_converter_0_0(".pfm_top_wrapper.pfm_top_i.static_region.axi_clock_converter_0");
        sc_inst_25->xsim_set_dbg_index(437);
        xsim_sc_channel<0, bool > *p_25_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_aclk.bind(*p_25_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_25_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_aresetn.bind(*p_25_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_aresetn);
        xsim_sc_channel<39, sc_dt::sc_bv<39> > *p_25_s_axi_awaddr = new xsim_sc_channel<39, sc_dt::sc_bv<39> >();
        sc_inst_25->s_axi_awaddr.bind(*p_25_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_25_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_25->s_axi_awlen.bind(*p_25_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->s_axi_awsize.bind(*p_25_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->s_axi_awburst.bind(*p_25_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_25_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_25->s_axi_awlock.bind(*p_25_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->s_axi_awcache.bind(*p_25_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->s_axi_awprot.bind(*p_25_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_s_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->s_axi_awregion.bind(*p_25_s_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->s_axi_awqos.bind(*p_25_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_25_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_awvalid.bind(*p_25_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_25_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_awready.bind(*p_25_s_axi_awready);
        p_25_s_axi_awready->set_sv_netview_offsetfromdp(12094656);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_25_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_25->s_axi_wdata.bind(*p_25_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_25_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_25->s_axi_wstrb.bind(*p_25_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_25_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_wlast.bind(*p_25_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_25_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_wvalid.bind(*p_25_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_25_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_wready.bind(*p_25_s_axi_wready);
        p_25_s_axi_wready->set_sv_netview_offsetfromdp(12094936);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->s_axi_bresp.bind(*p_25_s_axi_bresp);
        p_25_s_axi_bresp->set_sv_netview_offsetfromdp(12094992);
        xsim_sc_channel<0, bool > *p_25_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_bvalid.bind(*p_25_s_axi_bvalid);
        p_25_s_axi_bvalid->set_sv_netview_offsetfromdp(12095048);
        xsim_sc_channel<0, bool > *p_25_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_bready.bind(*p_25_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_bready);
        xsim_sc_channel<39, sc_dt::sc_bv<39> > *p_25_s_axi_araddr = new xsim_sc_channel<39, sc_dt::sc_bv<39> >();
        sc_inst_25->s_axi_araddr.bind(*p_25_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_25_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_25->s_axi_arlen.bind(*p_25_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->s_axi_arsize.bind(*p_25_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->s_axi_arburst.bind(*p_25_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_25_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_25->s_axi_arlock.bind(*p_25_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->s_axi_arcache.bind(*p_25_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->s_axi_arprot.bind(*p_25_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_s_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->s_axi_arregion.bind(*p_25_s_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->s_axi_arqos.bind(*p_25_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_25_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_arvalid.bind(*p_25_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_25_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_arready.bind(*p_25_s_axi_arready);
        p_25_s_axi_arready->set_sv_netview_offsetfromdp(12095720);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_25_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_25->s_axi_rdata.bind(*p_25_s_axi_rdata);
        p_25_s_axi_rdata->set_sv_netview_offsetfromdp(12095776);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->s_axi_rresp.bind(*p_25_s_axi_rresp);
        p_25_s_axi_rresp->set_sv_netview_offsetfromdp(12095832);
        xsim_sc_channel<0, bool > *p_25_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_rlast.bind(*p_25_s_axi_rlast);
        p_25_s_axi_rlast->set_sv_netview_offsetfromdp(12095888);
        xsim_sc_channel<0, bool > *p_25_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_rvalid.bind(*p_25_s_axi_rvalid);
        p_25_s_axi_rvalid->set_sv_netview_offsetfromdp(12095944);
        xsim_sc_channel<0, bool > *p_25_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_rready.bind(*p_25_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_rready);
        xsim_sc_channel<0, bool > *p_25_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_aclk.bind(*p_25_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_25_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_aresetn.bind(*p_25_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_aresetn);
        xsim_sc_channel<39, sc_dt::sc_bv<39> > *p_25_m_axi_awaddr = new xsim_sc_channel<39, sc_dt::sc_bv<39> >();
        sc_inst_25->m_axi_awaddr.bind(*p_25_m_axi_awaddr);
        p_25_m_axi_awaddr->set_sv_netview_offsetfromdp(12096168);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_25_m_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_25->m_axi_awlen.bind(*p_25_m_axi_awlen);
        p_25_m_axi_awlen->set_sv_netview_offsetfromdp(12096224);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_m_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->m_axi_awsize.bind(*p_25_m_axi_awsize);
        p_25_m_axi_awsize->set_sv_netview_offsetfromdp(12096280);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->m_axi_awburst.bind(*p_25_m_axi_awburst);
        p_25_m_axi_awburst->set_sv_netview_offsetfromdp(12096336);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_25_m_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_25->m_axi_awlock.bind(*p_25_m_axi_awlock);
        p_25_m_axi_awlock->set_sv_netview_offsetfromdp(12096392);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->m_axi_awcache.bind(*p_25_m_axi_awcache);
        p_25_m_axi_awcache->set_sv_netview_offsetfromdp(12096448);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->m_axi_awprot.bind(*p_25_m_axi_awprot);
        p_25_m_axi_awprot->set_sv_netview_offsetfromdp(12096504);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_m_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->m_axi_awregion.bind(*p_25_m_axi_awregion);
        p_25_m_axi_awregion->set_sv_netview_offsetfromdp(12096560);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->m_axi_awqos.bind(*p_25_m_axi_awqos);
        p_25_m_axi_awqos->set_sv_netview_offsetfromdp(12096616);
        xsim_sc_channel<0, bool > *p_25_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_awvalid.bind(*p_25_m_axi_awvalid);
        p_25_m_axi_awvalid->set_sv_netview_offsetfromdp(12096672);
        xsim_sc_channel<0, bool > *p_25_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_awready.bind(*p_25_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_25_m_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_25->m_axi_wdata.bind(*p_25_m_axi_wdata);
        p_25_m_axi_wdata->set_sv_netview_offsetfromdp(12096784);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_25_m_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_25->m_axi_wstrb.bind(*p_25_m_axi_wstrb);
        p_25_m_axi_wstrb->set_sv_netview_offsetfromdp(12096840);
        xsim_sc_channel<0, bool > *p_25_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_wlast.bind(*p_25_m_axi_wlast);
        p_25_m_axi_wlast->set_sv_netview_offsetfromdp(12096896);
        xsim_sc_channel<0, bool > *p_25_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_wvalid.bind(*p_25_m_axi_wvalid);
        p_25_m_axi_wvalid->set_sv_netview_offsetfromdp(12096952);
        xsim_sc_channel<0, bool > *p_25_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_wready.bind(*p_25_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->m_axi_bresp.bind(*p_25_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_25_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_bvalid.bind(*p_25_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_25_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_bready.bind(*p_25_m_axi_bready);
        p_25_m_axi_bready->set_sv_netview_offsetfromdp(12097176);
        xsim_sc_channel<39, sc_dt::sc_bv<39> > *p_25_m_axi_araddr = new xsim_sc_channel<39, sc_dt::sc_bv<39> >();
        sc_inst_25->m_axi_araddr.bind(*p_25_m_axi_araddr);
        p_25_m_axi_araddr->set_sv_netview_offsetfromdp(12097232);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_25_m_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_25->m_axi_arlen.bind(*p_25_m_axi_arlen);
        p_25_m_axi_arlen->set_sv_netview_offsetfromdp(12097288);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_m_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->m_axi_arsize.bind(*p_25_m_axi_arsize);
        p_25_m_axi_arsize->set_sv_netview_offsetfromdp(12097344);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->m_axi_arburst.bind(*p_25_m_axi_arburst);
        p_25_m_axi_arburst->set_sv_netview_offsetfromdp(12097400);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_25_m_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_25->m_axi_arlock.bind(*p_25_m_axi_arlock);
        p_25_m_axi_arlock->set_sv_netview_offsetfromdp(12097456);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->m_axi_arcache.bind(*p_25_m_axi_arcache);
        p_25_m_axi_arcache->set_sv_netview_offsetfromdp(12097512);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->m_axi_arprot.bind(*p_25_m_axi_arprot);
        p_25_m_axi_arprot->set_sv_netview_offsetfromdp(12097568);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_m_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->m_axi_arregion.bind(*p_25_m_axi_arregion);
        p_25_m_axi_arregion->set_sv_netview_offsetfromdp(12097624);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->m_axi_arqos.bind(*p_25_m_axi_arqos);
        p_25_m_axi_arqos->set_sv_netview_offsetfromdp(12097680);
        xsim_sc_channel<0, bool > *p_25_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_arvalid.bind(*p_25_m_axi_arvalid);
        p_25_m_axi_arvalid->set_sv_netview_offsetfromdp(12097736);
        xsim_sc_channel<0, bool > *p_25_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_arready.bind(*p_25_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_25_m_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_25->m_axi_rdata.bind(*p_25_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->m_axi_rresp.bind(*p_25_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_25_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_rlast.bind(*p_25_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_25_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_rvalid.bind(*p_25_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_25_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_rready.bind(*p_25_m_axi_rready);
        p_25_m_axi_rready->set_sv_netview_offsetfromdp(12098072);
        sc_inst_26 = new pfm_top_axi_vip_0_0(".pfm_top_wrapper.pfm_top_i.static_region.axi_vip_0");
        sc_inst_26->xsim_set_dbg_index(438);
        xsim_sc_channel<0, bool > *p_26_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_26->aclk.bind(*p_26_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_26_aclk);
        xsim_sc_channel<0, bool > *p_26_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_26->aresetn.bind(*p_26_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_26_aresetn);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_26_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_26->s_axi_awaddr.bind(*p_26_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_26_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_26->s_axi_awlen.bind(*p_26_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->s_axi_awburst.bind(*p_26_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_26_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_26->s_axi_awlock.bind(*p_26_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->s_axi_awcache.bind(*p_26_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->s_axi_awprot.bind(*p_26_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->s_axi_awqos.bind(*p_26_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_26_s_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_26->s_axi_awuser.bind(*p_26_s_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_awuser);
        xsim_sc_channel<0, bool > *p_26_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_awvalid.bind(*p_26_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_26_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_awready.bind(*p_26_s_axi_awready);
        p_26_s_axi_awready->set_sv_netview_offsetfromdp(12098792);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_26_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_26->s_axi_wdata.bind(*p_26_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->s_axi_wstrb.bind(*p_26_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_26_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_wlast.bind(*p_26_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_26_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_wvalid.bind(*p_26_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_26_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_wready.bind(*p_26_s_axi_wready);
        p_26_s_axi_wready->set_sv_netview_offsetfromdp(12099072);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->s_axi_bresp.bind(*p_26_s_axi_bresp);
        p_26_s_axi_bresp->set_sv_netview_offsetfromdp(12099128);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_s_axi_buser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->s_axi_buser.bind(*p_26_s_axi_buser);
        p_26_s_axi_buser->set_sv_netview_offsetfromdp(12099184);
        xsim_sc_channel<0, bool > *p_26_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_bvalid.bind(*p_26_s_axi_bvalid);
        p_26_s_axi_bvalid->set_sv_netview_offsetfromdp(12099240);
        xsim_sc_channel<0, bool > *p_26_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_bready.bind(*p_26_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_26_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_26->s_axi_araddr.bind(*p_26_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_26_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_26->s_axi_arlen.bind(*p_26_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->s_axi_arburst.bind(*p_26_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_26_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_26->s_axi_arlock.bind(*p_26_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->s_axi_arcache.bind(*p_26_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->s_axi_arprot.bind(*p_26_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->s_axi_arqos.bind(*p_26_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_26_s_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_26->s_axi_aruser.bind(*p_26_s_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_aruser);
        xsim_sc_channel<0, bool > *p_26_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_arvalid.bind(*p_26_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_26_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_arready.bind(*p_26_s_axi_arready);
        p_26_s_axi_arready->set_sv_netview_offsetfromdp(12099856);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_26_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_26->s_axi_rdata.bind(*p_26_s_axi_rdata);
        p_26_s_axi_rdata->set_sv_netview_offsetfromdp(12099912);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->s_axi_rresp.bind(*p_26_s_axi_rresp);
        p_26_s_axi_rresp->set_sv_netview_offsetfromdp(12099968);
        xsim_sc_channel<0, bool > *p_26_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_rlast.bind(*p_26_s_axi_rlast);
        p_26_s_axi_rlast->set_sv_netview_offsetfromdp(12100024);
        xsim_sc_channel<0, bool > *p_26_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_rvalid.bind(*p_26_s_axi_rvalid);
        p_26_s_axi_rvalid->set_sv_netview_offsetfromdp(12100080);
        xsim_sc_channel<0, bool > *p_26_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_rready.bind(*p_26_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_26_m_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_26->m_axi_awaddr.bind(*p_26_m_axi_awaddr);
        p_26_m_axi_awaddr->set_sv_netview_offsetfromdp(12100192);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_26_m_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_26->m_axi_awlen.bind(*p_26_m_axi_awlen);
        p_26_m_axi_awlen->set_sv_netview_offsetfromdp(12100248);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->m_axi_awburst.bind(*p_26_m_axi_awburst);
        p_26_m_axi_awburst->set_sv_netview_offsetfromdp(12100304);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_26_m_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_26->m_axi_awlock.bind(*p_26_m_axi_awlock);
        p_26_m_axi_awlock->set_sv_netview_offsetfromdp(12100360);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->m_axi_awcache.bind(*p_26_m_axi_awcache);
        p_26_m_axi_awcache->set_sv_netview_offsetfromdp(12100416);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->m_axi_awprot.bind(*p_26_m_axi_awprot);
        p_26_m_axi_awprot->set_sv_netview_offsetfromdp(12100472);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->m_axi_awqos.bind(*p_26_m_axi_awqos);
        p_26_m_axi_awqos->set_sv_netview_offsetfromdp(12100528);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_26_m_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_26->m_axi_awuser.bind(*p_26_m_axi_awuser);
        p_26_m_axi_awuser->set_sv_netview_offsetfromdp(12100584);
        xsim_sc_channel<0, bool > *p_26_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_awvalid.bind(*p_26_m_axi_awvalid);
        p_26_m_axi_awvalid->set_sv_netview_offsetfromdp(12100640);
        xsim_sc_channel<0, bool > *p_26_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_awready.bind(*p_26_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_26_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_26->m_axi_wdata.bind(*p_26_m_axi_wdata);
        p_26_m_axi_wdata->set_sv_netview_offsetfromdp(12100752);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->m_axi_wstrb.bind(*p_26_m_axi_wstrb);
        p_26_m_axi_wstrb->set_sv_netview_offsetfromdp(12100808);
        xsim_sc_channel<0, bool > *p_26_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_wlast.bind(*p_26_m_axi_wlast);
        p_26_m_axi_wlast->set_sv_netview_offsetfromdp(12100864);
        xsim_sc_channel<0, bool > *p_26_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_wvalid.bind(*p_26_m_axi_wvalid);
        p_26_m_axi_wvalid->set_sv_netview_offsetfromdp(12100920);
        xsim_sc_channel<0, bool > *p_26_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_wready.bind(*p_26_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->m_axi_bresp.bind(*p_26_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axi_bresp);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_m_axi_buser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->m_axi_buser.bind(*p_26_m_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axi_buser);
        xsim_sc_channel<0, bool > *p_26_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_bvalid.bind(*p_26_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_26_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_bready.bind(*p_26_m_axi_bready);
        p_26_m_axi_bready->set_sv_netview_offsetfromdp(12101200);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_26_m_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_26->m_axi_araddr.bind(*p_26_m_axi_araddr);
        p_26_m_axi_araddr->set_sv_netview_offsetfromdp(12101256);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_26_m_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_26->m_axi_arlen.bind(*p_26_m_axi_arlen);
        p_26_m_axi_arlen->set_sv_netview_offsetfromdp(12101312);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->m_axi_arburst.bind(*p_26_m_axi_arburst);
        p_26_m_axi_arburst->set_sv_netview_offsetfromdp(12101368);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_26_m_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_26->m_axi_arlock.bind(*p_26_m_axi_arlock);
        p_26_m_axi_arlock->set_sv_netview_offsetfromdp(12101424);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->m_axi_arcache.bind(*p_26_m_axi_arcache);
        p_26_m_axi_arcache->set_sv_netview_offsetfromdp(12101480);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->m_axi_arprot.bind(*p_26_m_axi_arprot);
        p_26_m_axi_arprot->set_sv_netview_offsetfromdp(12101536);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->m_axi_arqos.bind(*p_26_m_axi_arqos);
        p_26_m_axi_arqos->set_sv_netview_offsetfromdp(12101592);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_26_m_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_26->m_axi_aruser.bind(*p_26_m_axi_aruser);
        p_26_m_axi_aruser->set_sv_netview_offsetfromdp(12101648);
        xsim_sc_channel<0, bool > *p_26_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_arvalid.bind(*p_26_m_axi_arvalid);
        p_26_m_axi_arvalid->set_sv_netview_offsetfromdp(12101704);
        xsim_sc_channel<0, bool > *p_26_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_arready.bind(*p_26_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_26_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_26->m_axi_rdata.bind(*p_26_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->m_axi_rresp.bind(*p_26_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_26_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_rlast.bind(*p_26_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_26_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_rvalid.bind(*p_26_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_26_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_rready.bind(*p_26_m_axi_rready);
        p_26_m_axi_rready->set_sv_netview_offsetfromdp(12102040);
        sc_inst_27 = new pfm_top_axi_vip_1_0(".pfm_top_wrapper.pfm_top_i.static_region.axi_vip_1");
        sc_inst_27->xsim_set_dbg_index(439);
        xsim_sc_channel<0, bool > *p_27_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_27->aclk.bind(*p_27_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_27_aclk);
        xsim_sc_channel<0, bool > *p_27_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_27->aresetn.bind(*p_27_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_27_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_27_s_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_27->s_axi_awaddr.bind(*p_27_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_27_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_27->s_axi_awlen.bind(*p_27_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->s_axi_awburst.bind(*p_27_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_27_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_27->s_axi_awlock.bind(*p_27_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->s_axi_awcache.bind(*p_27_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->s_axi_awprot.bind(*p_27_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->s_axi_awqos.bind(*p_27_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_27_s_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_27->s_axi_awuser.bind(*p_27_s_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awuser);
        xsim_sc_channel<0, bool > *p_27_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_awvalid.bind(*p_27_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_27_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_awready.bind(*p_27_s_axi_awready);
        p_27_s_axi_awready->set_sv_netview_offsetfromdp(12102760);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_27_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_27->s_axi_wdata.bind(*p_27_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->s_axi_wstrb.bind(*p_27_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_27_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_wlast.bind(*p_27_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_27_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_wvalid.bind(*p_27_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_27_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_wready.bind(*p_27_s_axi_wready);
        p_27_s_axi_wready->set_sv_netview_offsetfromdp(12103040);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->s_axi_bresp.bind(*p_27_s_axi_bresp);
        p_27_s_axi_bresp->set_sv_netview_offsetfromdp(12103096);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_s_axi_buser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->s_axi_buser.bind(*p_27_s_axi_buser);
        p_27_s_axi_buser->set_sv_netview_offsetfromdp(12103152);
        xsim_sc_channel<0, bool > *p_27_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_bvalid.bind(*p_27_s_axi_bvalid);
        p_27_s_axi_bvalid->set_sv_netview_offsetfromdp(12103208);
        xsim_sc_channel<0, bool > *p_27_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_bready.bind(*p_27_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_27_s_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_27->s_axi_araddr.bind(*p_27_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_27_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_27->s_axi_arlen.bind(*p_27_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->s_axi_arburst.bind(*p_27_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_27_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_27->s_axi_arlock.bind(*p_27_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->s_axi_arcache.bind(*p_27_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->s_axi_arprot.bind(*p_27_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->s_axi_arqos.bind(*p_27_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_27_s_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_27->s_axi_aruser.bind(*p_27_s_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_aruser);
        xsim_sc_channel<0, bool > *p_27_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_arvalid.bind(*p_27_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_27_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_arready.bind(*p_27_s_axi_arready);
        p_27_s_axi_arready->set_sv_netview_offsetfromdp(12103824);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_27_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_27->s_axi_rdata.bind(*p_27_s_axi_rdata);
        p_27_s_axi_rdata->set_sv_netview_offsetfromdp(12103880);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->s_axi_rresp.bind(*p_27_s_axi_rresp);
        p_27_s_axi_rresp->set_sv_netview_offsetfromdp(12103936);
        xsim_sc_channel<0, bool > *p_27_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_rlast.bind(*p_27_s_axi_rlast);
        p_27_s_axi_rlast->set_sv_netview_offsetfromdp(12103992);
        xsim_sc_channel<0, bool > *p_27_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_rvalid.bind(*p_27_s_axi_rvalid);
        p_27_s_axi_rvalid->set_sv_netview_offsetfromdp(12104048);
        xsim_sc_channel<0, bool > *p_27_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_rready.bind(*p_27_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_27_m_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_27->m_axi_awaddr.bind(*p_27_m_axi_awaddr);
        p_27_m_axi_awaddr->set_sv_netview_offsetfromdp(12104160);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_27_m_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_27->m_axi_awlen.bind(*p_27_m_axi_awlen);
        p_27_m_axi_awlen->set_sv_netview_offsetfromdp(12104216);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->m_axi_awburst.bind(*p_27_m_axi_awburst);
        p_27_m_axi_awburst->set_sv_netview_offsetfromdp(12104272);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_27_m_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_27->m_axi_awlock.bind(*p_27_m_axi_awlock);
        p_27_m_axi_awlock->set_sv_netview_offsetfromdp(12104328);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->m_axi_awcache.bind(*p_27_m_axi_awcache);
        p_27_m_axi_awcache->set_sv_netview_offsetfromdp(12104384);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->m_axi_awprot.bind(*p_27_m_axi_awprot);
        p_27_m_axi_awprot->set_sv_netview_offsetfromdp(12104440);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->m_axi_awqos.bind(*p_27_m_axi_awqos);
        p_27_m_axi_awqos->set_sv_netview_offsetfromdp(12104496);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_27_m_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_27->m_axi_awuser.bind(*p_27_m_axi_awuser);
        p_27_m_axi_awuser->set_sv_netview_offsetfromdp(12104552);
        xsim_sc_channel<0, bool > *p_27_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_awvalid.bind(*p_27_m_axi_awvalid);
        p_27_m_axi_awvalid->set_sv_netview_offsetfromdp(12104608);
        xsim_sc_channel<0, bool > *p_27_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_awready.bind(*p_27_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_27_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_27->m_axi_wdata.bind(*p_27_m_axi_wdata);
        p_27_m_axi_wdata->set_sv_netview_offsetfromdp(12104720);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->m_axi_wstrb.bind(*p_27_m_axi_wstrb);
        p_27_m_axi_wstrb->set_sv_netview_offsetfromdp(12104776);
        xsim_sc_channel<0, bool > *p_27_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_wlast.bind(*p_27_m_axi_wlast);
        p_27_m_axi_wlast->set_sv_netview_offsetfromdp(12104832);
        xsim_sc_channel<0, bool > *p_27_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_wvalid.bind(*p_27_m_axi_wvalid);
        p_27_m_axi_wvalid->set_sv_netview_offsetfromdp(12104888);
        xsim_sc_channel<0, bool > *p_27_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_wready.bind(*p_27_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->m_axi_bresp.bind(*p_27_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_bresp);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_m_axi_buser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->m_axi_buser.bind(*p_27_m_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_buser);
        xsim_sc_channel<0, bool > *p_27_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_bvalid.bind(*p_27_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_27_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_bready.bind(*p_27_m_axi_bready);
        p_27_m_axi_bready->set_sv_netview_offsetfromdp(12105168);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_27_m_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_27->m_axi_araddr.bind(*p_27_m_axi_araddr);
        p_27_m_axi_araddr->set_sv_netview_offsetfromdp(12105224);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_27_m_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_27->m_axi_arlen.bind(*p_27_m_axi_arlen);
        p_27_m_axi_arlen->set_sv_netview_offsetfromdp(12105280);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->m_axi_arburst.bind(*p_27_m_axi_arburst);
        p_27_m_axi_arburst->set_sv_netview_offsetfromdp(12105336);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_27_m_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_27->m_axi_arlock.bind(*p_27_m_axi_arlock);
        p_27_m_axi_arlock->set_sv_netview_offsetfromdp(12105392);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->m_axi_arcache.bind(*p_27_m_axi_arcache);
        p_27_m_axi_arcache->set_sv_netview_offsetfromdp(12105448);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->m_axi_arprot.bind(*p_27_m_axi_arprot);
        p_27_m_axi_arprot->set_sv_netview_offsetfromdp(12105504);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->m_axi_arqos.bind(*p_27_m_axi_arqos);
        p_27_m_axi_arqos->set_sv_netview_offsetfromdp(12105560);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_27_m_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_27->m_axi_aruser.bind(*p_27_m_axi_aruser);
        p_27_m_axi_aruser->set_sv_netview_offsetfromdp(12105616);
        xsim_sc_channel<0, bool > *p_27_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_arvalid.bind(*p_27_m_axi_arvalid);
        p_27_m_axi_arvalid->set_sv_netview_offsetfromdp(12105672);
        xsim_sc_channel<0, bool > *p_27_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_arready.bind(*p_27_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_27_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_27->m_axi_rdata.bind(*p_27_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->m_axi_rresp.bind(*p_27_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_27_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_rlast.bind(*p_27_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_27_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_rvalid.bind(*p_27_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_27_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_rready.bind(*p_27_m_axi_rready);
        p_27_m_axi_rready->set_sv_netview_offsetfromdp(12106008);
        sc_inst_28 = new pfm_top_axi_vip_2_0(".pfm_top_wrapper.pfm_top_i.static_region.axi_vip_2");
        sc_inst_28->xsim_set_dbg_index(440);
        xsim_sc_channel<0, bool > *p_28_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_28->aclk.bind(*p_28_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_28_aclk);
        xsim_sc_channel<0, bool > *p_28_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_28->aresetn.bind(*p_28_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_28_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_28_s_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_28->s_axi_awaddr.bind(*p_28_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_28_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_28->s_axi_awlen.bind(*p_28_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->s_axi_awburst.bind(*p_28_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_28_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_28->s_axi_awlock.bind(*p_28_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->s_axi_awcache.bind(*p_28_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_28_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_28->s_axi_awprot.bind(*p_28_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->s_axi_awqos.bind(*p_28_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_28_s_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_28->s_axi_awuser.bind(*p_28_s_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_awuser);
        xsim_sc_channel<0, bool > *p_28_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_awvalid.bind(*p_28_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_28_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_awready.bind(*p_28_s_axi_awready);
        p_28_s_axi_awready->set_sv_netview_offsetfromdp(12106728);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_28_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_28->s_axi_wdata.bind(*p_28_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->s_axi_wstrb.bind(*p_28_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_28_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_wlast.bind(*p_28_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_28_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_wvalid.bind(*p_28_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_28_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_wready.bind(*p_28_s_axi_wready);
        p_28_s_axi_wready->set_sv_netview_offsetfromdp(12107008);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->s_axi_bresp.bind(*p_28_s_axi_bresp);
        p_28_s_axi_bresp->set_sv_netview_offsetfromdp(12107064);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_s_axi_buser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->s_axi_buser.bind(*p_28_s_axi_buser);
        p_28_s_axi_buser->set_sv_netview_offsetfromdp(12107120);
        xsim_sc_channel<0, bool > *p_28_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_bvalid.bind(*p_28_s_axi_bvalid);
        p_28_s_axi_bvalid->set_sv_netview_offsetfromdp(12107176);
        xsim_sc_channel<0, bool > *p_28_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_bready.bind(*p_28_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_28_s_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_28->s_axi_araddr.bind(*p_28_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_28_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_28->s_axi_arlen.bind(*p_28_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->s_axi_arburst.bind(*p_28_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_28_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_28->s_axi_arlock.bind(*p_28_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->s_axi_arcache.bind(*p_28_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_28_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_28->s_axi_arprot.bind(*p_28_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->s_axi_arqos.bind(*p_28_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_28_s_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_28->s_axi_aruser.bind(*p_28_s_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_aruser);
        xsim_sc_channel<0, bool > *p_28_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_arvalid.bind(*p_28_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_28_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_arready.bind(*p_28_s_axi_arready);
        p_28_s_axi_arready->set_sv_netview_offsetfromdp(12107792);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_28_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_28->s_axi_rdata.bind(*p_28_s_axi_rdata);
        p_28_s_axi_rdata->set_sv_netview_offsetfromdp(12107848);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->s_axi_rresp.bind(*p_28_s_axi_rresp);
        p_28_s_axi_rresp->set_sv_netview_offsetfromdp(12107904);
        xsim_sc_channel<0, bool > *p_28_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_rlast.bind(*p_28_s_axi_rlast);
        p_28_s_axi_rlast->set_sv_netview_offsetfromdp(12107960);
        xsim_sc_channel<0, bool > *p_28_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_rvalid.bind(*p_28_s_axi_rvalid);
        p_28_s_axi_rvalid->set_sv_netview_offsetfromdp(12108016);
        xsim_sc_channel<0, bool > *p_28_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_rready.bind(*p_28_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_28_m_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_28->m_axi_awaddr.bind(*p_28_m_axi_awaddr);
        p_28_m_axi_awaddr->set_sv_netview_offsetfromdp(12108128);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_28_m_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_28->m_axi_awlen.bind(*p_28_m_axi_awlen);
        p_28_m_axi_awlen->set_sv_netview_offsetfromdp(12108184);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->m_axi_awburst.bind(*p_28_m_axi_awburst);
        p_28_m_axi_awburst->set_sv_netview_offsetfromdp(12108240);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_28_m_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_28->m_axi_awlock.bind(*p_28_m_axi_awlock);
        p_28_m_axi_awlock->set_sv_netview_offsetfromdp(12108296);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->m_axi_awcache.bind(*p_28_m_axi_awcache);
        p_28_m_axi_awcache->set_sv_netview_offsetfromdp(12108352);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_28_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_28->m_axi_awprot.bind(*p_28_m_axi_awprot);
        p_28_m_axi_awprot->set_sv_netview_offsetfromdp(12108408);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->m_axi_awqos.bind(*p_28_m_axi_awqos);
        p_28_m_axi_awqos->set_sv_netview_offsetfromdp(12108464);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_28_m_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_28->m_axi_awuser.bind(*p_28_m_axi_awuser);
        p_28_m_axi_awuser->set_sv_netview_offsetfromdp(12108520);
        xsim_sc_channel<0, bool > *p_28_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->m_axi_awvalid.bind(*p_28_m_axi_awvalid);
        p_28_m_axi_awvalid->set_sv_netview_offsetfromdp(12108576);
        xsim_sc_channel<0, bool > *p_28_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_28->m_axi_awready.bind(*p_28_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_28_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_28_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_28->m_axi_wdata.bind(*p_28_m_axi_wdata);
        p_28_m_axi_wdata->set_sv_netview_offsetfromdp(12108688);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->m_axi_wstrb.bind(*p_28_m_axi_wstrb);
        p_28_m_axi_wstrb->set_sv_netview_offsetfromdp(12108744);
        xsim_sc_channel<0, bool > *p_28_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_28->m_axi_wlast.bind(*p_28_m_axi_wlast);
        p_28_m_axi_wlast->set_sv_netview_offsetfromdp(12108800);
        xsim_sc_channel<0, bool > *p_28_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->m_axi_wvalid.bind(*p_28_m_axi_wvalid);
        p_28_m_axi_wvalid->set_sv_netview_offsetfromdp(12108856);
        xsim_sc_channel<0, bool > *p_28_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_28->m_axi_wready.bind(*p_28_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_28_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->m_axi_bresp.bind(*p_28_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_28_m_axi_bresp);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_m_axi_buser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->m_axi_buser.bind(*p_28_m_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_28_m_axi_buser);
        xsim_sc_channel<0, bool > *p_28_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->m_axi_bvalid.bind(*p_28_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_28_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_28_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_28->m_axi_bready.bind(*p_28_m_axi_bready);
        p_28_m_axi_bready->set_sv_netview_offsetfromdp(12109136);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_28_m_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_28->m_axi_araddr.bind(*p_28_m_axi_araddr);
        p_28_m_axi_araddr->set_sv_netview_offsetfromdp(12109192);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_28_m_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_28->m_axi_arlen.bind(*p_28_m_axi_arlen);
        p_28_m_axi_arlen->set_sv_netview_offsetfromdp(12109248);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->m_axi_arburst.bind(*p_28_m_axi_arburst);
        p_28_m_axi_arburst->set_sv_netview_offsetfromdp(12109304);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_28_m_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_28->m_axi_arlock.bind(*p_28_m_axi_arlock);
        p_28_m_axi_arlock->set_sv_netview_offsetfromdp(12109360);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->m_axi_arcache.bind(*p_28_m_axi_arcache);
        p_28_m_axi_arcache->set_sv_netview_offsetfromdp(12109416);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_28_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_28->m_axi_arprot.bind(*p_28_m_axi_arprot);
        p_28_m_axi_arprot->set_sv_netview_offsetfromdp(12109472);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->m_axi_arqos.bind(*p_28_m_axi_arqos);
        p_28_m_axi_arqos->set_sv_netview_offsetfromdp(12109528);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_28_m_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_28->m_axi_aruser.bind(*p_28_m_axi_aruser);
        p_28_m_axi_aruser->set_sv_netview_offsetfromdp(12109584);
        xsim_sc_channel<0, bool > *p_28_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->m_axi_arvalid.bind(*p_28_m_axi_arvalid);
        p_28_m_axi_arvalid->set_sv_netview_offsetfromdp(12109640);
        xsim_sc_channel<0, bool > *p_28_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_28->m_axi_arready.bind(*p_28_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_28_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_28_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_28->m_axi_rdata.bind(*p_28_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_28_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->m_axi_rresp.bind(*p_28_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_28_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_28_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_28->m_axi_rlast.bind(*p_28_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_28_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_28_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->m_axi_rvalid.bind(*p_28_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_28_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_28_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_28->m_axi_rready.bind(*p_28_m_axi_rready);
        p_28_m_axi_rready->set_sv_netview_offsetfromdp(12109976);
        sc_inst_29 = new pfm_top_axi_vip_3_0(".pfm_top_wrapper.pfm_top_i.static_region.axi_vip_3");
        sc_inst_29->xsim_set_dbg_index(441);
        xsim_sc_channel<0, bool > *p_29_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_29->aclk.bind(*p_29_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_29_aclk);
        xsim_sc_channel<0, bool > *p_29_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_29->aresetn.bind(*p_29_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_29_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_29_s_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_29->s_axi_awaddr.bind(*p_29_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_29_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_29->s_axi_awlen.bind(*p_29_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->s_axi_awburst.bind(*p_29_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_29_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_29->s_axi_awlock.bind(*p_29_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->s_axi_awcache.bind(*p_29_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_29_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_29->s_axi_awprot.bind(*p_29_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->s_axi_awqos.bind(*p_29_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_29_s_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_29->s_axi_awuser.bind(*p_29_s_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_awuser);
        xsim_sc_channel<0, bool > *p_29_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_awvalid.bind(*p_29_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_29_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_awready.bind(*p_29_s_axi_awready);
        p_29_s_axi_awready->set_sv_netview_offsetfromdp(12110696);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_29_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_29->s_axi_wdata.bind(*p_29_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->s_axi_wstrb.bind(*p_29_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_29_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_wlast.bind(*p_29_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_29_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_wvalid.bind(*p_29_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_29_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_wready.bind(*p_29_s_axi_wready);
        p_29_s_axi_wready->set_sv_netview_offsetfromdp(12110976);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->s_axi_bresp.bind(*p_29_s_axi_bresp);
        p_29_s_axi_bresp->set_sv_netview_offsetfromdp(12111032);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_s_axi_buser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->s_axi_buser.bind(*p_29_s_axi_buser);
        p_29_s_axi_buser->set_sv_netview_offsetfromdp(12111088);
        xsim_sc_channel<0, bool > *p_29_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_bvalid.bind(*p_29_s_axi_bvalid);
        p_29_s_axi_bvalid->set_sv_netview_offsetfromdp(12111144);
        xsim_sc_channel<0, bool > *p_29_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_bready.bind(*p_29_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_29_s_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_29->s_axi_araddr.bind(*p_29_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_29_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_29->s_axi_arlen.bind(*p_29_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->s_axi_arburst.bind(*p_29_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_29_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_29->s_axi_arlock.bind(*p_29_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->s_axi_arcache.bind(*p_29_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_29_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_29->s_axi_arprot.bind(*p_29_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->s_axi_arqos.bind(*p_29_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_29_s_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_29->s_axi_aruser.bind(*p_29_s_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_aruser);
        xsim_sc_channel<0, bool > *p_29_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_arvalid.bind(*p_29_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_29_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_arready.bind(*p_29_s_axi_arready);
        p_29_s_axi_arready->set_sv_netview_offsetfromdp(12111760);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_29_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_29->s_axi_rdata.bind(*p_29_s_axi_rdata);
        p_29_s_axi_rdata->set_sv_netview_offsetfromdp(12111816);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->s_axi_rresp.bind(*p_29_s_axi_rresp);
        p_29_s_axi_rresp->set_sv_netview_offsetfromdp(12111872);
        xsim_sc_channel<0, bool > *p_29_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_rlast.bind(*p_29_s_axi_rlast);
        p_29_s_axi_rlast->set_sv_netview_offsetfromdp(12111928);
        xsim_sc_channel<0, bool > *p_29_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_rvalid.bind(*p_29_s_axi_rvalid);
        p_29_s_axi_rvalid->set_sv_netview_offsetfromdp(12111984);
        xsim_sc_channel<0, bool > *p_29_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_rready.bind(*p_29_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_29_m_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_29->m_axi_awaddr.bind(*p_29_m_axi_awaddr);
        p_29_m_axi_awaddr->set_sv_netview_offsetfromdp(12112096);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_29_m_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_29->m_axi_awlen.bind(*p_29_m_axi_awlen);
        p_29_m_axi_awlen->set_sv_netview_offsetfromdp(12112152);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->m_axi_awburst.bind(*p_29_m_axi_awburst);
        p_29_m_axi_awburst->set_sv_netview_offsetfromdp(12112208);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_29_m_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_29->m_axi_awlock.bind(*p_29_m_axi_awlock);
        p_29_m_axi_awlock->set_sv_netview_offsetfromdp(12112264);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->m_axi_awcache.bind(*p_29_m_axi_awcache);
        p_29_m_axi_awcache->set_sv_netview_offsetfromdp(12112320);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_29_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_29->m_axi_awprot.bind(*p_29_m_axi_awprot);
        p_29_m_axi_awprot->set_sv_netview_offsetfromdp(12112376);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->m_axi_awqos.bind(*p_29_m_axi_awqos);
        p_29_m_axi_awqos->set_sv_netview_offsetfromdp(12112432);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_29_m_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_29->m_axi_awuser.bind(*p_29_m_axi_awuser);
        p_29_m_axi_awuser->set_sv_netview_offsetfromdp(12112488);
        xsim_sc_channel<0, bool > *p_29_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_awvalid.bind(*p_29_m_axi_awvalid);
        p_29_m_axi_awvalid->set_sv_netview_offsetfromdp(12112544);
        xsim_sc_channel<0, bool > *p_29_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_awready.bind(*p_29_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_29_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_29->m_axi_wdata.bind(*p_29_m_axi_wdata);
        p_29_m_axi_wdata->set_sv_netview_offsetfromdp(12112656);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->m_axi_wstrb.bind(*p_29_m_axi_wstrb);
        p_29_m_axi_wstrb->set_sv_netview_offsetfromdp(12112712);
        xsim_sc_channel<0, bool > *p_29_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_wlast.bind(*p_29_m_axi_wlast);
        p_29_m_axi_wlast->set_sv_netview_offsetfromdp(12112768);
        xsim_sc_channel<0, bool > *p_29_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_wvalid.bind(*p_29_m_axi_wvalid);
        p_29_m_axi_wvalid->set_sv_netview_offsetfromdp(12112824);
        xsim_sc_channel<0, bool > *p_29_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_wready.bind(*p_29_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->m_axi_bresp.bind(*p_29_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_bresp);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_m_axi_buser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->m_axi_buser.bind(*p_29_m_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_buser);
        xsim_sc_channel<0, bool > *p_29_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_bvalid.bind(*p_29_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_29_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_bready.bind(*p_29_m_axi_bready);
        p_29_m_axi_bready->set_sv_netview_offsetfromdp(12113104);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_29_m_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_29->m_axi_araddr.bind(*p_29_m_axi_araddr);
        p_29_m_axi_araddr->set_sv_netview_offsetfromdp(12113160);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_29_m_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_29->m_axi_arlen.bind(*p_29_m_axi_arlen);
        p_29_m_axi_arlen->set_sv_netview_offsetfromdp(12113216);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->m_axi_arburst.bind(*p_29_m_axi_arburst);
        p_29_m_axi_arburst->set_sv_netview_offsetfromdp(12113272);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_29_m_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_29->m_axi_arlock.bind(*p_29_m_axi_arlock);
        p_29_m_axi_arlock->set_sv_netview_offsetfromdp(12113328);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->m_axi_arcache.bind(*p_29_m_axi_arcache);
        p_29_m_axi_arcache->set_sv_netview_offsetfromdp(12113384);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_29_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_29->m_axi_arprot.bind(*p_29_m_axi_arprot);
        p_29_m_axi_arprot->set_sv_netview_offsetfromdp(12113440);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->m_axi_arqos.bind(*p_29_m_axi_arqos);
        p_29_m_axi_arqos->set_sv_netview_offsetfromdp(12113496);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_29_m_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_29->m_axi_aruser.bind(*p_29_m_axi_aruser);
        p_29_m_axi_aruser->set_sv_netview_offsetfromdp(12113552);
        xsim_sc_channel<0, bool > *p_29_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_arvalid.bind(*p_29_m_axi_arvalid);
        p_29_m_axi_arvalid->set_sv_netview_offsetfromdp(12113608);
        xsim_sc_channel<0, bool > *p_29_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_arready.bind(*p_29_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_29_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_29->m_axi_rdata.bind(*p_29_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->m_axi_rresp.bind(*p_29_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_29_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_rlast.bind(*p_29_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_29_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_rvalid.bind(*p_29_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_29_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_rready.bind(*p_29_m_axi_rready);
        p_29_m_axi_rready->set_sv_netview_offsetfromdp(12113944);
        sc_inst_30 = new pfm_top_xbar_0(".pfm_top_wrapper.pfm_top_i.static_region.connect_to_es_cu.xbar");
        sc_inst_30->xsim_set_dbg_index(1015);
        xsim_sc_channel<0, bool > *p_30_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_30->aclk.bind(*p_30_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_30_aclk);
        xsim_sc_channel<0, bool > *p_30_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_30->aresetn.bind(*p_30_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_30_aresetn);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_30_s_axi_awaddr = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_30->s_axi_awaddr.bind(*p_30_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_awaddr);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_30_s_axi_awprot = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_30->s_axi_awprot.bind(*p_30_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_awprot);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_s_axi_awvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->s_axi_awvalid.bind(*p_30_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_awvalid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_s_axi_awready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->s_axi_awready.bind(*p_30_s_axi_awready);
        p_30_s_axi_awready->set_sv_netview_offsetfromdp(12246048);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_30_s_axi_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_30->s_axi_wdata.bind(*p_30_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_wdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_30_s_axi_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_30->s_axi_wstrb.bind(*p_30_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_wstrb);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_s_axi_wvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->s_axi_wvalid.bind(*p_30_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_wvalid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_s_axi_wready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->s_axi_wready.bind(*p_30_s_axi_wready);
        p_30_s_axi_wready->set_sv_netview_offsetfromdp(12246272);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_s_axi_bresp = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->s_axi_bresp.bind(*p_30_s_axi_bresp);
        p_30_s_axi_bresp->set_sv_netview_offsetfromdp(12246328);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_s_axi_bvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->s_axi_bvalid.bind(*p_30_s_axi_bvalid);
        p_30_s_axi_bvalid->set_sv_netview_offsetfromdp(12246384);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_s_axi_bready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->s_axi_bready.bind(*p_30_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_bready);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_30_s_axi_araddr = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_30->s_axi_araddr.bind(*p_30_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_araddr);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_30_s_axi_arprot = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_30->s_axi_arprot.bind(*p_30_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_arprot);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_s_axi_arvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->s_axi_arvalid.bind(*p_30_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_arvalid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_s_axi_arready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->s_axi_arready.bind(*p_30_s_axi_arready);
        p_30_s_axi_arready->set_sv_netview_offsetfromdp(12246664);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_30_s_axi_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_30->s_axi_rdata.bind(*p_30_s_axi_rdata);
        p_30_s_axi_rdata->set_sv_netview_offsetfromdp(12246720);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_s_axi_rresp = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->s_axi_rresp.bind(*p_30_s_axi_rresp);
        p_30_s_axi_rresp->set_sv_netview_offsetfromdp(12246776);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_s_axi_rvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->s_axi_rvalid.bind(*p_30_s_axi_rvalid);
        p_30_s_axi_rvalid->set_sv_netview_offsetfromdp(12246832);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_s_axi_rready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->s_axi_rready.bind(*p_30_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_rready);
        xsim_sc_channel<320, sc_dt::sc_bv<320> > *p_30_m_axi_awaddr = new xsim_sc_channel<320, sc_dt::sc_bv<320> >();
        sc_inst_30->m_axi_awaddr.bind(*p_30_m_axi_awaddr);
        p_30_m_axi_awaddr->set_sv_netview_offsetfromdp(12246944);
        xsim_sc_channel<15, sc_dt::sc_bv<15> > *p_30_m_axi_awprot = new xsim_sc_channel<15, sc_dt::sc_bv<15> >();
        sc_inst_30->m_axi_awprot.bind(*p_30_m_axi_awprot);
        p_30_m_axi_awprot->set_sv_netview_offsetfromdp(12247000);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_30_m_axi_awvalid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_30->m_axi_awvalid.bind(*p_30_m_axi_awvalid);
        p_30_m_axi_awvalid->set_sv_netview_offsetfromdp(12247056);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_30_m_axi_awready = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_30->m_axi_awready.bind(*p_30_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_awready);
        xsim_sc_channel<160, sc_dt::sc_bv<160> > *p_30_m_axi_wdata = new xsim_sc_channel<160, sc_dt::sc_bv<160> >();
        sc_inst_30->m_axi_wdata.bind(*p_30_m_axi_wdata);
        p_30_m_axi_wdata->set_sv_netview_offsetfromdp(12247168);
        xsim_sc_channel<20, sc_dt::sc_bv<20> > *p_30_m_axi_wstrb = new xsim_sc_channel<20, sc_dt::sc_bv<20> >();
        sc_inst_30->m_axi_wstrb.bind(*p_30_m_axi_wstrb);
        p_30_m_axi_wstrb->set_sv_netview_offsetfromdp(12247224);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_30_m_axi_wvalid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_30->m_axi_wvalid.bind(*p_30_m_axi_wvalid);
        p_30_m_axi_wvalid->set_sv_netview_offsetfromdp(12247280);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_30_m_axi_wready = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_30->m_axi_wready.bind(*p_30_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_wready);
        xsim_sc_channel<10, sc_dt::sc_bv<10> > *p_30_m_axi_bresp = new xsim_sc_channel<10, sc_dt::sc_bv<10> >();
        sc_inst_30->m_axi_bresp.bind(*p_30_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_bresp);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_30_m_axi_bvalid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_30->m_axi_bvalid.bind(*p_30_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_bvalid);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_30_m_axi_bready = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_30->m_axi_bready.bind(*p_30_m_axi_bready);
        p_30_m_axi_bready->set_sv_netview_offsetfromdp(12247504);
        xsim_sc_channel<320, sc_dt::sc_bv<320> > *p_30_m_axi_araddr = new xsim_sc_channel<320, sc_dt::sc_bv<320> >();
        sc_inst_30->m_axi_araddr.bind(*p_30_m_axi_araddr);
        p_30_m_axi_araddr->set_sv_netview_offsetfromdp(12247560);
        xsim_sc_channel<15, sc_dt::sc_bv<15> > *p_30_m_axi_arprot = new xsim_sc_channel<15, sc_dt::sc_bv<15> >();
        sc_inst_30->m_axi_arprot.bind(*p_30_m_axi_arprot);
        p_30_m_axi_arprot->set_sv_netview_offsetfromdp(12247616);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_30_m_axi_arvalid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_30->m_axi_arvalid.bind(*p_30_m_axi_arvalid);
        p_30_m_axi_arvalid->set_sv_netview_offsetfromdp(12247672);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_30_m_axi_arready = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_30->m_axi_arready.bind(*p_30_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_arready);
        xsim_sc_channel<160, sc_dt::sc_bv<160> > *p_30_m_axi_rdata = new xsim_sc_channel<160, sc_dt::sc_bv<160> >();
        sc_inst_30->m_axi_rdata.bind(*p_30_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_rdata);
        xsim_sc_channel<10, sc_dt::sc_bv<10> > *p_30_m_axi_rresp = new xsim_sc_channel<10, sc_dt::sc_bv<10> >();
        sc_inst_30->m_axi_rresp.bind(*p_30_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_rresp);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_30_m_axi_rvalid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_30->m_axi_rvalid.bind(*p_30_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_rvalid);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_30_m_axi_rready = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_30->m_axi_rready.bind(*p_30_m_axi_rready);
        p_30_m_axi_rready->set_sv_netview_offsetfromdp(12247952);
        sc_inst_31 = new pfm_top_embedded_schedular_0(".pfm_top_wrapper.pfm_top_i.static_region.embedded_schedular");
        sc_inst_31->xsim_set_dbg_index(445);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_31_interrupt_cu = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_31->interrupt_cu.bind(*p_31_interrupt_cu);
        (*_glb_hdl_sc_channel_map).push_back(p_31_interrupt_cu);
        xsim_sc_channel<0, bool > *p_31_interrupt_m2m = new xsim_sc_channel<0, bool >();
        sc_inst_31->interrupt_m2m.bind(*p_31_interrupt_m2m);
        p_31_interrupt_m2m->set_sv_netview_offsetfromdp(12249840);
        xsim_sc_channel<0, bool > *p_31_s_axi_ctrl_user_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_ctrl_user_aresetn.bind(*p_31_s_axi_ctrl_user_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_ctrl_user_aresetn);
        xsim_sc_channel<0, bool > *p_31_s_axi_data_p2p_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_data_p2p_aresetn.bind(*p_31_s_axi_data_p2p_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_data_p2p_aresetn);
        xsim_sc_channel<0, bool > *p_31_maxi_lite_mb_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_31->maxi_lite_mb_aresetn.bind(*p_31_maxi_lite_mb_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_31_maxi_lite_mb_aresetn);
        xsim_sc_channel<0, bool > *p_31_m_axi_data_m2m_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_data_m2m_aresetn.bind(*p_31_m_axi_data_m2m_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_data_m2m_aresetn);
        xsim_sc_channel<0, bool > *p_31_s_axi_ctrl_user_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_ctrl_user_aclk.bind(*p_31_s_axi_ctrl_user_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_ctrl_user_aclk);
        xsim_sc_channel<0, bool > *p_31_s_axi_data_p2p_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_data_p2p_aclk.bind(*p_31_s_axi_data_p2p_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_data_p2p_aclk);
        xsim_sc_channel<0, bool > *p_31_maxi_lite_mb_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_31->maxi_lite_mb_aclk.bind(*p_31_maxi_lite_mb_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_31_maxi_lite_mb_aclk);
        xsim_sc_channel<0, bool > *p_31_m_axi_data_m2m_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_data_m2m_aclk.bind(*p_31_m_axi_data_m2m_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_data_m2m_aclk);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_31_s_axi_data_p2p_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_31->s_axi_data_p2p_awaddr.bind(*p_31_s_axi_data_p2p_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_data_p2p_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_31_s_axi_data_p2p_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_31->s_axi_data_p2p_awlen.bind(*p_31_s_axi_data_p2p_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_data_p2p_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_s_axi_data_p2p_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->s_axi_data_p2p_awsize.bind(*p_31_s_axi_data_p2p_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_data_p2p_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_s_axi_data_p2p_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->s_axi_data_p2p_awburst.bind(*p_31_s_axi_data_p2p_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_data_p2p_awburst);
        xsim_sc_channel<0, bool > *p_31_s_axi_data_p2p_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_data_p2p_awlock.bind(*p_31_s_axi_data_p2p_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_data_p2p_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_s_axi_data_p2p_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->s_axi_data_p2p_awcache.bind(*p_31_s_axi_data_p2p_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_data_p2p_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_s_axi_data_p2p_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->s_axi_data_p2p_awprot.bind(*p_31_s_axi_data_p2p_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_data_p2p_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_s_axi_data_p2p_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->s_axi_data_p2p_awregion.bind(*p_31_s_axi_data_p2p_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_data_p2p_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_s_axi_data_p2p_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->s_axi_data_p2p_awqos.bind(*p_31_s_axi_data_p2p_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_data_p2p_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_31_s_axi_data_p2p_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_31->s_axi_data_p2p_awuser.bind(*p_31_s_axi_data_p2p_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_data_p2p_awuser);
        xsim_sc_channel<0, bool > *p_31_s_axi_data_p2p_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_data_p2p_awvalid.bind(*p_31_s_axi_data_p2p_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_data_p2p_awvalid);
        xsim_sc_channel<0, bool > *p_31_s_axi_data_p2p_awready = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_data_p2p_awready.bind(*p_31_s_axi_data_p2p_awready);
        p_31_s_axi_data_p2p_awready->set_sv_netview_offsetfromdp(12250960);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_31_s_axi_data_p2p_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_31->s_axi_data_p2p_wdata.bind(*p_31_s_axi_data_p2p_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_data_p2p_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_s_axi_data_p2p_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->s_axi_data_p2p_wstrb.bind(*p_31_s_axi_data_p2p_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_data_p2p_wstrb);
        xsim_sc_channel<0, bool > *p_31_s_axi_data_p2p_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_data_p2p_wlast.bind(*p_31_s_axi_data_p2p_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_data_p2p_wlast);
        xsim_sc_channel<0, bool > *p_31_s_axi_data_p2p_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_data_p2p_wvalid.bind(*p_31_s_axi_data_p2p_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_data_p2p_wvalid);
        xsim_sc_channel<0, bool > *p_31_s_axi_data_p2p_wready = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_data_p2p_wready.bind(*p_31_s_axi_data_p2p_wready);
        p_31_s_axi_data_p2p_wready->set_sv_netview_offsetfromdp(12251240);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_s_axi_data_p2p_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->s_axi_data_p2p_bresp.bind(*p_31_s_axi_data_p2p_bresp);
        p_31_s_axi_data_p2p_bresp->set_sv_netview_offsetfromdp(12251296);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_s_axi_data_p2p_buser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->s_axi_data_p2p_buser.bind(*p_31_s_axi_data_p2p_buser);
        p_31_s_axi_data_p2p_buser->set_sv_netview_offsetfromdp(12251352);
        xsim_sc_channel<0, bool > *p_31_s_axi_data_p2p_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_data_p2p_bvalid.bind(*p_31_s_axi_data_p2p_bvalid);
        p_31_s_axi_data_p2p_bvalid->set_sv_netview_offsetfromdp(12251408);
        xsim_sc_channel<0, bool > *p_31_s_axi_data_p2p_bready = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_data_p2p_bready.bind(*p_31_s_axi_data_p2p_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_data_p2p_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_31_s_axi_data_p2p_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_31->s_axi_data_p2p_araddr.bind(*p_31_s_axi_data_p2p_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_data_p2p_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_31_s_axi_data_p2p_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_31->s_axi_data_p2p_arlen.bind(*p_31_s_axi_data_p2p_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_data_p2p_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_s_axi_data_p2p_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->s_axi_data_p2p_arsize.bind(*p_31_s_axi_data_p2p_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_data_p2p_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_s_axi_data_p2p_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->s_axi_data_p2p_arburst.bind(*p_31_s_axi_data_p2p_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_data_p2p_arburst);
        xsim_sc_channel<0, bool > *p_31_s_axi_data_p2p_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_data_p2p_arlock.bind(*p_31_s_axi_data_p2p_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_data_p2p_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_s_axi_data_p2p_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->s_axi_data_p2p_arcache.bind(*p_31_s_axi_data_p2p_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_data_p2p_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_s_axi_data_p2p_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->s_axi_data_p2p_arprot.bind(*p_31_s_axi_data_p2p_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_data_p2p_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_s_axi_data_p2p_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->s_axi_data_p2p_arregion.bind(*p_31_s_axi_data_p2p_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_data_p2p_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_s_axi_data_p2p_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->s_axi_data_p2p_arqos.bind(*p_31_s_axi_data_p2p_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_data_p2p_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_31_s_axi_data_p2p_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_31->s_axi_data_p2p_aruser.bind(*p_31_s_axi_data_p2p_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_data_p2p_aruser);
        xsim_sc_channel<0, bool > *p_31_s_axi_data_p2p_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_data_p2p_arvalid.bind(*p_31_s_axi_data_p2p_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_data_p2p_arvalid);
        xsim_sc_channel<0, bool > *p_31_s_axi_data_p2p_arready = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_data_p2p_arready.bind(*p_31_s_axi_data_p2p_arready);
        p_31_s_axi_data_p2p_arready->set_sv_netview_offsetfromdp(12252136);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_31_s_axi_data_p2p_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_31->s_axi_data_p2p_rdata.bind(*p_31_s_axi_data_p2p_rdata);
        p_31_s_axi_data_p2p_rdata->set_sv_netview_offsetfromdp(12252192);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_s_axi_data_p2p_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->s_axi_data_p2p_rresp.bind(*p_31_s_axi_data_p2p_rresp);
        p_31_s_axi_data_p2p_rresp->set_sv_netview_offsetfromdp(12252248);
        xsim_sc_channel<0, bool > *p_31_s_axi_data_p2p_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_data_p2p_rlast.bind(*p_31_s_axi_data_p2p_rlast);
        p_31_s_axi_data_p2p_rlast->set_sv_netview_offsetfromdp(12252304);
        xsim_sc_channel<0, bool > *p_31_s_axi_data_p2p_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_data_p2p_rvalid.bind(*p_31_s_axi_data_p2p_rvalid);
        p_31_s_axi_data_p2p_rvalid->set_sv_netview_offsetfromdp(12252360);
        xsim_sc_channel<0, bool > *p_31_s_axi_data_p2p_rready = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_data_p2p_rready.bind(*p_31_s_axi_data_p2p_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_data_p2p_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_31_maxi_lite_mb_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_31->maxi_lite_mb_awaddr.bind(*p_31_maxi_lite_mb_awaddr);
        p_31_maxi_lite_mb_awaddr->set_sv_netview_offsetfromdp(12252472);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_maxi_lite_mb_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->maxi_lite_mb_awprot.bind(*p_31_maxi_lite_mb_awprot);
        p_31_maxi_lite_mb_awprot->set_sv_netview_offsetfromdp(12252528);
        xsim_sc_channel<0, bool > *p_31_maxi_lite_mb_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->maxi_lite_mb_awvalid.bind(*p_31_maxi_lite_mb_awvalid);
        p_31_maxi_lite_mb_awvalid->set_sv_netview_offsetfromdp(12252584);
        xsim_sc_channel<0, bool > *p_31_maxi_lite_mb_awready = new xsim_sc_channel<0, bool >();
        sc_inst_31->maxi_lite_mb_awready.bind(*p_31_maxi_lite_mb_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_maxi_lite_mb_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_31_maxi_lite_mb_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_31->maxi_lite_mb_wdata.bind(*p_31_maxi_lite_mb_wdata);
        p_31_maxi_lite_mb_wdata->set_sv_netview_offsetfromdp(12252696);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_maxi_lite_mb_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->maxi_lite_mb_wstrb.bind(*p_31_maxi_lite_mb_wstrb);
        p_31_maxi_lite_mb_wstrb->set_sv_netview_offsetfromdp(12252752);
        xsim_sc_channel<0, bool > *p_31_maxi_lite_mb_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->maxi_lite_mb_wvalid.bind(*p_31_maxi_lite_mb_wvalid);
        p_31_maxi_lite_mb_wvalid->set_sv_netview_offsetfromdp(12252808);
        xsim_sc_channel<0, bool > *p_31_maxi_lite_mb_wready = new xsim_sc_channel<0, bool >();
        sc_inst_31->maxi_lite_mb_wready.bind(*p_31_maxi_lite_mb_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_maxi_lite_mb_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_maxi_lite_mb_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->maxi_lite_mb_bresp.bind(*p_31_maxi_lite_mb_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_31_maxi_lite_mb_bresp);
        xsim_sc_channel<0, bool > *p_31_maxi_lite_mb_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->maxi_lite_mb_bvalid.bind(*p_31_maxi_lite_mb_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_maxi_lite_mb_bvalid);
        xsim_sc_channel<0, bool > *p_31_maxi_lite_mb_bready = new xsim_sc_channel<0, bool >();
        sc_inst_31->maxi_lite_mb_bready.bind(*p_31_maxi_lite_mb_bready);
        p_31_maxi_lite_mb_bready->set_sv_netview_offsetfromdp(12253032);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_31_maxi_lite_mb_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_31->maxi_lite_mb_araddr.bind(*p_31_maxi_lite_mb_araddr);
        p_31_maxi_lite_mb_araddr->set_sv_netview_offsetfromdp(12253088);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_maxi_lite_mb_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->maxi_lite_mb_arprot.bind(*p_31_maxi_lite_mb_arprot);
        p_31_maxi_lite_mb_arprot->set_sv_netview_offsetfromdp(12253144);
        xsim_sc_channel<0, bool > *p_31_maxi_lite_mb_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->maxi_lite_mb_arvalid.bind(*p_31_maxi_lite_mb_arvalid);
        p_31_maxi_lite_mb_arvalid->set_sv_netview_offsetfromdp(12253200);
        xsim_sc_channel<0, bool > *p_31_maxi_lite_mb_arready = new xsim_sc_channel<0, bool >();
        sc_inst_31->maxi_lite_mb_arready.bind(*p_31_maxi_lite_mb_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_maxi_lite_mb_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_31_maxi_lite_mb_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_31->maxi_lite_mb_rdata.bind(*p_31_maxi_lite_mb_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_31_maxi_lite_mb_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_maxi_lite_mb_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->maxi_lite_mb_rresp.bind(*p_31_maxi_lite_mb_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_31_maxi_lite_mb_rresp);
        xsim_sc_channel<0, bool > *p_31_maxi_lite_mb_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->maxi_lite_mb_rvalid.bind(*p_31_maxi_lite_mb_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_maxi_lite_mb_rvalid);
        xsim_sc_channel<0, bool > *p_31_maxi_lite_mb_rready = new xsim_sc_channel<0, bool >();
        sc_inst_31->maxi_lite_mb_rready.bind(*p_31_maxi_lite_mb_rready);
        p_31_maxi_lite_mb_rready->set_sv_netview_offsetfromdp(12253480);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_31_m_axi_data_m2m_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_31->m_axi_data_m2m_awid.bind(*p_31_m_axi_data_m2m_awid);
        p_31_m_axi_data_m2m_awid->set_sv_netview_offsetfromdp(12253536);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_31_m_axi_data_m2m_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_31->m_axi_data_m2m_awaddr.bind(*p_31_m_axi_data_m2m_awaddr);
        p_31_m_axi_data_m2m_awaddr->set_sv_netview_offsetfromdp(12253592);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_31_m_axi_data_m2m_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_31->m_axi_data_m2m_awlen.bind(*p_31_m_axi_data_m2m_awlen);
        p_31_m_axi_data_m2m_awlen->set_sv_netview_offsetfromdp(12253648);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_m_axi_data_m2m_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->m_axi_data_m2m_awsize.bind(*p_31_m_axi_data_m2m_awsize);
        p_31_m_axi_data_m2m_awsize->set_sv_netview_offsetfromdp(12253704);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_m_axi_data_m2m_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->m_axi_data_m2m_awburst.bind(*p_31_m_axi_data_m2m_awburst);
        p_31_m_axi_data_m2m_awburst->set_sv_netview_offsetfromdp(12253760);
        xsim_sc_channel<0, bool > *p_31_m_axi_data_m2m_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_data_m2m_awlock.bind(*p_31_m_axi_data_m2m_awlock);
        p_31_m_axi_data_m2m_awlock->set_sv_netview_offsetfromdp(12253816);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_m_axi_data_m2m_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->m_axi_data_m2m_awcache.bind(*p_31_m_axi_data_m2m_awcache);
        p_31_m_axi_data_m2m_awcache->set_sv_netview_offsetfromdp(12253872);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_m_axi_data_m2m_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->m_axi_data_m2m_awprot.bind(*p_31_m_axi_data_m2m_awprot);
        p_31_m_axi_data_m2m_awprot->set_sv_netview_offsetfromdp(12253928);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_m_axi_data_m2m_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->m_axi_data_m2m_awqos.bind(*p_31_m_axi_data_m2m_awqos);
        p_31_m_axi_data_m2m_awqos->set_sv_netview_offsetfromdp(12253984);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_m_axi_data_m2m_awuser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->m_axi_data_m2m_awuser.bind(*p_31_m_axi_data_m2m_awuser);
        p_31_m_axi_data_m2m_awuser->set_sv_netview_offsetfromdp(12254040);
        xsim_sc_channel<0, bool > *p_31_m_axi_data_m2m_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_data_m2m_awvalid.bind(*p_31_m_axi_data_m2m_awvalid);
        p_31_m_axi_data_m2m_awvalid->set_sv_netview_offsetfromdp(12254096);
        xsim_sc_channel<0, bool > *p_31_m_axi_data_m2m_awready = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_data_m2m_awready.bind(*p_31_m_axi_data_m2m_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_data_m2m_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_31_m_axi_data_m2m_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_31->m_axi_data_m2m_wdata.bind(*p_31_m_axi_data_m2m_wdata);
        p_31_m_axi_data_m2m_wdata->set_sv_netview_offsetfromdp(12254208);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_m_axi_data_m2m_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->m_axi_data_m2m_wstrb.bind(*p_31_m_axi_data_m2m_wstrb);
        p_31_m_axi_data_m2m_wstrb->set_sv_netview_offsetfromdp(12254264);
        xsim_sc_channel<0, bool > *p_31_m_axi_data_m2m_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_data_m2m_wlast.bind(*p_31_m_axi_data_m2m_wlast);
        p_31_m_axi_data_m2m_wlast->set_sv_netview_offsetfromdp(12254320);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_m_axi_data_m2m_wuser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->m_axi_data_m2m_wuser.bind(*p_31_m_axi_data_m2m_wuser);
        p_31_m_axi_data_m2m_wuser->set_sv_netview_offsetfromdp(12254376);
        xsim_sc_channel<0, bool > *p_31_m_axi_data_m2m_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_data_m2m_wvalid.bind(*p_31_m_axi_data_m2m_wvalid);
        p_31_m_axi_data_m2m_wvalid->set_sv_netview_offsetfromdp(12254432);
        xsim_sc_channel<0, bool > *p_31_m_axi_data_m2m_wready = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_data_m2m_wready.bind(*p_31_m_axi_data_m2m_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_data_m2m_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_31_m_axi_data_m2m_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_31->m_axi_data_m2m_bid.bind(*p_31_m_axi_data_m2m_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_data_m2m_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_m_axi_data_m2m_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->m_axi_data_m2m_bresp.bind(*p_31_m_axi_data_m2m_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_data_m2m_bresp);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_m_axi_data_m2m_buser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->m_axi_data_m2m_buser.bind(*p_31_m_axi_data_m2m_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_data_m2m_buser);
        xsim_sc_channel<0, bool > *p_31_m_axi_data_m2m_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_data_m2m_bvalid.bind(*p_31_m_axi_data_m2m_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_data_m2m_bvalid);
        xsim_sc_channel<0, bool > *p_31_m_axi_data_m2m_bready = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_data_m2m_bready.bind(*p_31_m_axi_data_m2m_bready);
        p_31_m_axi_data_m2m_bready->set_sv_netview_offsetfromdp(12254768);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_31_m_axi_data_m2m_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_31->m_axi_data_m2m_arid.bind(*p_31_m_axi_data_m2m_arid);
        p_31_m_axi_data_m2m_arid->set_sv_netview_offsetfromdp(12254824);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_31_m_axi_data_m2m_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_31->m_axi_data_m2m_araddr.bind(*p_31_m_axi_data_m2m_araddr);
        p_31_m_axi_data_m2m_araddr->set_sv_netview_offsetfromdp(12254880);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_31_m_axi_data_m2m_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_31->m_axi_data_m2m_arlen.bind(*p_31_m_axi_data_m2m_arlen);
        p_31_m_axi_data_m2m_arlen->set_sv_netview_offsetfromdp(12254936);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_m_axi_data_m2m_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->m_axi_data_m2m_arsize.bind(*p_31_m_axi_data_m2m_arsize);
        p_31_m_axi_data_m2m_arsize->set_sv_netview_offsetfromdp(12254992);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_m_axi_data_m2m_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->m_axi_data_m2m_arburst.bind(*p_31_m_axi_data_m2m_arburst);
        p_31_m_axi_data_m2m_arburst->set_sv_netview_offsetfromdp(12255048);
        xsim_sc_channel<0, bool > *p_31_m_axi_data_m2m_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_data_m2m_arlock.bind(*p_31_m_axi_data_m2m_arlock);
        p_31_m_axi_data_m2m_arlock->set_sv_netview_offsetfromdp(12255104);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_m_axi_data_m2m_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->m_axi_data_m2m_arcache.bind(*p_31_m_axi_data_m2m_arcache);
        p_31_m_axi_data_m2m_arcache->set_sv_netview_offsetfromdp(12255160);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_m_axi_data_m2m_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->m_axi_data_m2m_arprot.bind(*p_31_m_axi_data_m2m_arprot);
        p_31_m_axi_data_m2m_arprot->set_sv_netview_offsetfromdp(12255216);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_m_axi_data_m2m_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->m_axi_data_m2m_arqos.bind(*p_31_m_axi_data_m2m_arqos);
        p_31_m_axi_data_m2m_arqos->set_sv_netview_offsetfromdp(12255272);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_m_axi_data_m2m_aruser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->m_axi_data_m2m_aruser.bind(*p_31_m_axi_data_m2m_aruser);
        p_31_m_axi_data_m2m_aruser->set_sv_netview_offsetfromdp(12255328);
        xsim_sc_channel<0, bool > *p_31_m_axi_data_m2m_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_data_m2m_arvalid.bind(*p_31_m_axi_data_m2m_arvalid);
        p_31_m_axi_data_m2m_arvalid->set_sv_netview_offsetfromdp(12255384);
        xsim_sc_channel<0, bool > *p_31_m_axi_data_m2m_arready = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_data_m2m_arready.bind(*p_31_m_axi_data_m2m_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_data_m2m_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_31_m_axi_data_m2m_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_31->m_axi_data_m2m_rid.bind(*p_31_m_axi_data_m2m_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_data_m2m_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_31_m_axi_data_m2m_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_31->m_axi_data_m2m_rdata.bind(*p_31_m_axi_data_m2m_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_data_m2m_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_m_axi_data_m2m_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->m_axi_data_m2m_rresp.bind(*p_31_m_axi_data_m2m_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_data_m2m_rresp);
        xsim_sc_channel<0, bool > *p_31_m_axi_data_m2m_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_data_m2m_rlast.bind(*p_31_m_axi_data_m2m_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_data_m2m_rlast);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_m_axi_data_m2m_ruser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->m_axi_data_m2m_ruser.bind(*p_31_m_axi_data_m2m_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_data_m2m_ruser);
        xsim_sc_channel<0, bool > *p_31_m_axi_data_m2m_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_data_m2m_rvalid.bind(*p_31_m_axi_data_m2m_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_data_m2m_rvalid);
        xsim_sc_channel<0, bool > *p_31_m_axi_data_m2m_rready = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_data_m2m_rready.bind(*p_31_m_axi_data_m2m_rready);
        p_31_m_axi_data_m2m_rready->set_sv_netview_offsetfromdp(12255832);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_31_s_axi_ctrl_user_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_31->s_axi_ctrl_user_awaddr.bind(*p_31_s_axi_ctrl_user_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_ctrl_user_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_s_axi_ctrl_user_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->s_axi_ctrl_user_awprot.bind(*p_31_s_axi_ctrl_user_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_ctrl_user_awprot);
        xsim_sc_channel<0, bool > *p_31_s_axi_ctrl_user_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_ctrl_user_awvalid.bind(*p_31_s_axi_ctrl_user_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_ctrl_user_awvalid);
        xsim_sc_channel<0, bool > *p_31_s_axi_ctrl_user_awready = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_ctrl_user_awready.bind(*p_31_s_axi_ctrl_user_awready);
        p_31_s_axi_ctrl_user_awready->set_sv_netview_offsetfromdp(12256056);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_31_s_axi_ctrl_user_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_31->s_axi_ctrl_user_wdata.bind(*p_31_s_axi_ctrl_user_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_ctrl_user_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_s_axi_ctrl_user_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->s_axi_ctrl_user_wstrb.bind(*p_31_s_axi_ctrl_user_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_ctrl_user_wstrb);
        xsim_sc_channel<0, bool > *p_31_s_axi_ctrl_user_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_ctrl_user_wvalid.bind(*p_31_s_axi_ctrl_user_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_ctrl_user_wvalid);
        xsim_sc_channel<0, bool > *p_31_s_axi_ctrl_user_wready = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_ctrl_user_wready.bind(*p_31_s_axi_ctrl_user_wready);
        p_31_s_axi_ctrl_user_wready->set_sv_netview_offsetfromdp(12256280);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_s_axi_ctrl_user_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->s_axi_ctrl_user_bresp.bind(*p_31_s_axi_ctrl_user_bresp);
        p_31_s_axi_ctrl_user_bresp->set_sv_netview_offsetfromdp(12256336);
        xsim_sc_channel<0, bool > *p_31_s_axi_ctrl_user_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_ctrl_user_bvalid.bind(*p_31_s_axi_ctrl_user_bvalid);
        p_31_s_axi_ctrl_user_bvalid->set_sv_netview_offsetfromdp(12256392);
        xsim_sc_channel<0, bool > *p_31_s_axi_ctrl_user_bready = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_ctrl_user_bready.bind(*p_31_s_axi_ctrl_user_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_ctrl_user_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_31_s_axi_ctrl_user_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_31->s_axi_ctrl_user_araddr.bind(*p_31_s_axi_ctrl_user_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_ctrl_user_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_s_axi_ctrl_user_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->s_axi_ctrl_user_arprot.bind(*p_31_s_axi_ctrl_user_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_ctrl_user_arprot);
        xsim_sc_channel<0, bool > *p_31_s_axi_ctrl_user_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_ctrl_user_arvalid.bind(*p_31_s_axi_ctrl_user_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_ctrl_user_arvalid);
        xsim_sc_channel<0, bool > *p_31_s_axi_ctrl_user_arready = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_ctrl_user_arready.bind(*p_31_s_axi_ctrl_user_arready);
        p_31_s_axi_ctrl_user_arready->set_sv_netview_offsetfromdp(12256672);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_31_s_axi_ctrl_user_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_31->s_axi_ctrl_user_rdata.bind(*p_31_s_axi_ctrl_user_rdata);
        p_31_s_axi_ctrl_user_rdata->set_sv_netview_offsetfromdp(12256728);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_s_axi_ctrl_user_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->s_axi_ctrl_user_rresp.bind(*p_31_s_axi_ctrl_user_rresp);
        p_31_s_axi_ctrl_user_rresp->set_sv_netview_offsetfromdp(12256784);
        xsim_sc_channel<0, bool > *p_31_s_axi_ctrl_user_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_ctrl_user_rvalid.bind(*p_31_s_axi_ctrl_user_rvalid);
        p_31_s_axi_ctrl_user_rvalid->set_sv_netview_offsetfromdp(12256840);
        xsim_sc_channel<0, bool > *p_31_s_axi_ctrl_user_rready = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_ctrl_user_rready.bind(*p_31_s_axi_ctrl_user_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_ctrl_user_rready);
        sc_inst_32 = new pfm_top_sim_address_0_0(".pfm_top_wrapper.pfm_top_i.static_region.sim_address_0");
        sc_inst_32->xsim_set_dbg_index(447);
        xsim_sc_channel<0, bool > *p_32_m_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_aximm_aclk.bind(*p_32_m_aximm_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_aximm_aclk);
        xsim_sc_channel<0, bool > *p_32_m_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_aximm_aresetn.bind(*p_32_m_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_32_s_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_aximm_aclk.bind(*p_32_s_aximm_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_aximm_aclk);
        xsim_sc_channel<0, bool > *p_32_s_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_aximm_aresetn.bind(*p_32_s_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_32_m_aximm_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_aximm_AWVALID.bind(*p_32_m_aximm_AWVALID);
        p_32_m_aximm_AWVALID->set_sv_netview_offsetfromdp(12303400);
        xsim_sc_channel<0, bool > *p_32_m_aximm_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_aximm_AWREADY.bind(*p_32_m_aximm_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_aximm_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_32_m_aximm_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_32->m_aximm_AWADDR.bind(*p_32_m_aximm_AWADDR);
        p_32_m_aximm_AWADDR->set_sv_netview_offsetfromdp(12303512);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_32_m_aximm_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_32->m_aximm_AWID.bind(*p_32_m_aximm_AWID);
        p_32_m_aximm_AWID->set_sv_netview_offsetfromdp(12303568);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_32_m_aximm_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_32->m_aximm_AWLEN.bind(*p_32_m_aximm_AWLEN);
        p_32_m_aximm_AWLEN->set_sv_netview_offsetfromdp(12303624);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_m_aximm_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->m_aximm_AWSIZE.bind(*p_32_m_aximm_AWSIZE);
        p_32_m_aximm_AWSIZE->set_sv_netview_offsetfromdp(12303680);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_m_aximm_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->m_aximm_AWBURST.bind(*p_32_m_aximm_AWBURST);
        p_32_m_aximm_AWBURST->set_sv_netview_offsetfromdp(12303736);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_32_m_aximm_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_32->m_aximm_AWLOCK.bind(*p_32_m_aximm_AWLOCK);
        p_32_m_aximm_AWLOCK->set_sv_netview_offsetfromdp(12303792);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_m_aximm_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->m_aximm_AWCACHE.bind(*p_32_m_aximm_AWCACHE);
        p_32_m_aximm_AWCACHE->set_sv_netview_offsetfromdp(12303848);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_m_aximm_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->m_aximm_AWPROT.bind(*p_32_m_aximm_AWPROT);
        p_32_m_aximm_AWPROT->set_sv_netview_offsetfromdp(12303904);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_m_aximm_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->m_aximm_AWREGION.bind(*p_32_m_aximm_AWREGION);
        p_32_m_aximm_AWREGION->set_sv_netview_offsetfromdp(12303960);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_m_aximm_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->m_aximm_AWQOS.bind(*p_32_m_aximm_AWQOS);
        p_32_m_aximm_AWQOS->set_sv_netview_offsetfromdp(12304016);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_32_m_aximm_AWUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_32->m_aximm_AWUSER.bind(*p_32_m_aximm_AWUSER);
        p_32_m_aximm_AWUSER->set_sv_netview_offsetfromdp(12304072);
        xsim_sc_channel<0, bool > *p_32_m_aximm_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_aximm_WVALID.bind(*p_32_m_aximm_WVALID);
        p_32_m_aximm_WVALID->set_sv_netview_offsetfromdp(12304128);
        xsim_sc_channel<0, bool > *p_32_m_aximm_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_aximm_WREADY.bind(*p_32_m_aximm_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_aximm_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_32_m_aximm_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_32->m_aximm_WDATA.bind(*p_32_m_aximm_WDATA);
        p_32_m_aximm_WDATA->set_sv_netview_offsetfromdp(12304240);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_m_aximm_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->m_aximm_WSTRB.bind(*p_32_m_aximm_WSTRB);
        p_32_m_aximm_WSTRB->set_sv_netview_offsetfromdp(12304296);
        xsim_sc_channel<0, bool > *p_32_m_aximm_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_aximm_WLAST.bind(*p_32_m_aximm_WLAST);
        p_32_m_aximm_WLAST->set_sv_netview_offsetfromdp(12304352);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_32_m_aximm_WUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_32->m_aximm_WUSER.bind(*p_32_m_aximm_WUSER);
        p_32_m_aximm_WUSER->set_sv_netview_offsetfromdp(12304408);
        xsim_sc_channel<0, bool > *p_32_m_aximm_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_aximm_ARVALID.bind(*p_32_m_aximm_ARVALID);
        p_32_m_aximm_ARVALID->set_sv_netview_offsetfromdp(12304464);
        xsim_sc_channel<0, bool > *p_32_m_aximm_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_aximm_ARREADY.bind(*p_32_m_aximm_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_aximm_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_32_m_aximm_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_32->m_aximm_ARADDR.bind(*p_32_m_aximm_ARADDR);
        p_32_m_aximm_ARADDR->set_sv_netview_offsetfromdp(12304576);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_32_m_aximm_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_32->m_aximm_ARID.bind(*p_32_m_aximm_ARID);
        p_32_m_aximm_ARID->set_sv_netview_offsetfromdp(12304632);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_32_m_aximm_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_32->m_aximm_ARLEN.bind(*p_32_m_aximm_ARLEN);
        p_32_m_aximm_ARLEN->set_sv_netview_offsetfromdp(12304688);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_m_aximm_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->m_aximm_ARSIZE.bind(*p_32_m_aximm_ARSIZE);
        p_32_m_aximm_ARSIZE->set_sv_netview_offsetfromdp(12304744);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_m_aximm_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->m_aximm_ARBURST.bind(*p_32_m_aximm_ARBURST);
        p_32_m_aximm_ARBURST->set_sv_netview_offsetfromdp(12304800);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_32_m_aximm_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_32->m_aximm_ARLOCK.bind(*p_32_m_aximm_ARLOCK);
        p_32_m_aximm_ARLOCK->set_sv_netview_offsetfromdp(12304856);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_m_aximm_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->m_aximm_ARCACHE.bind(*p_32_m_aximm_ARCACHE);
        p_32_m_aximm_ARCACHE->set_sv_netview_offsetfromdp(12304912);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_m_aximm_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->m_aximm_ARPROT.bind(*p_32_m_aximm_ARPROT);
        p_32_m_aximm_ARPROT->set_sv_netview_offsetfromdp(12304968);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_m_aximm_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->m_aximm_ARREGION.bind(*p_32_m_aximm_ARREGION);
        p_32_m_aximm_ARREGION->set_sv_netview_offsetfromdp(12305024);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_m_aximm_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->m_aximm_ARQOS.bind(*p_32_m_aximm_ARQOS);
        p_32_m_aximm_ARQOS->set_sv_netview_offsetfromdp(12305080);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_32_m_aximm_ARUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_32->m_aximm_ARUSER.bind(*p_32_m_aximm_ARUSER);
        p_32_m_aximm_ARUSER->set_sv_netview_offsetfromdp(12305136);
        xsim_sc_channel<0, bool > *p_32_m_aximm_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_aximm_RVALID.bind(*p_32_m_aximm_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_aximm_RVALID);
        xsim_sc_channel<0, bool > *p_32_m_aximm_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_aximm_RREADY.bind(*p_32_m_aximm_RREADY);
        p_32_m_aximm_RREADY->set_sv_netview_offsetfromdp(12305248);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_32_m_aximm_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_32->m_aximm_RDATA.bind(*p_32_m_aximm_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_aximm_RDATA);
        xsim_sc_channel<0, bool > *p_32_m_aximm_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_aximm_RLAST.bind(*p_32_m_aximm_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_aximm_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_32_m_aximm_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_32->m_aximm_RID.bind(*p_32_m_aximm_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_aximm_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_m_aximm_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->m_aximm_RRESP.bind(*p_32_m_aximm_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_aximm_RRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_32_m_aximm_RUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_32->m_aximm_RUSER.bind(*p_32_m_aximm_RUSER);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_aximm_RUSER);
        xsim_sc_channel<0, bool > *p_32_m_aximm_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_aximm_BVALID.bind(*p_32_m_aximm_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_aximm_BVALID);
        xsim_sc_channel<0, bool > *p_32_m_aximm_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_aximm_BREADY.bind(*p_32_m_aximm_BREADY);
        p_32_m_aximm_BREADY->set_sv_netview_offsetfromdp(12305640);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_m_aximm_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->m_aximm_BRESP.bind(*p_32_m_aximm_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_aximm_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_32_m_aximm_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_32->m_aximm_BID.bind(*p_32_m_aximm_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_aximm_BID);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_32_m_aximm_BUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_32->m_aximm_BUSER.bind(*p_32_m_aximm_BUSER);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_aximm_BUSER);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_32_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_32->s_axi_awaddr.bind(*p_32_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_32_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_32->s_axi_awlen.bind(*p_32_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->s_axi_awsize.bind(*p_32_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->s_axi_awburst.bind(*p_32_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_32_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_32->s_axi_awlock.bind(*p_32_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->s_axi_awcache.bind(*p_32_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->s_axi_awprot.bind(*p_32_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_s_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->s_axi_awregion.bind(*p_32_s_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->s_axi_awqos.bind(*p_32_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_32_s_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_32->s_axi_awuser.bind(*p_32_s_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awuser);
        xsim_sc_channel<0, bool > *p_32_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_awvalid.bind(*p_32_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_32_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_awready.bind(*p_32_s_axi_awready);
        p_32_s_axi_awready->set_sv_netview_offsetfromdp(12306480);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_32_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_32->s_axi_wdata.bind(*p_32_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->s_axi_wstrb.bind(*p_32_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_32_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_wlast.bind(*p_32_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_32_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_wvalid.bind(*p_32_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_32_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_wready.bind(*p_32_s_axi_wready);
        p_32_s_axi_wready->set_sv_netview_offsetfromdp(12306760);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->s_axi_bresp.bind(*p_32_s_axi_bresp);
        p_32_s_axi_bresp->set_sv_netview_offsetfromdp(12306816);
        xsim_sc_channel<0, bool > *p_32_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_bvalid.bind(*p_32_s_axi_bvalid);
        p_32_s_axi_bvalid->set_sv_netview_offsetfromdp(12306872);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_s_axi_buser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->s_axi_buser.bind(*p_32_s_axi_buser);
        p_32_s_axi_buser->set_sv_netview_offsetfromdp(12306928);
        xsim_sc_channel<0, bool > *p_32_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_bready.bind(*p_32_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_32_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_32->s_axi_araddr.bind(*p_32_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_32_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_32->s_axi_arlen.bind(*p_32_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->s_axi_arsize.bind(*p_32_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->s_axi_arburst.bind(*p_32_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_32_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_32->s_axi_arlock.bind(*p_32_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->s_axi_arcache.bind(*p_32_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->s_axi_arprot.bind(*p_32_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_s_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->s_axi_arregion.bind(*p_32_s_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->s_axi_arqos.bind(*p_32_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_32_s_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_32->s_axi_aruser.bind(*p_32_s_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_aruser);
        xsim_sc_channel<0, bool > *p_32_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_arvalid.bind(*p_32_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_32_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_arready.bind(*p_32_s_axi_arready);
        p_32_s_axi_arready->set_sv_netview_offsetfromdp(12307656);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_32_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_32->s_axi_rdata.bind(*p_32_s_axi_rdata);
        p_32_s_axi_rdata->set_sv_netview_offsetfromdp(12307712);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->s_axi_rresp.bind(*p_32_s_axi_rresp);
        p_32_s_axi_rresp->set_sv_netview_offsetfromdp(12307768);
        xsim_sc_channel<0, bool > *p_32_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_rlast.bind(*p_32_s_axi_rlast);
        p_32_s_axi_rlast->set_sv_netview_offsetfromdp(12307824);
        xsim_sc_channel<0, bool > *p_32_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_rvalid.bind(*p_32_s_axi_rvalid);
        p_32_s_axi_rvalid->set_sv_netview_offsetfromdp(12307880);
        xsim_sc_channel<0, bool > *p_32_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_rready.bind(*p_32_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_rready);
        sc_inst_33 = new pfm_top_sim_ddr_0_0(".pfm_top_wrapper.pfm_top_i.static_region.sim_ddr_0");
        sc_inst_33->xsim_set_dbg_index(448);
        xsim_sc_channel<0, bool > *p_33_c0_init_calib_complete = new xsim_sc_channel<0, bool >();
        sc_inst_33->c0_init_calib_complete.bind(*p_33_c0_init_calib_complete);
        p_33_c0_init_calib_complete->set_sv_netview_offsetfromdp(12308040);
        xsim_sc_channel<0, bool > *p_33_dbg_clk = new xsim_sc_channel<0, bool >();
        sc_inst_33->dbg_clk.bind(*p_33_dbg_clk);
        p_33_dbg_clk->set_sv_netview_offsetfromdp(12308096);
        xsim_sc_channel<0, bool > *p_33_c0_sys_clk_i = new xsim_sc_channel<0, bool >();
        sc_inst_33->c0_sys_clk_i.bind(*p_33_c0_sys_clk_i);
        (*_glb_hdl_sc_channel_map).push_back(p_33_c0_sys_clk_i);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_33_dbg_bus = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_33->dbg_bus.bind(*p_33_dbg_bus);
        p_33_dbg_bus->set_sv_netview_offsetfromdp(12308208);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_33_c0_ddr4_adr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_33->c0_ddr4_adr.bind(*p_33_c0_ddr4_adr);
        p_33_c0_ddr4_adr->set_sv_netview_offsetfromdp(12308264);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_c0_ddr4_ba = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->c0_ddr4_ba.bind(*p_33_c0_ddr4_ba);
        p_33_c0_ddr4_ba->set_sv_netview_offsetfromdp(12308320);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_33_c0_ddr4_cke = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_33->c0_ddr4_cke.bind(*p_33_c0_ddr4_cke);
        p_33_c0_ddr4_cke->set_sv_netview_offsetfromdp(12308376);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_33_c0_ddr4_cs_n = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_33->c0_ddr4_cs_n.bind(*p_33_c0_ddr4_cs_n);
        p_33_c0_ddr4_cs_n->set_sv_netview_offsetfromdp(12308432);
        xsim_sc_channel<72, sc_dt::sc_bv<72> > *p_33_c0_ddr4_dq = new xsim_sc_channel<72, sc_dt::sc_bv<72> >();
        sc_inst_33->c0_ddr4_dq.bind(*p_33_c0_ddr4_dq);
        p_33_c0_ddr4_dq->set_sv_netview_offsetfromdp(12308488);
        xsim_sc_channel<18, sc_dt::sc_bv<18> > *p_33_c0_ddr4_dqs_c = new xsim_sc_channel<18, sc_dt::sc_bv<18> >();
        sc_inst_33->c0_ddr4_dqs_c.bind(*p_33_c0_ddr4_dqs_c);
        p_33_c0_ddr4_dqs_c->set_sv_netview_offsetfromdp(12308544);
        xsim_sc_channel<18, sc_dt::sc_bv<18> > *p_33_c0_ddr4_dqs_t = new xsim_sc_channel<18, sc_dt::sc_bv<18> >();
        sc_inst_33->c0_ddr4_dqs_t.bind(*p_33_c0_ddr4_dqs_t);
        p_33_c0_ddr4_dqs_t->set_sv_netview_offsetfromdp(12308600);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_33_c0_ddr4_odt = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_33->c0_ddr4_odt.bind(*p_33_c0_ddr4_odt);
        p_33_c0_ddr4_odt->set_sv_netview_offsetfromdp(12308656);
        xsim_sc_channel<0, bool > *p_33_c0_ddr4_parity = new xsim_sc_channel<0, bool >();
        sc_inst_33->c0_ddr4_parity.bind(*p_33_c0_ddr4_parity);
        p_33_c0_ddr4_parity->set_sv_netview_offsetfromdp(12308712);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_c0_ddr4_bg = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->c0_ddr4_bg.bind(*p_33_c0_ddr4_bg);
        p_33_c0_ddr4_bg->set_sv_netview_offsetfromdp(12308768);
        xsim_sc_channel<0, bool > *p_33_c0_ddr4_reset_n = new xsim_sc_channel<0, bool >();
        sc_inst_33->c0_ddr4_reset_n.bind(*p_33_c0_ddr4_reset_n);
        p_33_c0_ddr4_reset_n->set_sv_netview_offsetfromdp(12308824);
        xsim_sc_channel<0, bool > *p_33_c0_ddr4_act_n = new xsim_sc_channel<0, bool >();
        sc_inst_33->c0_ddr4_act_n.bind(*p_33_c0_ddr4_act_n);
        p_33_c0_ddr4_act_n->set_sv_netview_offsetfromdp(12308880);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_33_c0_ddr4_ck_c = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_33->c0_ddr4_ck_c.bind(*p_33_c0_ddr4_ck_c);
        p_33_c0_ddr4_ck_c->set_sv_netview_offsetfromdp(12308936);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_33_c0_ddr4_ck_t = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_33->c0_ddr4_ck_t.bind(*p_33_c0_ddr4_ck_t);
        p_33_c0_ddr4_ck_t->set_sv_netview_offsetfromdp(12308992);
        xsim_sc_channel<0, bool > *p_33_c0_ddr4_ui_clk = new xsim_sc_channel<0, bool >();
        sc_inst_33->c0_ddr4_ui_clk.bind(*p_33_c0_ddr4_ui_clk);
        p_33_c0_ddr4_ui_clk->set_sv_netview_offsetfromdp(12309048);
        xsim_sc_channel<0, bool > *p_33_c0_ddr4_ui_clk_sync_rst = new xsim_sc_channel<0, bool >();
        sc_inst_33->c0_ddr4_ui_clk_sync_rst.bind(*p_33_c0_ddr4_ui_clk_sync_rst);
        p_33_c0_ddr4_ui_clk_sync_rst->set_sv_netview_offsetfromdp(12309104);
        xsim_sc_channel<0, bool > *p_33_c0_ddr4_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_33->c0_ddr4_aresetn.bind(*p_33_c0_ddr4_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_33_c0_ddr4_aresetn);
        xsim_sc_channel<0, bool > *p_33_c0_ddr4_s_axi_ctrl_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->c0_ddr4_s_axi_ctrl_awvalid.bind(*p_33_c0_ddr4_s_axi_ctrl_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_c0_ddr4_s_axi_ctrl_awvalid);
        xsim_sc_channel<0, bool > *p_33_c0_ddr4_s_axi_ctrl_awready = new xsim_sc_channel<0, bool >();
        sc_inst_33->c0_ddr4_s_axi_ctrl_awready.bind(*p_33_c0_ddr4_s_axi_ctrl_awready);
        p_33_c0_ddr4_s_axi_ctrl_awready->set_sv_netview_offsetfromdp(12309272);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_33_c0_ddr4_s_axi_ctrl_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_33->c0_ddr4_s_axi_ctrl_awaddr.bind(*p_33_c0_ddr4_s_axi_ctrl_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_33_c0_ddr4_s_axi_ctrl_awaddr);
        xsim_sc_channel<0, bool > *p_33_c0_ddr4_s_axi_ctrl_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->c0_ddr4_s_axi_ctrl_wvalid.bind(*p_33_c0_ddr4_s_axi_ctrl_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_c0_ddr4_s_axi_ctrl_wvalid);
        xsim_sc_channel<0, bool > *p_33_c0_ddr4_s_axi_ctrl_wready = new xsim_sc_channel<0, bool >();
        sc_inst_33->c0_ddr4_s_axi_ctrl_wready.bind(*p_33_c0_ddr4_s_axi_ctrl_wready);
        p_33_c0_ddr4_s_axi_ctrl_wready->set_sv_netview_offsetfromdp(12309440);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_33_c0_ddr4_s_axi_ctrl_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_33->c0_ddr4_s_axi_ctrl_wdata.bind(*p_33_c0_ddr4_s_axi_ctrl_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_33_c0_ddr4_s_axi_ctrl_wdata);
        xsim_sc_channel<0, bool > *p_33_c0_ddr4_s_axi_ctrl_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->c0_ddr4_s_axi_ctrl_bvalid.bind(*p_33_c0_ddr4_s_axi_ctrl_bvalid);
        p_33_c0_ddr4_s_axi_ctrl_bvalid->set_sv_netview_offsetfromdp(12309552);
        xsim_sc_channel<0, bool > *p_33_c0_ddr4_s_axi_ctrl_bready = new xsim_sc_channel<0, bool >();
        sc_inst_33->c0_ddr4_s_axi_ctrl_bready.bind(*p_33_c0_ddr4_s_axi_ctrl_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_33_c0_ddr4_s_axi_ctrl_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_c0_ddr4_s_axi_ctrl_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->c0_ddr4_s_axi_ctrl_bresp.bind(*p_33_c0_ddr4_s_axi_ctrl_bresp);
        p_33_c0_ddr4_s_axi_ctrl_bresp->set_sv_netview_offsetfromdp(12309664);
        xsim_sc_channel<0, bool > *p_33_c0_ddr4_s_axi_ctrl_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->c0_ddr4_s_axi_ctrl_arvalid.bind(*p_33_c0_ddr4_s_axi_ctrl_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_c0_ddr4_s_axi_ctrl_arvalid);
        xsim_sc_channel<0, bool > *p_33_c0_ddr4_s_axi_ctrl_arready = new xsim_sc_channel<0, bool >();
        sc_inst_33->c0_ddr4_s_axi_ctrl_arready.bind(*p_33_c0_ddr4_s_axi_ctrl_arready);
        p_33_c0_ddr4_s_axi_ctrl_arready->set_sv_netview_offsetfromdp(12309776);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_33_c0_ddr4_s_axi_ctrl_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_33->c0_ddr4_s_axi_ctrl_araddr.bind(*p_33_c0_ddr4_s_axi_ctrl_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_33_c0_ddr4_s_axi_ctrl_araddr);
        xsim_sc_channel<0, bool > *p_33_c0_ddr4_s_axi_ctrl_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->c0_ddr4_s_axi_ctrl_rvalid.bind(*p_33_c0_ddr4_s_axi_ctrl_rvalid);
        p_33_c0_ddr4_s_axi_ctrl_rvalid->set_sv_netview_offsetfromdp(12309888);
        xsim_sc_channel<0, bool > *p_33_c0_ddr4_s_axi_ctrl_rready = new xsim_sc_channel<0, bool >();
        sc_inst_33->c0_ddr4_s_axi_ctrl_rready.bind(*p_33_c0_ddr4_s_axi_ctrl_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_33_c0_ddr4_s_axi_ctrl_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_33_c0_ddr4_s_axi_ctrl_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_33->c0_ddr4_s_axi_ctrl_rdata.bind(*p_33_c0_ddr4_s_axi_ctrl_rdata);
        p_33_c0_ddr4_s_axi_ctrl_rdata->set_sv_netview_offsetfromdp(12310000);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_c0_ddr4_s_axi_ctrl_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->c0_ddr4_s_axi_ctrl_rresp.bind(*p_33_c0_ddr4_s_axi_ctrl_rresp);
        p_33_c0_ddr4_s_axi_ctrl_rresp->set_sv_netview_offsetfromdp(12310056);
        xsim_sc_channel<0, bool > *p_33_c0_ddr4_interrupt = new xsim_sc_channel<0, bool >();
        sc_inst_33->c0_ddr4_interrupt.bind(*p_33_c0_ddr4_interrupt);
        p_33_c0_ddr4_interrupt->set_sv_netview_offsetfromdp(12310112);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_33_c0_ddr4_s_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_33->c0_ddr4_s_axi_awid.bind(*p_33_c0_ddr4_s_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_c0_ddr4_s_axi_awid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_33_c0_ddr4_s_axi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_33->c0_ddr4_s_axi_awaddr.bind(*p_33_c0_ddr4_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_33_c0_ddr4_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_33_c0_ddr4_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_33->c0_ddr4_s_axi_awlen.bind(*p_33_c0_ddr4_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_33_c0_ddr4_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_c0_ddr4_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->c0_ddr4_s_axi_awsize.bind(*p_33_c0_ddr4_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_33_c0_ddr4_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_c0_ddr4_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->c0_ddr4_s_axi_awburst.bind(*p_33_c0_ddr4_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_33_c0_ddr4_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_33_c0_ddr4_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_33->c0_ddr4_s_axi_awlock.bind(*p_33_c0_ddr4_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_33_c0_ddr4_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_c0_ddr4_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->c0_ddr4_s_axi_awcache.bind(*p_33_c0_ddr4_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_33_c0_ddr4_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_c0_ddr4_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->c0_ddr4_s_axi_awprot.bind(*p_33_c0_ddr4_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_33_c0_ddr4_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_c0_ddr4_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->c0_ddr4_s_axi_awqos.bind(*p_33_c0_ddr4_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_33_c0_ddr4_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_33_c0_ddr4_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->c0_ddr4_s_axi_awvalid.bind(*p_33_c0_ddr4_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_c0_ddr4_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_33_c0_ddr4_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_33->c0_ddr4_s_axi_awready.bind(*p_33_c0_ddr4_s_axi_awready);
        p_33_c0_ddr4_s_axi_awready->set_sv_netview_offsetfromdp(12310728);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_33_c0_ddr4_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_33->c0_ddr4_s_axi_wdata.bind(*p_33_c0_ddr4_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_33_c0_ddr4_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_33_c0_ddr4_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_33->c0_ddr4_s_axi_wstrb.bind(*p_33_c0_ddr4_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_33_c0_ddr4_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_33_c0_ddr4_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_33->c0_ddr4_s_axi_wlast.bind(*p_33_c0_ddr4_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_33_c0_ddr4_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_33_c0_ddr4_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->c0_ddr4_s_axi_wvalid.bind(*p_33_c0_ddr4_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_c0_ddr4_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_33_c0_ddr4_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_33->c0_ddr4_s_axi_wready.bind(*p_33_c0_ddr4_s_axi_wready);
        p_33_c0_ddr4_s_axi_wready->set_sv_netview_offsetfromdp(12311008);
        xsim_sc_channel<0, bool > *p_33_c0_ddr4_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_33->c0_ddr4_s_axi_bready.bind(*p_33_c0_ddr4_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_33_c0_ddr4_s_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_33_c0_ddr4_s_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_33->c0_ddr4_s_axi_bid.bind(*p_33_c0_ddr4_s_axi_bid);
        p_33_c0_ddr4_s_axi_bid->set_sv_netview_offsetfromdp(12311120);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_c0_ddr4_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->c0_ddr4_s_axi_bresp.bind(*p_33_c0_ddr4_s_axi_bresp);
        p_33_c0_ddr4_s_axi_bresp->set_sv_netview_offsetfromdp(12311176);
        xsim_sc_channel<0, bool > *p_33_c0_ddr4_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->c0_ddr4_s_axi_bvalid.bind(*p_33_c0_ddr4_s_axi_bvalid);
        p_33_c0_ddr4_s_axi_bvalid->set_sv_netview_offsetfromdp(12311232);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_33_c0_ddr4_s_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_33->c0_ddr4_s_axi_arid.bind(*p_33_c0_ddr4_s_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_c0_ddr4_s_axi_arid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_33_c0_ddr4_s_axi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_33->c0_ddr4_s_axi_araddr.bind(*p_33_c0_ddr4_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_33_c0_ddr4_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_33_c0_ddr4_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_33->c0_ddr4_s_axi_arlen.bind(*p_33_c0_ddr4_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_33_c0_ddr4_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_c0_ddr4_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->c0_ddr4_s_axi_arsize.bind(*p_33_c0_ddr4_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_33_c0_ddr4_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_c0_ddr4_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->c0_ddr4_s_axi_arburst.bind(*p_33_c0_ddr4_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_33_c0_ddr4_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_33_c0_ddr4_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_33->c0_ddr4_s_axi_arlock.bind(*p_33_c0_ddr4_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_33_c0_ddr4_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_c0_ddr4_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->c0_ddr4_s_axi_arcache.bind(*p_33_c0_ddr4_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_33_c0_ddr4_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_c0_ddr4_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->c0_ddr4_s_axi_arprot.bind(*p_33_c0_ddr4_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_33_c0_ddr4_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_c0_ddr4_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->c0_ddr4_s_axi_arqos.bind(*p_33_c0_ddr4_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_33_c0_ddr4_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_33_c0_ddr4_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->c0_ddr4_s_axi_arvalid.bind(*p_33_c0_ddr4_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_c0_ddr4_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_33_c0_ddr4_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_33->c0_ddr4_s_axi_arready.bind(*p_33_c0_ddr4_s_axi_arready);
        p_33_c0_ddr4_s_axi_arready->set_sv_netview_offsetfromdp(12311848);
        xsim_sc_channel<0, bool > *p_33_c0_ddr4_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_33->c0_ddr4_s_axi_rready.bind(*p_33_c0_ddr4_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_33_c0_ddr4_s_axi_rready);
        xsim_sc_channel<0, bool > *p_33_c0_ddr4_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_33->c0_ddr4_s_axi_rlast.bind(*p_33_c0_ddr4_s_axi_rlast);
        p_33_c0_ddr4_s_axi_rlast->set_sv_netview_offsetfromdp(12311960);
        xsim_sc_channel<0, bool > *p_33_c0_ddr4_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->c0_ddr4_s_axi_rvalid.bind(*p_33_c0_ddr4_s_axi_rvalid);
        p_33_c0_ddr4_s_axi_rvalid->set_sv_netview_offsetfromdp(12312016);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_c0_ddr4_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->c0_ddr4_s_axi_rresp.bind(*p_33_c0_ddr4_s_axi_rresp);
        p_33_c0_ddr4_s_axi_rresp->set_sv_netview_offsetfromdp(12312072);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_33_c0_ddr4_s_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_33->c0_ddr4_s_axi_rid.bind(*p_33_c0_ddr4_s_axi_rid);
        p_33_c0_ddr4_s_axi_rid->set_sv_netview_offsetfromdp(12312128);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_33_c0_ddr4_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_33->c0_ddr4_s_axi_rdata.bind(*p_33_c0_ddr4_s_axi_rdata);
        p_33_c0_ddr4_s_axi_rdata->set_sv_netview_offsetfromdp(12312184);
        xsim_sc_channel<0, bool > *p_33_addn_ui_clkout1 = new xsim_sc_channel<0, bool >();
        sc_inst_33->addn_ui_clkout1.bind(*p_33_addn_ui_clkout1);
        p_33_addn_ui_clkout1->set_sv_netview_offsetfromdp(12312240);
        xsim_sc_channel<0, bool > *p_33_sys_rst = new xsim_sc_channel<0, bool >();
        sc_inst_33->sys_rst.bind(*p_33_sys_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_33_sys_rst);
        sc_inst_34 = new pfm_top_sim_qdma_0_0(".pfm_top_wrapper.pfm_top_i.static_region.sim_qdma_0");
        sc_inst_34->xsim_set_dbg_index(449);
        xsim_sc_channel<0, bool > *p_34_m_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_aximm_aclk.bind(*p_34_m_aximm_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_aximm_aclk);
        xsim_sc_channel<0, bool > *p_34_m_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_aximm_aresetn.bind(*p_34_m_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_34_m_axictrl_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_axictrl_aclk.bind(*p_34_m_axictrl_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_axictrl_aclk);
        xsim_sc_channel<0, bool > *p_34_m_axictrl_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_axictrl_aresetn.bind(*p_34_m_axictrl_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_axictrl_aresetn);
        xsim_sc_channel<0, bool > *p_34_s_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_aximm_aclk.bind(*p_34_s_aximm_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_aximm_aclk);
        xsim_sc_channel<0, bool > *p_34_s_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_aximm_aresetn.bind(*p_34_s_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_aximm_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_34_m_axictrl_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_34->m_axictrl_awaddr.bind(*p_34_m_axictrl_awaddr);
        p_34_m_axictrl_awaddr->set_sv_netview_offsetfromdp(12312736);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_m_axictrl_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->m_axictrl_awprot.bind(*p_34_m_axictrl_awprot);
        p_34_m_axictrl_awprot->set_sv_netview_offsetfromdp(12312792);
        xsim_sc_channel<0, bool > *p_34_m_axictrl_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_axictrl_awvalid.bind(*p_34_m_axictrl_awvalid);
        p_34_m_axictrl_awvalid->set_sv_netview_offsetfromdp(12312848);
        xsim_sc_channel<0, bool > *p_34_m_axictrl_awready = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_axictrl_awready.bind(*p_34_m_axictrl_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_axictrl_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_34_m_axictrl_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_34->m_axictrl_wdata.bind(*p_34_m_axictrl_wdata);
        p_34_m_axictrl_wdata->set_sv_netview_offsetfromdp(12312960);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_m_axictrl_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->m_axictrl_wstrb.bind(*p_34_m_axictrl_wstrb);
        p_34_m_axictrl_wstrb->set_sv_netview_offsetfromdp(12313016);
        xsim_sc_channel<0, bool > *p_34_m_axictrl_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_axictrl_wvalid.bind(*p_34_m_axictrl_wvalid);
        p_34_m_axictrl_wvalid->set_sv_netview_offsetfromdp(12313072);
        xsim_sc_channel<0, bool > *p_34_m_axictrl_wready = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_axictrl_wready.bind(*p_34_m_axictrl_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_axictrl_wready);
        xsim_sc_channel<0, bool > *p_34_m_axictrl_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_axictrl_bvalid.bind(*p_34_m_axictrl_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_axictrl_bvalid);
        xsim_sc_channel<0, bool > *p_34_m_axictrl_bready = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_axictrl_bready.bind(*p_34_m_axictrl_bready);
        p_34_m_axictrl_bready->set_sv_netview_offsetfromdp(12313240);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_m_axictrl_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->m_axictrl_bresp.bind(*p_34_m_axictrl_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_axictrl_bresp);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_34_m_axictrl_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_34->m_axictrl_araddr.bind(*p_34_m_axictrl_araddr);
        p_34_m_axictrl_araddr->set_sv_netview_offsetfromdp(12313352);
        xsim_sc_channel<0, bool > *p_34_m_axictrl_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_axictrl_arvalid.bind(*p_34_m_axictrl_arvalid);
        p_34_m_axictrl_arvalid->set_sv_netview_offsetfromdp(12313408);
        xsim_sc_channel<0, bool > *p_34_m_axictrl_arready = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_axictrl_arready.bind(*p_34_m_axictrl_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_axictrl_arready);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_m_axictrl_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->m_axictrl_arprot.bind(*p_34_m_axictrl_arprot);
        p_34_m_axictrl_arprot->set_sv_netview_offsetfromdp(12313520);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_34_m_axictrl_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_34->m_axictrl_rdata.bind(*p_34_m_axictrl_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_axictrl_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_m_axictrl_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->m_axictrl_rresp.bind(*p_34_m_axictrl_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_axictrl_rresp);
        xsim_sc_channel<0, bool > *p_34_m_axictrl_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_axictrl_rvalid.bind(*p_34_m_axictrl_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_axictrl_rvalid);
        xsim_sc_channel<0, bool > *p_34_m_axictrl_rready = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_axictrl_rready.bind(*p_34_m_axictrl_rready);
        p_34_m_axictrl_rready->set_sv_netview_offsetfromdp(12313744);
        xsim_sc_channel<0, bool > *p_34_m_aximm_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_aximm_AWVALID.bind(*p_34_m_aximm_AWVALID);
        p_34_m_aximm_AWVALID->set_sv_netview_offsetfromdp(12313800);
        xsim_sc_channel<0, bool > *p_34_m_aximm_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_aximm_AWREADY.bind(*p_34_m_aximm_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_aximm_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_34_m_aximm_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_34->m_aximm_AWADDR.bind(*p_34_m_aximm_AWADDR);
        p_34_m_aximm_AWADDR->set_sv_netview_offsetfromdp(12313912);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_m_aximm_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->m_aximm_AWID.bind(*p_34_m_aximm_AWID);
        p_34_m_aximm_AWID->set_sv_netview_offsetfromdp(12313968);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_34_m_aximm_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_34->m_aximm_AWLEN.bind(*p_34_m_aximm_AWLEN);
        p_34_m_aximm_AWLEN->set_sv_netview_offsetfromdp(12314024);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_m_aximm_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->m_aximm_AWSIZE.bind(*p_34_m_aximm_AWSIZE);
        p_34_m_aximm_AWSIZE->set_sv_netview_offsetfromdp(12314080);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_m_aximm_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->m_aximm_AWBURST.bind(*p_34_m_aximm_AWBURST);
        p_34_m_aximm_AWBURST->set_sv_netview_offsetfromdp(12314136);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_m_aximm_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->m_aximm_AWLOCK.bind(*p_34_m_aximm_AWLOCK);
        p_34_m_aximm_AWLOCK->set_sv_netview_offsetfromdp(12314192);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_m_aximm_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->m_aximm_AWCACHE.bind(*p_34_m_aximm_AWCACHE);
        p_34_m_aximm_AWCACHE->set_sv_netview_offsetfromdp(12314248);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_m_aximm_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->m_aximm_AWPROT.bind(*p_34_m_aximm_AWPROT);
        p_34_m_aximm_AWPROT->set_sv_netview_offsetfromdp(12314304);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_m_aximm_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->m_aximm_AWREGION.bind(*p_34_m_aximm_AWREGION);
        p_34_m_aximm_AWREGION->set_sv_netview_offsetfromdp(12314360);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_m_aximm_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->m_aximm_AWQOS.bind(*p_34_m_aximm_AWQOS);
        p_34_m_aximm_AWQOS->set_sv_netview_offsetfromdp(12314416);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_34_m_aximm_AWUSER = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_34->m_aximm_AWUSER.bind(*p_34_m_aximm_AWUSER);
        p_34_m_aximm_AWUSER->set_sv_netview_offsetfromdp(12314472);
        xsim_sc_channel<0, bool > *p_34_m_aximm_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_aximm_WVALID.bind(*p_34_m_aximm_WVALID);
        p_34_m_aximm_WVALID->set_sv_netview_offsetfromdp(12314528);
        xsim_sc_channel<0, bool > *p_34_m_aximm_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_aximm_WREADY.bind(*p_34_m_aximm_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_aximm_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_34_m_aximm_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_34->m_aximm_WDATA.bind(*p_34_m_aximm_WDATA);
        p_34_m_aximm_WDATA->set_sv_netview_offsetfromdp(12314640);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_m_aximm_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->m_aximm_WSTRB.bind(*p_34_m_aximm_WSTRB);
        p_34_m_aximm_WSTRB->set_sv_netview_offsetfromdp(12314696);
        xsim_sc_channel<0, bool > *p_34_m_aximm_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_aximm_WLAST.bind(*p_34_m_aximm_WLAST);
        p_34_m_aximm_WLAST->set_sv_netview_offsetfromdp(12314752);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_34_m_aximm_WUSER = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_34->m_aximm_WUSER.bind(*p_34_m_aximm_WUSER);
        p_34_m_aximm_WUSER->set_sv_netview_offsetfromdp(12314808);
        xsim_sc_channel<0, bool > *p_34_m_aximm_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_aximm_ARVALID.bind(*p_34_m_aximm_ARVALID);
        p_34_m_aximm_ARVALID->set_sv_netview_offsetfromdp(12314864);
        xsim_sc_channel<0, bool > *p_34_m_aximm_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_aximm_ARREADY.bind(*p_34_m_aximm_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_aximm_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_34_m_aximm_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_34->m_aximm_ARADDR.bind(*p_34_m_aximm_ARADDR);
        p_34_m_aximm_ARADDR->set_sv_netview_offsetfromdp(12314976);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_m_aximm_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->m_aximm_ARID.bind(*p_34_m_aximm_ARID);
        p_34_m_aximm_ARID->set_sv_netview_offsetfromdp(12315032);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_34_m_aximm_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_34->m_aximm_ARLEN.bind(*p_34_m_aximm_ARLEN);
        p_34_m_aximm_ARLEN->set_sv_netview_offsetfromdp(12315088);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_m_aximm_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->m_aximm_ARSIZE.bind(*p_34_m_aximm_ARSIZE);
        p_34_m_aximm_ARSIZE->set_sv_netview_offsetfromdp(12315144);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_m_aximm_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->m_aximm_ARBURST.bind(*p_34_m_aximm_ARBURST);
        p_34_m_aximm_ARBURST->set_sv_netview_offsetfromdp(12315200);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_m_aximm_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->m_aximm_ARLOCK.bind(*p_34_m_aximm_ARLOCK);
        p_34_m_aximm_ARLOCK->set_sv_netview_offsetfromdp(12315256);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_m_aximm_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->m_aximm_ARCACHE.bind(*p_34_m_aximm_ARCACHE);
        p_34_m_aximm_ARCACHE->set_sv_netview_offsetfromdp(12315312);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_m_aximm_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->m_aximm_ARPROT.bind(*p_34_m_aximm_ARPROT);
        p_34_m_aximm_ARPROT->set_sv_netview_offsetfromdp(12315368);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_m_aximm_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->m_aximm_ARREGION.bind(*p_34_m_aximm_ARREGION);
        p_34_m_aximm_ARREGION->set_sv_netview_offsetfromdp(12315424);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_m_aximm_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->m_aximm_ARQOS.bind(*p_34_m_aximm_ARQOS);
        p_34_m_aximm_ARQOS->set_sv_netview_offsetfromdp(12315480);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_34_m_aximm_ARUSER = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_34->m_aximm_ARUSER.bind(*p_34_m_aximm_ARUSER);
        p_34_m_aximm_ARUSER->set_sv_netview_offsetfromdp(12315536);
        xsim_sc_channel<0, bool > *p_34_m_aximm_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_aximm_RVALID.bind(*p_34_m_aximm_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_aximm_RVALID);
        xsim_sc_channel<0, bool > *p_34_m_aximm_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_aximm_RREADY.bind(*p_34_m_aximm_RREADY);
        p_34_m_aximm_RREADY->set_sv_netview_offsetfromdp(12315648);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_34_m_aximm_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_34->m_aximm_RDATA.bind(*p_34_m_aximm_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_aximm_RDATA);
        xsim_sc_channel<0, bool > *p_34_m_aximm_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_aximm_RLAST.bind(*p_34_m_aximm_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_aximm_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_m_aximm_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->m_aximm_RID.bind(*p_34_m_aximm_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_aximm_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_m_aximm_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->m_aximm_RRESP.bind(*p_34_m_aximm_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_aximm_RRESP);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_34_m_aximm_RUSER = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_34->m_aximm_RUSER.bind(*p_34_m_aximm_RUSER);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_aximm_RUSER);
        xsim_sc_channel<0, bool > *p_34_m_aximm_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_aximm_BVALID.bind(*p_34_m_aximm_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_aximm_BVALID);
        xsim_sc_channel<0, bool > *p_34_m_aximm_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_aximm_BREADY.bind(*p_34_m_aximm_BREADY);
        p_34_m_aximm_BREADY->set_sv_netview_offsetfromdp(12316040);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_m_aximm_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->m_aximm_BRESP.bind(*p_34_m_aximm_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_aximm_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_m_aximm_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->m_aximm_BID.bind(*p_34_m_aximm_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_aximm_BID);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_m_aximm_BUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->m_aximm_BUSER.bind(*p_34_m_aximm_BUSER);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_aximm_BUSER);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_34_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_34->s_axi_awaddr.bind(*p_34_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_34_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_34->s_axi_awlen.bind(*p_34_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->s_axi_awsize.bind(*p_34_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->s_axi_awburst.bind(*p_34_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->s_axi_awlock.bind(*p_34_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->s_axi_awcache.bind(*p_34_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->s_axi_awprot.bind(*p_34_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_s_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->s_axi_awregion.bind(*p_34_s_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->s_axi_awqos.bind(*p_34_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_34_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_awvalid.bind(*p_34_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_34_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_awready.bind(*p_34_s_axi_awready);
        p_34_s_axi_awready->set_sv_netview_offsetfromdp(12316824);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_34_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_34->s_axi_wdata.bind(*p_34_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->s_axi_wstrb.bind(*p_34_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_34_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_wlast.bind(*p_34_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_34_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_wvalid.bind(*p_34_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_34_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_wready.bind(*p_34_s_axi_wready);
        p_34_s_axi_wready->set_sv_netview_offsetfromdp(12317104);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->s_axi_bresp.bind(*p_34_s_axi_bresp);
        p_34_s_axi_bresp->set_sv_netview_offsetfromdp(12317160);
        xsim_sc_channel<0, bool > *p_34_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_bvalid.bind(*p_34_s_axi_bvalid);
        p_34_s_axi_bvalid->set_sv_netview_offsetfromdp(12317216);
        xsim_sc_channel<0, bool > *p_34_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_bready.bind(*p_34_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_34_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_34->s_axi_araddr.bind(*p_34_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_34_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_34->s_axi_arlen.bind(*p_34_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->s_axi_arsize.bind(*p_34_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->s_axi_arburst.bind(*p_34_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->s_axi_arlock.bind(*p_34_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->s_axi_arcache.bind(*p_34_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->s_axi_arprot.bind(*p_34_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_s_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->s_axi_arregion.bind(*p_34_s_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->s_axi_arqos.bind(*p_34_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_34_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_arvalid.bind(*p_34_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_34_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_arready.bind(*p_34_s_axi_arready);
        p_34_s_axi_arready->set_sv_netview_offsetfromdp(12317888);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_34_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_34->s_axi_rdata.bind(*p_34_s_axi_rdata);
        p_34_s_axi_rdata->set_sv_netview_offsetfromdp(12317944);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->s_axi_rresp.bind(*p_34_s_axi_rresp);
        p_34_s_axi_rresp->set_sv_netview_offsetfromdp(12318000);
        xsim_sc_channel<0, bool > *p_34_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_rlast.bind(*p_34_s_axi_rlast);
        p_34_s_axi_rlast->set_sv_netview_offsetfromdp(12318056);
        xsim_sc_channel<0, bool > *p_34_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_rvalid.bind(*p_34_s_axi_rvalid);
        p_34_s_axi_rvalid->set_sv_netview_offsetfromdp(12318112);
        xsim_sc_channel<0, bool > *p_34_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_rready.bind(*p_34_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_rready);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_34_usr_irq_req = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_34->usr_irq_req.bind(*p_34_usr_irq_req);
        (*_glb_hdl_sc_channel_map).push_back(p_34_usr_irq_req);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_34_usr_irq_ack = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_34->usr_irq_ack.bind(*p_34_usr_irq_ack);
        p_34_usr_irq_ack->set_sv_netview_offsetfromdp(12318280);
        sc_inst_35 = new pfm_top_smartconnect_0_0(".pfm_top_wrapper.pfm_top_i.static_region.smartconnect_0");
        sc_inst_35->xsim_set_dbg_index(450);
        xsim_sc_channel<0, bool > *p_35_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_35->aclk.bind(*p_35_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_35_aclk);
        xsim_sc_channel<0, bool > *p_35_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_35->aresetn.bind(*p_35_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_35_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->S00_AXI_awid.bind(*p_35_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_35_S00_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_35->S00_AXI_awaddr.bind(*p_35_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_35_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_35->S00_AXI_awlen.bind(*p_35_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->S00_AXI_awsize.bind(*p_35_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->S00_AXI_awburst.bind(*p_35_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->S00_AXI_awlock.bind(*p_35_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->S00_AXI_awcache.bind(*p_35_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->S00_AXI_awprot.bind(*p_35_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->S00_AXI_awqos.bind(*p_35_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_35_S00_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_35->S00_AXI_awuser.bind(*p_35_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_awvalid.bind(*p_35_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_awready.bind(*p_35_S00_AXI_awready);
        p_35_S00_AXI_awready->set_sv_netview_offsetfromdp(12319112);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_35_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_35->S00_AXI_wdata.bind(*p_35_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->S00_AXI_wstrb.bind(*p_35_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_wlast.bind(*p_35_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_wlast);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_35_S00_AXI_wuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_35->S00_AXI_wuser.bind(*p_35_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_wvalid.bind(*p_35_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_wready.bind(*p_35_S00_AXI_wready);
        p_35_S00_AXI_wready->set_sv_netview_offsetfromdp(12319448);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->S00_AXI_bid.bind(*p_35_S00_AXI_bid);
        p_35_S00_AXI_bid->set_sv_netview_offsetfromdp(12319504);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->S00_AXI_bresp.bind(*p_35_S00_AXI_bresp);
        p_35_S00_AXI_bresp->set_sv_netview_offsetfromdp(12319560);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_S00_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->S00_AXI_buser.bind(*p_35_S00_AXI_buser);
        p_35_S00_AXI_buser->set_sv_netview_offsetfromdp(12319616);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_bvalid.bind(*p_35_S00_AXI_bvalid);
        p_35_S00_AXI_bvalid->set_sv_netview_offsetfromdp(12319672);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_bready.bind(*p_35_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->S00_AXI_arid.bind(*p_35_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_35_S00_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_35->S00_AXI_araddr.bind(*p_35_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_35_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_35->S00_AXI_arlen.bind(*p_35_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->S00_AXI_arsize.bind(*p_35_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->S00_AXI_arburst.bind(*p_35_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->S00_AXI_arlock.bind(*p_35_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->S00_AXI_arcache.bind(*p_35_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->S00_AXI_arprot.bind(*p_35_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->S00_AXI_arqos.bind(*p_35_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_35_S00_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_35->S00_AXI_aruser.bind(*p_35_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_arvalid.bind(*p_35_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_arready.bind(*p_35_S00_AXI_arready);
        p_35_S00_AXI_arready->set_sv_netview_offsetfromdp(12320400);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->S00_AXI_rid.bind(*p_35_S00_AXI_rid);
        p_35_S00_AXI_rid->set_sv_netview_offsetfromdp(12320456);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_35_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_35->S00_AXI_rdata.bind(*p_35_S00_AXI_rdata);
        p_35_S00_AXI_rdata->set_sv_netview_offsetfromdp(12320512);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->S00_AXI_rresp.bind(*p_35_S00_AXI_rresp);
        p_35_S00_AXI_rresp->set_sv_netview_offsetfromdp(12320568);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_rlast.bind(*p_35_S00_AXI_rlast);
        p_35_S00_AXI_rlast->set_sv_netview_offsetfromdp(12320624);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_35_S00_AXI_ruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_35->S00_AXI_ruser.bind(*p_35_S00_AXI_ruser);
        p_35_S00_AXI_ruser->set_sv_netview_offsetfromdp(12320680);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_rvalid.bind(*p_35_S00_AXI_rvalid);
        p_35_S00_AXI_rvalid->set_sv_netview_offsetfromdp(12320736);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_rready.bind(*p_35_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_rready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_S01_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->S01_AXI_awid.bind(*p_35_S01_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S01_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_35_S01_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_35->S01_AXI_awaddr.bind(*p_35_S01_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S01_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_35_S01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_35->S01_AXI_awlen.bind(*p_35_S01_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S01_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_S01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->S01_AXI_awsize.bind(*p_35_S01_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S01_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_S01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->S01_AXI_awburst.bind(*p_35_S01_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S01_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_S01_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->S01_AXI_awlock.bind(*p_35_S01_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S01_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_S01_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->S01_AXI_awcache.bind(*p_35_S01_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S01_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_S01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->S01_AXI_awprot.bind(*p_35_S01_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S01_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_S01_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->S01_AXI_awqos.bind(*p_35_S01_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S01_AXI_awqos);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_S01_AXI_awuser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->S01_AXI_awuser.bind(*p_35_S01_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S01_AXI_awuser);
        xsim_sc_channel<0, bool > *p_35_S01_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->S01_AXI_awvalid.bind(*p_35_S01_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S01_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_35_S01_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_35->S01_AXI_awready.bind(*p_35_S01_AXI_awready);
        p_35_S01_AXI_awready->set_sv_netview_offsetfromdp(12321464);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_35_S01_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_35->S01_AXI_wdata.bind(*p_35_S01_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S01_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_S01_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->S01_AXI_wstrb.bind(*p_35_S01_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S01_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_35_S01_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_35->S01_AXI_wlast.bind(*p_35_S01_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S01_AXI_wlast);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_S01_AXI_wuser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->S01_AXI_wuser.bind(*p_35_S01_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S01_AXI_wuser);
        xsim_sc_channel<0, bool > *p_35_S01_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->S01_AXI_wvalid.bind(*p_35_S01_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S01_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_35_S01_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_35->S01_AXI_wready.bind(*p_35_S01_AXI_wready);
        p_35_S01_AXI_wready->set_sv_netview_offsetfromdp(12321800);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_S01_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->S01_AXI_bid.bind(*p_35_S01_AXI_bid);
        p_35_S01_AXI_bid->set_sv_netview_offsetfromdp(12321856);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_S01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->S01_AXI_bresp.bind(*p_35_S01_AXI_bresp);
        p_35_S01_AXI_bresp->set_sv_netview_offsetfromdp(12321912);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_S01_AXI_buser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->S01_AXI_buser.bind(*p_35_S01_AXI_buser);
        p_35_S01_AXI_buser->set_sv_netview_offsetfromdp(12321968);
        xsim_sc_channel<0, bool > *p_35_S01_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->S01_AXI_bvalid.bind(*p_35_S01_AXI_bvalid);
        p_35_S01_AXI_bvalid->set_sv_netview_offsetfromdp(12322024);
        xsim_sc_channel<0, bool > *p_35_S01_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_35->S01_AXI_bready.bind(*p_35_S01_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S01_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_S01_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->S01_AXI_arid.bind(*p_35_S01_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S01_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_35_S01_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_35->S01_AXI_araddr.bind(*p_35_S01_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S01_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_35_S01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_35->S01_AXI_arlen.bind(*p_35_S01_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S01_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_S01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->S01_AXI_arsize.bind(*p_35_S01_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S01_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_S01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->S01_AXI_arburst.bind(*p_35_S01_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S01_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_S01_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->S01_AXI_arlock.bind(*p_35_S01_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S01_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_S01_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->S01_AXI_arcache.bind(*p_35_S01_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S01_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_S01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->S01_AXI_arprot.bind(*p_35_S01_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S01_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_S01_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->S01_AXI_arqos.bind(*p_35_S01_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S01_AXI_arqos);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_S01_AXI_aruser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->S01_AXI_aruser.bind(*p_35_S01_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S01_AXI_aruser);
        xsim_sc_channel<0, bool > *p_35_S01_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->S01_AXI_arvalid.bind(*p_35_S01_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S01_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_35_S01_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_35->S01_AXI_arready.bind(*p_35_S01_AXI_arready);
        p_35_S01_AXI_arready->set_sv_netview_offsetfromdp(12322752);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_S01_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->S01_AXI_rid.bind(*p_35_S01_AXI_rid);
        p_35_S01_AXI_rid->set_sv_netview_offsetfromdp(12322808);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_35_S01_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_35->S01_AXI_rdata.bind(*p_35_S01_AXI_rdata);
        p_35_S01_AXI_rdata->set_sv_netview_offsetfromdp(12322864);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_S01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->S01_AXI_rresp.bind(*p_35_S01_AXI_rresp);
        p_35_S01_AXI_rresp->set_sv_netview_offsetfromdp(12322920);
        xsim_sc_channel<0, bool > *p_35_S01_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_35->S01_AXI_rlast.bind(*p_35_S01_AXI_rlast);
        p_35_S01_AXI_rlast->set_sv_netview_offsetfromdp(12322976);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_S01_AXI_ruser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->S01_AXI_ruser.bind(*p_35_S01_AXI_ruser);
        p_35_S01_AXI_ruser->set_sv_netview_offsetfromdp(12323032);
        xsim_sc_channel<0, bool > *p_35_S01_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->S01_AXI_rvalid.bind(*p_35_S01_AXI_rvalid);
        p_35_S01_AXI_rvalid->set_sv_netview_offsetfromdp(12323088);
        xsim_sc_channel<0, bool > *p_35_S01_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_35->S01_AXI_rready.bind(*p_35_S01_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S01_AXI_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_35_M00_AXI_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_35->M00_AXI_awaddr.bind(*p_35_M00_AXI_awaddr);
        p_35_M00_AXI_awaddr->set_sv_netview_offsetfromdp(12323200);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_35_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_35->M00_AXI_awlen.bind(*p_35_M00_AXI_awlen);
        p_35_M00_AXI_awlen->set_sv_netview_offsetfromdp(12323256);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M00_AXI_awsize.bind(*p_35_M00_AXI_awsize);
        p_35_M00_AXI_awsize->set_sv_netview_offsetfromdp(12323312);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M00_AXI_awburst.bind(*p_35_M00_AXI_awburst);
        p_35_M00_AXI_awburst->set_sv_netview_offsetfromdp(12323368);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->M00_AXI_awlock.bind(*p_35_M00_AXI_awlock);
        p_35_M00_AXI_awlock->set_sv_netview_offsetfromdp(12323424);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M00_AXI_awcache.bind(*p_35_M00_AXI_awcache);
        p_35_M00_AXI_awcache->set_sv_netview_offsetfromdp(12323480);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M00_AXI_awprot.bind(*p_35_M00_AXI_awprot);
        p_35_M00_AXI_awprot->set_sv_netview_offsetfromdp(12323536);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M00_AXI_awqos.bind(*p_35_M00_AXI_awqos);
        p_35_M00_AXI_awqos->set_sv_netview_offsetfromdp(12323592);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_35_M00_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_35->M00_AXI_awuser.bind(*p_35_M00_AXI_awuser);
        p_35_M00_AXI_awuser->set_sv_netview_offsetfromdp(12323648);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_awvalid.bind(*p_35_M00_AXI_awvalid);
        p_35_M00_AXI_awvalid->set_sv_netview_offsetfromdp(12323704);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_awready.bind(*p_35_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_35_M00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_35->M00_AXI_wdata.bind(*p_35_M00_AXI_wdata);
        p_35_M00_AXI_wdata->set_sv_netview_offsetfromdp(12323816);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M00_AXI_wstrb.bind(*p_35_M00_AXI_wstrb);
        p_35_M00_AXI_wstrb->set_sv_netview_offsetfromdp(12323872);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_wlast.bind(*p_35_M00_AXI_wlast);
        p_35_M00_AXI_wlast->set_sv_netview_offsetfromdp(12323928);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_wvalid.bind(*p_35_M00_AXI_wvalid);
        p_35_M00_AXI_wvalid->set_sv_netview_offsetfromdp(12323984);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_wready.bind(*p_35_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M00_AXI_bresp.bind(*p_35_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_bresp);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M00_AXI_buser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M00_AXI_buser.bind(*p_35_M00_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_buser);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_bvalid.bind(*p_35_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_bready.bind(*p_35_M00_AXI_bready);
        p_35_M00_AXI_bready->set_sv_netview_offsetfromdp(12324264);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_35_M00_AXI_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_35->M00_AXI_araddr.bind(*p_35_M00_AXI_araddr);
        p_35_M00_AXI_araddr->set_sv_netview_offsetfromdp(12324320);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_35_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_35->M00_AXI_arlen.bind(*p_35_M00_AXI_arlen);
        p_35_M00_AXI_arlen->set_sv_netview_offsetfromdp(12324376);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M00_AXI_arsize.bind(*p_35_M00_AXI_arsize);
        p_35_M00_AXI_arsize->set_sv_netview_offsetfromdp(12324432);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M00_AXI_arburst.bind(*p_35_M00_AXI_arburst);
        p_35_M00_AXI_arburst->set_sv_netview_offsetfromdp(12324488);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->M00_AXI_arlock.bind(*p_35_M00_AXI_arlock);
        p_35_M00_AXI_arlock->set_sv_netview_offsetfromdp(12324544);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M00_AXI_arcache.bind(*p_35_M00_AXI_arcache);
        p_35_M00_AXI_arcache->set_sv_netview_offsetfromdp(12324600);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M00_AXI_arprot.bind(*p_35_M00_AXI_arprot);
        p_35_M00_AXI_arprot->set_sv_netview_offsetfromdp(12324656);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M00_AXI_arqos.bind(*p_35_M00_AXI_arqos);
        p_35_M00_AXI_arqos->set_sv_netview_offsetfromdp(12324712);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_35_M00_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_35->M00_AXI_aruser.bind(*p_35_M00_AXI_aruser);
        p_35_M00_AXI_aruser->set_sv_netview_offsetfromdp(12324768);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_arvalid.bind(*p_35_M00_AXI_arvalid);
        p_35_M00_AXI_arvalid->set_sv_netview_offsetfromdp(12324824);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_arready.bind(*p_35_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_35_M00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_35->M00_AXI_rdata.bind(*p_35_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M00_AXI_rresp.bind(*p_35_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_rlast.bind(*p_35_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_rvalid.bind(*p_35_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_rready.bind(*p_35_M00_AXI_rready);
        p_35_M00_AXI_rready->set_sv_netview_offsetfromdp(12325160);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_35_M01_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_35->M01_AXI_awaddr.bind(*p_35_M01_AXI_awaddr);
        p_35_M01_AXI_awaddr->set_sv_netview_offsetfromdp(12325216);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_35_M01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_35->M01_AXI_awlen.bind(*p_35_M01_AXI_awlen);
        p_35_M01_AXI_awlen->set_sv_netview_offsetfromdp(12325272);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M01_AXI_awsize.bind(*p_35_M01_AXI_awsize);
        p_35_M01_AXI_awsize->set_sv_netview_offsetfromdp(12325328);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M01_AXI_awburst.bind(*p_35_M01_AXI_awburst);
        p_35_M01_AXI_awburst->set_sv_netview_offsetfromdp(12325384);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_M01_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->M01_AXI_awlock.bind(*p_35_M01_AXI_awlock);
        p_35_M01_AXI_awlock->set_sv_netview_offsetfromdp(12325440);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M01_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M01_AXI_awcache.bind(*p_35_M01_AXI_awcache);
        p_35_M01_AXI_awcache->set_sv_netview_offsetfromdp(12325496);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M01_AXI_awprot.bind(*p_35_M01_AXI_awprot);
        p_35_M01_AXI_awprot->set_sv_netview_offsetfromdp(12325552);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M01_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M01_AXI_awqos.bind(*p_35_M01_AXI_awqos);
        p_35_M01_AXI_awqos->set_sv_netview_offsetfromdp(12325608);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_35_M01_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_35->M01_AXI_awuser.bind(*p_35_M01_AXI_awuser);
        p_35_M01_AXI_awuser->set_sv_netview_offsetfromdp(12325664);
        xsim_sc_channel<0, bool > *p_35_M01_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M01_AXI_awvalid.bind(*p_35_M01_AXI_awvalid);
        p_35_M01_AXI_awvalid->set_sv_netview_offsetfromdp(12325720);
        xsim_sc_channel<0, bool > *p_35_M01_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M01_AXI_awready.bind(*p_35_M01_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M01_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_35_M01_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_35->M01_AXI_wdata.bind(*p_35_M01_AXI_wdata);
        p_35_M01_AXI_wdata->set_sv_netview_offsetfromdp(12325832);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M01_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M01_AXI_wstrb.bind(*p_35_M01_AXI_wstrb);
        p_35_M01_AXI_wstrb->set_sv_netview_offsetfromdp(12325888);
        xsim_sc_channel<0, bool > *p_35_M01_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_35->M01_AXI_wlast.bind(*p_35_M01_AXI_wlast);
        p_35_M01_AXI_wlast->set_sv_netview_offsetfromdp(12325944);
        xsim_sc_channel<0, bool > *p_35_M01_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M01_AXI_wvalid.bind(*p_35_M01_AXI_wvalid);
        p_35_M01_AXI_wvalid->set_sv_netview_offsetfromdp(12326000);
        xsim_sc_channel<0, bool > *p_35_M01_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M01_AXI_wready.bind(*p_35_M01_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M01_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M01_AXI_bresp.bind(*p_35_M01_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M01_AXI_bresp);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M01_AXI_buser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M01_AXI_buser.bind(*p_35_M01_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M01_AXI_buser);
        xsim_sc_channel<0, bool > *p_35_M01_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M01_AXI_bvalid.bind(*p_35_M01_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M01_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_35_M01_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M01_AXI_bready.bind(*p_35_M01_AXI_bready);
        p_35_M01_AXI_bready->set_sv_netview_offsetfromdp(12326280);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_35_M01_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_35->M01_AXI_araddr.bind(*p_35_M01_AXI_araddr);
        p_35_M01_AXI_araddr->set_sv_netview_offsetfromdp(12326336);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_35_M01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_35->M01_AXI_arlen.bind(*p_35_M01_AXI_arlen);
        p_35_M01_AXI_arlen->set_sv_netview_offsetfromdp(12326392);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M01_AXI_arsize.bind(*p_35_M01_AXI_arsize);
        p_35_M01_AXI_arsize->set_sv_netview_offsetfromdp(12326448);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M01_AXI_arburst.bind(*p_35_M01_AXI_arburst);
        p_35_M01_AXI_arburst->set_sv_netview_offsetfromdp(12326504);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_M01_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->M01_AXI_arlock.bind(*p_35_M01_AXI_arlock);
        p_35_M01_AXI_arlock->set_sv_netview_offsetfromdp(12326560);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M01_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M01_AXI_arcache.bind(*p_35_M01_AXI_arcache);
        p_35_M01_AXI_arcache->set_sv_netview_offsetfromdp(12326616);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M01_AXI_arprot.bind(*p_35_M01_AXI_arprot);
        p_35_M01_AXI_arprot->set_sv_netview_offsetfromdp(12326672);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M01_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M01_AXI_arqos.bind(*p_35_M01_AXI_arqos);
        p_35_M01_AXI_arqos->set_sv_netview_offsetfromdp(12326728);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_35_M01_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_35->M01_AXI_aruser.bind(*p_35_M01_AXI_aruser);
        p_35_M01_AXI_aruser->set_sv_netview_offsetfromdp(12326784);
        xsim_sc_channel<0, bool > *p_35_M01_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M01_AXI_arvalid.bind(*p_35_M01_AXI_arvalid);
        p_35_M01_AXI_arvalid->set_sv_netview_offsetfromdp(12326840);
        xsim_sc_channel<0, bool > *p_35_M01_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M01_AXI_arready.bind(*p_35_M01_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M01_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_35_M01_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_35->M01_AXI_rdata.bind(*p_35_M01_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M01_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M01_AXI_rresp.bind(*p_35_M01_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M01_AXI_rresp);
        xsim_sc_channel<0, bool > *p_35_M01_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_35->M01_AXI_rlast.bind(*p_35_M01_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M01_AXI_rlast);
        xsim_sc_channel<0, bool > *p_35_M01_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M01_AXI_rvalid.bind(*p_35_M01_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M01_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_35_M01_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M01_AXI_rready.bind(*p_35_M01_AXI_rready);
        p_35_M01_AXI_rready->set_sv_netview_offsetfromdp(12327176);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_35_M02_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_35->M02_AXI_awaddr.bind(*p_35_M02_AXI_awaddr);
        p_35_M02_AXI_awaddr->set_sv_netview_offsetfromdp(12327232);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_35_M02_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_35->M02_AXI_awlen.bind(*p_35_M02_AXI_awlen);
        p_35_M02_AXI_awlen->set_sv_netview_offsetfromdp(12327288);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M02_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M02_AXI_awsize.bind(*p_35_M02_AXI_awsize);
        p_35_M02_AXI_awsize->set_sv_netview_offsetfromdp(12327344);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M02_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M02_AXI_awburst.bind(*p_35_M02_AXI_awburst);
        p_35_M02_AXI_awburst->set_sv_netview_offsetfromdp(12327400);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_M02_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->M02_AXI_awlock.bind(*p_35_M02_AXI_awlock);
        p_35_M02_AXI_awlock->set_sv_netview_offsetfromdp(12327456);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M02_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M02_AXI_awcache.bind(*p_35_M02_AXI_awcache);
        p_35_M02_AXI_awcache->set_sv_netview_offsetfromdp(12327512);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M02_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M02_AXI_awprot.bind(*p_35_M02_AXI_awprot);
        p_35_M02_AXI_awprot->set_sv_netview_offsetfromdp(12327568);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M02_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M02_AXI_awqos.bind(*p_35_M02_AXI_awqos);
        p_35_M02_AXI_awqos->set_sv_netview_offsetfromdp(12327624);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_35_M02_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_35->M02_AXI_awuser.bind(*p_35_M02_AXI_awuser);
        p_35_M02_AXI_awuser->set_sv_netview_offsetfromdp(12327680);
        xsim_sc_channel<0, bool > *p_35_M02_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M02_AXI_awvalid.bind(*p_35_M02_AXI_awvalid);
        p_35_M02_AXI_awvalid->set_sv_netview_offsetfromdp(12327736);
        xsim_sc_channel<0, bool > *p_35_M02_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M02_AXI_awready.bind(*p_35_M02_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M02_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_35_M02_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_35->M02_AXI_wdata.bind(*p_35_M02_AXI_wdata);
        p_35_M02_AXI_wdata->set_sv_netview_offsetfromdp(12327848);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M02_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M02_AXI_wstrb.bind(*p_35_M02_AXI_wstrb);
        p_35_M02_AXI_wstrb->set_sv_netview_offsetfromdp(12327904);
        xsim_sc_channel<0, bool > *p_35_M02_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_35->M02_AXI_wlast.bind(*p_35_M02_AXI_wlast);
        p_35_M02_AXI_wlast->set_sv_netview_offsetfromdp(12327960);
        xsim_sc_channel<0, bool > *p_35_M02_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M02_AXI_wvalid.bind(*p_35_M02_AXI_wvalid);
        p_35_M02_AXI_wvalid->set_sv_netview_offsetfromdp(12328016);
        xsim_sc_channel<0, bool > *p_35_M02_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M02_AXI_wready.bind(*p_35_M02_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M02_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M02_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M02_AXI_bresp.bind(*p_35_M02_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M02_AXI_bresp);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M02_AXI_buser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M02_AXI_buser.bind(*p_35_M02_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M02_AXI_buser);
        xsim_sc_channel<0, bool > *p_35_M02_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M02_AXI_bvalid.bind(*p_35_M02_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M02_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_35_M02_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M02_AXI_bready.bind(*p_35_M02_AXI_bready);
        p_35_M02_AXI_bready->set_sv_netview_offsetfromdp(12328296);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_35_M02_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_35->M02_AXI_araddr.bind(*p_35_M02_AXI_araddr);
        p_35_M02_AXI_araddr->set_sv_netview_offsetfromdp(12328352);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_35_M02_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_35->M02_AXI_arlen.bind(*p_35_M02_AXI_arlen);
        p_35_M02_AXI_arlen->set_sv_netview_offsetfromdp(12328408);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M02_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M02_AXI_arsize.bind(*p_35_M02_AXI_arsize);
        p_35_M02_AXI_arsize->set_sv_netview_offsetfromdp(12328464);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M02_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M02_AXI_arburst.bind(*p_35_M02_AXI_arburst);
        p_35_M02_AXI_arburst->set_sv_netview_offsetfromdp(12328520);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_M02_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->M02_AXI_arlock.bind(*p_35_M02_AXI_arlock);
        p_35_M02_AXI_arlock->set_sv_netview_offsetfromdp(12328576);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M02_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M02_AXI_arcache.bind(*p_35_M02_AXI_arcache);
        p_35_M02_AXI_arcache->set_sv_netview_offsetfromdp(12328632);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M02_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M02_AXI_arprot.bind(*p_35_M02_AXI_arprot);
        p_35_M02_AXI_arprot->set_sv_netview_offsetfromdp(12328688);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M02_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M02_AXI_arqos.bind(*p_35_M02_AXI_arqos);
        p_35_M02_AXI_arqos->set_sv_netview_offsetfromdp(12328744);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_35_M02_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_35->M02_AXI_aruser.bind(*p_35_M02_AXI_aruser);
        p_35_M02_AXI_aruser->set_sv_netview_offsetfromdp(12328800);
        xsim_sc_channel<0, bool > *p_35_M02_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M02_AXI_arvalid.bind(*p_35_M02_AXI_arvalid);
        p_35_M02_AXI_arvalid->set_sv_netview_offsetfromdp(12328856);
        xsim_sc_channel<0, bool > *p_35_M02_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M02_AXI_arready.bind(*p_35_M02_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M02_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_35_M02_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_35->M02_AXI_rdata.bind(*p_35_M02_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M02_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M02_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M02_AXI_rresp.bind(*p_35_M02_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M02_AXI_rresp);
        xsim_sc_channel<0, bool > *p_35_M02_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_35->M02_AXI_rlast.bind(*p_35_M02_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M02_AXI_rlast);
        xsim_sc_channel<0, bool > *p_35_M02_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M02_AXI_rvalid.bind(*p_35_M02_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M02_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_35_M02_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M02_AXI_rready.bind(*p_35_M02_AXI_rready);
        p_35_M02_AXI_rready->set_sv_netview_offsetfromdp(12329192);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_35_M03_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_35->M03_AXI_awaddr.bind(*p_35_M03_AXI_awaddr);
        p_35_M03_AXI_awaddr->set_sv_netview_offsetfromdp(12329248);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_35_M03_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_35->M03_AXI_awlen.bind(*p_35_M03_AXI_awlen);
        p_35_M03_AXI_awlen->set_sv_netview_offsetfromdp(12329304);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M03_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M03_AXI_awsize.bind(*p_35_M03_AXI_awsize);
        p_35_M03_AXI_awsize->set_sv_netview_offsetfromdp(12329360);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M03_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M03_AXI_awburst.bind(*p_35_M03_AXI_awburst);
        p_35_M03_AXI_awburst->set_sv_netview_offsetfromdp(12329416);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_M03_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->M03_AXI_awlock.bind(*p_35_M03_AXI_awlock);
        p_35_M03_AXI_awlock->set_sv_netview_offsetfromdp(12329472);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M03_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M03_AXI_awcache.bind(*p_35_M03_AXI_awcache);
        p_35_M03_AXI_awcache->set_sv_netview_offsetfromdp(12329528);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M03_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M03_AXI_awprot.bind(*p_35_M03_AXI_awprot);
        p_35_M03_AXI_awprot->set_sv_netview_offsetfromdp(12329584);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M03_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M03_AXI_awqos.bind(*p_35_M03_AXI_awqos);
        p_35_M03_AXI_awqos->set_sv_netview_offsetfromdp(12329640);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_35_M03_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_35->M03_AXI_awuser.bind(*p_35_M03_AXI_awuser);
        p_35_M03_AXI_awuser->set_sv_netview_offsetfromdp(12329696);
        xsim_sc_channel<0, bool > *p_35_M03_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M03_AXI_awvalid.bind(*p_35_M03_AXI_awvalid);
        p_35_M03_AXI_awvalid->set_sv_netview_offsetfromdp(12329752);
        xsim_sc_channel<0, bool > *p_35_M03_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M03_AXI_awready.bind(*p_35_M03_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M03_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_35_M03_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_35->M03_AXI_wdata.bind(*p_35_M03_AXI_wdata);
        p_35_M03_AXI_wdata->set_sv_netview_offsetfromdp(12329864);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M03_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M03_AXI_wstrb.bind(*p_35_M03_AXI_wstrb);
        p_35_M03_AXI_wstrb->set_sv_netview_offsetfromdp(12329920);
        xsim_sc_channel<0, bool > *p_35_M03_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_35->M03_AXI_wlast.bind(*p_35_M03_AXI_wlast);
        p_35_M03_AXI_wlast->set_sv_netview_offsetfromdp(12329976);
        xsim_sc_channel<0, bool > *p_35_M03_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M03_AXI_wvalid.bind(*p_35_M03_AXI_wvalid);
        p_35_M03_AXI_wvalid->set_sv_netview_offsetfromdp(12330032);
        xsim_sc_channel<0, bool > *p_35_M03_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M03_AXI_wready.bind(*p_35_M03_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M03_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M03_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M03_AXI_bresp.bind(*p_35_M03_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M03_AXI_bresp);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M03_AXI_buser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M03_AXI_buser.bind(*p_35_M03_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M03_AXI_buser);
        xsim_sc_channel<0, bool > *p_35_M03_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M03_AXI_bvalid.bind(*p_35_M03_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M03_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_35_M03_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M03_AXI_bready.bind(*p_35_M03_AXI_bready);
        p_35_M03_AXI_bready->set_sv_netview_offsetfromdp(12330312);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_35_M03_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_35->M03_AXI_araddr.bind(*p_35_M03_AXI_araddr);
        p_35_M03_AXI_araddr->set_sv_netview_offsetfromdp(12330368);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_35_M03_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_35->M03_AXI_arlen.bind(*p_35_M03_AXI_arlen);
        p_35_M03_AXI_arlen->set_sv_netview_offsetfromdp(12330424);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M03_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M03_AXI_arsize.bind(*p_35_M03_AXI_arsize);
        p_35_M03_AXI_arsize->set_sv_netview_offsetfromdp(12330480);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M03_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M03_AXI_arburst.bind(*p_35_M03_AXI_arburst);
        p_35_M03_AXI_arburst->set_sv_netview_offsetfromdp(12330536);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_M03_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->M03_AXI_arlock.bind(*p_35_M03_AXI_arlock);
        p_35_M03_AXI_arlock->set_sv_netview_offsetfromdp(12330592);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M03_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M03_AXI_arcache.bind(*p_35_M03_AXI_arcache);
        p_35_M03_AXI_arcache->set_sv_netview_offsetfromdp(12330648);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M03_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M03_AXI_arprot.bind(*p_35_M03_AXI_arprot);
        p_35_M03_AXI_arprot->set_sv_netview_offsetfromdp(12330704);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M03_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M03_AXI_arqos.bind(*p_35_M03_AXI_arqos);
        p_35_M03_AXI_arqos->set_sv_netview_offsetfromdp(12330760);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_35_M03_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_35->M03_AXI_aruser.bind(*p_35_M03_AXI_aruser);
        p_35_M03_AXI_aruser->set_sv_netview_offsetfromdp(12330816);
        xsim_sc_channel<0, bool > *p_35_M03_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M03_AXI_arvalid.bind(*p_35_M03_AXI_arvalid);
        p_35_M03_AXI_arvalid->set_sv_netview_offsetfromdp(12330872);
        xsim_sc_channel<0, bool > *p_35_M03_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M03_AXI_arready.bind(*p_35_M03_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M03_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_35_M03_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_35->M03_AXI_rdata.bind(*p_35_M03_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M03_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M03_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M03_AXI_rresp.bind(*p_35_M03_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M03_AXI_rresp);
        xsim_sc_channel<0, bool > *p_35_M03_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_35->M03_AXI_rlast.bind(*p_35_M03_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M03_AXI_rlast);
        xsim_sc_channel<0, bool > *p_35_M03_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M03_AXI_rvalid.bind(*p_35_M03_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M03_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_35_M03_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M03_AXI_rready.bind(*p_35_M03_AXI_rready);
        p_35_M03_AXI_rready->set_sv_netview_offsetfromdp(12331208);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_35_M04_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_35->M04_AXI_awaddr.bind(*p_35_M04_AXI_awaddr);
        p_35_M04_AXI_awaddr->set_sv_netview_offsetfromdp(12331264);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_35_M04_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_35->M04_AXI_awlen.bind(*p_35_M04_AXI_awlen);
        p_35_M04_AXI_awlen->set_sv_netview_offsetfromdp(12331320);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M04_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M04_AXI_awsize.bind(*p_35_M04_AXI_awsize);
        p_35_M04_AXI_awsize->set_sv_netview_offsetfromdp(12331376);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M04_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M04_AXI_awburst.bind(*p_35_M04_AXI_awburst);
        p_35_M04_AXI_awburst->set_sv_netview_offsetfromdp(12331432);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_M04_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->M04_AXI_awlock.bind(*p_35_M04_AXI_awlock);
        p_35_M04_AXI_awlock->set_sv_netview_offsetfromdp(12331488);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M04_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M04_AXI_awcache.bind(*p_35_M04_AXI_awcache);
        p_35_M04_AXI_awcache->set_sv_netview_offsetfromdp(12331544);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M04_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M04_AXI_awprot.bind(*p_35_M04_AXI_awprot);
        p_35_M04_AXI_awprot->set_sv_netview_offsetfromdp(12331600);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M04_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M04_AXI_awqos.bind(*p_35_M04_AXI_awqos);
        p_35_M04_AXI_awqos->set_sv_netview_offsetfromdp(12331656);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_35_M04_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_35->M04_AXI_awuser.bind(*p_35_M04_AXI_awuser);
        p_35_M04_AXI_awuser->set_sv_netview_offsetfromdp(12331712);
        xsim_sc_channel<0, bool > *p_35_M04_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M04_AXI_awvalid.bind(*p_35_M04_AXI_awvalid);
        p_35_M04_AXI_awvalid->set_sv_netview_offsetfromdp(12331768);
        xsim_sc_channel<0, bool > *p_35_M04_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M04_AXI_awready.bind(*p_35_M04_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M04_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_35_M04_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_35->M04_AXI_wdata.bind(*p_35_M04_AXI_wdata);
        p_35_M04_AXI_wdata->set_sv_netview_offsetfromdp(12331880);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M04_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M04_AXI_wstrb.bind(*p_35_M04_AXI_wstrb);
        p_35_M04_AXI_wstrb->set_sv_netview_offsetfromdp(12331936);
        xsim_sc_channel<0, bool > *p_35_M04_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_35->M04_AXI_wlast.bind(*p_35_M04_AXI_wlast);
        p_35_M04_AXI_wlast->set_sv_netview_offsetfromdp(12331992);
        xsim_sc_channel<0, bool > *p_35_M04_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M04_AXI_wvalid.bind(*p_35_M04_AXI_wvalid);
        p_35_M04_AXI_wvalid->set_sv_netview_offsetfromdp(12332048);
        xsim_sc_channel<0, bool > *p_35_M04_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M04_AXI_wready.bind(*p_35_M04_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M04_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M04_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M04_AXI_bresp.bind(*p_35_M04_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M04_AXI_bresp);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M04_AXI_buser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M04_AXI_buser.bind(*p_35_M04_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M04_AXI_buser);
        xsim_sc_channel<0, bool > *p_35_M04_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M04_AXI_bvalid.bind(*p_35_M04_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M04_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_35_M04_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M04_AXI_bready.bind(*p_35_M04_AXI_bready);
        p_35_M04_AXI_bready->set_sv_netview_offsetfromdp(12332328);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_35_M04_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_35->M04_AXI_araddr.bind(*p_35_M04_AXI_araddr);
        p_35_M04_AXI_araddr->set_sv_netview_offsetfromdp(12332384);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_35_M04_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_35->M04_AXI_arlen.bind(*p_35_M04_AXI_arlen);
        p_35_M04_AXI_arlen->set_sv_netview_offsetfromdp(12332440);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M04_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M04_AXI_arsize.bind(*p_35_M04_AXI_arsize);
        p_35_M04_AXI_arsize->set_sv_netview_offsetfromdp(12332496);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M04_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M04_AXI_arburst.bind(*p_35_M04_AXI_arburst);
        p_35_M04_AXI_arburst->set_sv_netview_offsetfromdp(12332552);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_M04_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->M04_AXI_arlock.bind(*p_35_M04_AXI_arlock);
        p_35_M04_AXI_arlock->set_sv_netview_offsetfromdp(12332608);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M04_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M04_AXI_arcache.bind(*p_35_M04_AXI_arcache);
        p_35_M04_AXI_arcache->set_sv_netview_offsetfromdp(12332664);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M04_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M04_AXI_arprot.bind(*p_35_M04_AXI_arprot);
        p_35_M04_AXI_arprot->set_sv_netview_offsetfromdp(12332720);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M04_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M04_AXI_arqos.bind(*p_35_M04_AXI_arqos);
        p_35_M04_AXI_arqos->set_sv_netview_offsetfromdp(12332776);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_35_M04_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_35->M04_AXI_aruser.bind(*p_35_M04_AXI_aruser);
        p_35_M04_AXI_aruser->set_sv_netview_offsetfromdp(12332832);
        xsim_sc_channel<0, bool > *p_35_M04_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M04_AXI_arvalid.bind(*p_35_M04_AXI_arvalid);
        p_35_M04_AXI_arvalid->set_sv_netview_offsetfromdp(12332888);
        xsim_sc_channel<0, bool > *p_35_M04_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M04_AXI_arready.bind(*p_35_M04_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M04_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_35_M04_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_35->M04_AXI_rdata.bind(*p_35_M04_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M04_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M04_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M04_AXI_rresp.bind(*p_35_M04_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M04_AXI_rresp);
        xsim_sc_channel<0, bool > *p_35_M04_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_35->M04_AXI_rlast.bind(*p_35_M04_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M04_AXI_rlast);
        xsim_sc_channel<0, bool > *p_35_M04_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M04_AXI_rvalid.bind(*p_35_M04_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M04_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_35_M04_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M04_AXI_rready.bind(*p_35_M04_AXI_rready);
        p_35_M04_AXI_rready->set_sv_netview_offsetfromdp(12333224);
    }


extern "C"
    void implicit_HDL_SCcleanup()
    {
        delete sc_inst_1;
        delete sc_inst_2;
        delete sc_inst_3;
        delete sc_inst_4;
        delete sc_inst_5;
        delete sc_inst_6;
        delete sc_inst_7;
        delete sc_inst_8;
        delete sc_inst_9;
        delete sc_inst_10;
        delete sc_inst_11;
        delete sc_inst_12;
        delete sc_inst_13;
        delete sc_inst_14;
        delete sc_inst_15;
        delete sc_inst_16;
        delete sc_inst_17;
        delete sc_inst_18;
        delete sc_inst_19;
        delete sc_inst_20;
        delete sc_inst_21;
        delete sc_inst_22;
        delete sc_inst_23;
        delete sc_inst_24;
        delete sc_inst_25;
        delete sc_inst_26;
        delete sc_inst_27;
        delete sc_inst_28;
        delete sc_inst_29;
        delete sc_inst_30;
        delete sc_inst_31;
        delete sc_inst_32;
        delete sc_inst_33;
        delete sc_inst_34;
        delete sc_inst_35;
    }
