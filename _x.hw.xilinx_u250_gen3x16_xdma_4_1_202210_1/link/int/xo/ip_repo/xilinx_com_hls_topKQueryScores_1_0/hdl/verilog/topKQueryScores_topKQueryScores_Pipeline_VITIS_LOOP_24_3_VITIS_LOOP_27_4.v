// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module topKQueryScores_topKQueryScores_Pipeline_VITIS_LOOP_24_3_VITIS_LOOP_27_4 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RFIFONUM,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        mul_ln34,
        query_scores_address0,
        query_scores_ce0,
        query_scores_we0,
        query_scores_d0,
        query_scores_q0,
        topK_indices,
        trunc_ln34_1
);

parameter    ap_ST_fsm_pp0_stage0 = 3'd1;
parameter    ap_ST_fsm_pp0_stage1 = 3'd2;
parameter    ap_ST_fsm_pp0_stage2 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [63:0] m_axi_gmem_AWADDR;
output  [0:0] m_axi_gmem_AWID;
output  [31:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [0:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [63:0] m_axi_gmem_WDATA;
output  [7:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [0:0] m_axi_gmem_WID;
output  [0:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [63:0] m_axi_gmem_ARADDR;
output  [0:0] m_axi_gmem_ARID;
output  [31:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [0:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [63:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [0:0] m_axi_gmem_RID;
input  [8:0] m_axi_gmem_RFIFONUM;
input  [0:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [0:0] m_axi_gmem_BID;
input  [0:0] m_axi_gmem_BUSER;
input  [39:0] mul_ln34;
output  [7:0] query_scores_address0;
output   query_scores_ce0;
output   query_scores_we0;
output  [31:0] query_scores_d0;
input  [31:0] query_scores_q0;
input  [63:0] topK_indices;
input  [2:0] trunc_ln34_1;

reg ap_idle;
reg m_axi_gmem_AWVALID;
reg m_axi_gmem_WVALID;
reg m_axi_gmem_BREADY;
reg[7:0] query_scores_address0;
reg query_scores_ce0;
reg query_scores_we0;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state6_pp0_stage2_iter1;
wire    ap_block_state9_pp0_stage2_iter2;
wire    ap_block_state12_pp0_stage2_iter3;
wire    ap_block_state15_pp0_stage2_iter4;
wire    ap_block_state18_pp0_stage2_iter5;
wire    ap_block_state21_pp0_stage2_iter6;
wire    ap_block_state24_pp0_stage2_iter7;
wire    ap_block_state27_pp0_stage2_iter8;
wire    ap_block_state30_pp0_stage2_iter9;
wire    ap_block_state33_pp0_stage2_iter10;
wire    ap_block_state36_pp0_stage2_iter11;
wire    ap_block_state39_pp0_stage2_iter12;
wire    ap_block_state42_pp0_stage2_iter13;
wire    ap_block_state45_pp0_stage2_iter14;
wire    ap_block_state48_pp0_stage2_iter15;
wire    ap_block_state51_pp0_stage2_iter16;
wire    ap_block_state54_pp0_stage2_iter17;
wire    ap_block_state57_pp0_stage2_iter18;
wire    ap_block_state60_pp0_stage2_iter19;
wire    ap_block_state63_pp0_stage2_iter20;
wire    ap_block_state66_pp0_stage2_iter21;
wire    ap_block_state69_pp0_stage2_iter22;
wire    ap_block_state72_pp0_stage2_iter23;
wire    ap_block_pp0_stage2_subdone;
reg   [0:0] icmp_ln24_reg_451;
reg    ap_condition_exit_pp0_iter0_stage2;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    gmem_blk_n_AW;
wire    ap_block_pp0_stage0;
reg   [0:0] ifzero_reg_487;
reg    gmem_blk_n_W;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
reg    gmem_blk_n_B;
reg   [0:0] ifzero_reg_487_pp0_iter23_reg;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
reg    ap_predicate_op138_writereq_state4;
reg    ap_block_state4_io;
wire    ap_block_state7_pp0_stage0_iter2;
wire    ap_block_state10_pp0_stage0_iter3;
wire    ap_block_state13_pp0_stage0_iter4;
wire    ap_block_state16_pp0_stage0_iter5;
wire    ap_block_state19_pp0_stage0_iter6;
wire    ap_block_state22_pp0_stage0_iter7;
wire    ap_block_state25_pp0_stage0_iter8;
wire    ap_block_state28_pp0_stage0_iter9;
wire    ap_block_state31_pp0_stage0_iter10;
wire    ap_block_state34_pp0_stage0_iter11;
wire    ap_block_state37_pp0_stage0_iter12;
wire    ap_block_state40_pp0_stage0_iter13;
wire    ap_block_state43_pp0_stage0_iter14;
wire    ap_block_state46_pp0_stage0_iter15;
wire    ap_block_state49_pp0_stage0_iter16;
wire    ap_block_state52_pp0_stage0_iter17;
wire    ap_block_state55_pp0_stage0_iter18;
wire    ap_block_state58_pp0_stage0_iter19;
wire    ap_block_state61_pp0_stage0_iter20;
wire    ap_block_state64_pp0_stage0_iter21;
wire    ap_block_state67_pp0_stage0_iter22;
wire    ap_block_state70_pp0_stage0_iter23;
reg    ap_block_state73_pp0_stage0_iter24;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln24_fu_191_p2;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state5_pp0_stage1_iter1;
reg    ap_block_state5_io;
wire    ap_block_state8_pp0_stage1_iter2;
wire    ap_block_state11_pp0_stage1_iter3;
wire    ap_block_state14_pp0_stage1_iter4;
wire    ap_block_state17_pp0_stage1_iter5;
wire    ap_block_state20_pp0_stage1_iter6;
wire    ap_block_state23_pp0_stage1_iter7;
wire    ap_block_state26_pp0_stage1_iter8;
wire    ap_block_state29_pp0_stage1_iter9;
wire    ap_block_state32_pp0_stage1_iter10;
wire    ap_block_state35_pp0_stage1_iter11;
wire    ap_block_state38_pp0_stage1_iter12;
wire    ap_block_state41_pp0_stage1_iter13;
wire    ap_block_state44_pp0_stage1_iter14;
wire    ap_block_state47_pp0_stage1_iter15;
wire    ap_block_state50_pp0_stage1_iter16;
wire    ap_block_state53_pp0_stage1_iter17;
wire    ap_block_state56_pp0_stage1_iter18;
wire    ap_block_state59_pp0_stage1_iter19;
wire    ap_block_state62_pp0_stage1_iter20;
wire    ap_block_state65_pp0_stage1_iter21;
wire    ap_block_state68_pp0_stage1_iter22;
wire    ap_block_state71_pp0_stage1_iter23;
reg    ap_block_pp0_stage1_11001;
reg   [0:0] icmp_ln24_reg_451_pp0_iter1_reg;
reg   [0:0] icmp_ln24_reg_451_pp0_iter2_reg;
reg   [0:0] icmp_ln24_reg_451_pp0_iter3_reg;
reg   [0:0] icmp_ln24_reg_451_pp0_iter4_reg;
reg   [0:0] icmp_ln24_reg_451_pp0_iter5_reg;
reg   [0:0] icmp_ln24_reg_451_pp0_iter6_reg;
reg   [0:0] icmp_ln24_reg_451_pp0_iter7_reg;
reg   [0:0] icmp_ln24_reg_451_pp0_iter8_reg;
reg   [0:0] icmp_ln24_reg_451_pp0_iter9_reg;
reg   [0:0] icmp_ln24_reg_451_pp0_iter10_reg;
reg   [0:0] icmp_ln24_reg_451_pp0_iter11_reg;
reg   [0:0] icmp_ln24_reg_451_pp0_iter12_reg;
reg   [0:0] icmp_ln24_reg_451_pp0_iter13_reg;
reg   [0:0] icmp_ln24_reg_451_pp0_iter14_reg;
reg   [0:0] icmp_ln24_reg_451_pp0_iter15_reg;
reg   [0:0] icmp_ln24_reg_451_pp0_iter16_reg;
reg   [0:0] icmp_ln24_reg_451_pp0_iter17_reg;
reg   [0:0] icmp_ln24_reg_451_pp0_iter18_reg;
reg   [0:0] icmp_ln24_reg_451_pp0_iter19_reg;
reg   [0:0] icmp_ln24_reg_451_pp0_iter20_reg;
reg   [0:0] icmp_ln24_reg_451_pp0_iter21_reg;
reg   [0:0] icmp_ln24_reg_451_pp0_iter22_reg;
wire   [39:0] add_ln24_fu_196_p2;
reg   [39:0] add_ln24_reg_455;
wire   [0:0] icmp_ln27_fu_208_p2;
reg   [0:0] icmp_ln27_reg_460;
wire   [7:0] select_ln24_fu_214_p3;
reg   [7:0] select_ln24_reg_466;
wire   [30:0] select_ln24_3_fu_228_p3;
reg   [30:0] select_ln24_3_reg_471;
wire   [7:0] add_ln27_fu_241_p2;
reg   [7:0] add_ln27_reg_482;
wire   [0:0] ifzero_fu_247_p2;
reg   [0:0] ifzero_reg_487_pp0_iter1_reg;
reg   [0:0] ifzero_reg_487_pp0_iter2_reg;
reg   [0:0] ifzero_reg_487_pp0_iter3_reg;
reg   [0:0] ifzero_reg_487_pp0_iter4_reg;
reg   [0:0] ifzero_reg_487_pp0_iter5_reg;
reg   [0:0] ifzero_reg_487_pp0_iter6_reg;
reg   [0:0] ifzero_reg_487_pp0_iter7_reg;
reg   [0:0] ifzero_reg_487_pp0_iter8_reg;
reg   [0:0] ifzero_reg_487_pp0_iter9_reg;
reg   [0:0] ifzero_reg_487_pp0_iter10_reg;
reg   [0:0] ifzero_reg_487_pp0_iter11_reg;
reg   [0:0] ifzero_reg_487_pp0_iter12_reg;
reg   [0:0] ifzero_reg_487_pp0_iter13_reg;
reg   [0:0] ifzero_reg_487_pp0_iter14_reg;
reg   [0:0] ifzero_reg_487_pp0_iter15_reg;
reg   [0:0] ifzero_reg_487_pp0_iter16_reg;
reg   [0:0] ifzero_reg_487_pp0_iter17_reg;
reg   [0:0] ifzero_reg_487_pp0_iter18_reg;
reg   [0:0] ifzero_reg_487_pp0_iter19_reg;
reg   [0:0] ifzero_reg_487_pp0_iter20_reg;
reg   [0:0] ifzero_reg_487_pp0_iter21_reg;
reg   [0:0] ifzero_reg_487_pp0_iter22_reg;
wire   [2:0] add_ln34_1_fu_265_p2;
reg   [2:0] add_ln34_1_reg_491;
wire   [7:0] shl_ln34_fu_274_p2;
reg   [7:0] shl_ln34_reg_496;
wire   [31:0] select_ln24_2_fu_283_p3;
reg   [31:0] select_ln24_2_reg_501;
wire    ap_block_pp0_stage2_11001;
reg   [31:0] query_scores_load_reg_507;
reg   [60:0] trunc_ln1_reg_513;
wire   [63:0] shl_ln34_1_fu_375_p2;
reg   [63:0] shl_ln34_1_reg_518;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_block_pp0_stage0_subdone;
wire   [63:0] trunc_ln28_cast_fu_236_p1;
wire   [63:0] zext_ln34_fu_359_p1;
wire  signed [63:0] sext_ln34_fu_381_p1;
wire    ap_block_pp0_stage1_01001;
reg   [31:0] max_score_fu_88;
wire   [31:0] max_score_1_fu_342_p3;
wire    ap_loop_init;
wire    ap_block_pp0_stage2;
reg   [31:0] max_index_fu_92;
wire   [31:0] max_index_1_fu_351_p3;
reg   [7:0] j_fu_96;
reg   [30:0] i_fu_100;
reg   [39:0] indvar_flatten_fu_104;
wire   [30:0] add_ln24_1_fu_222_p2;
wire   [0:0] trunc_ln34_fu_253_p1;
wire   [2:0] trunc_ln34_2_fu_257_p3;
wire   [7:0] zext_ln34_1_fu_270_p1;
wire   [32:0] shl_ln1_fu_290_p3;
wire   [63:0] zext_ln34_2_fu_297_p1;
wire   [63:0] add_ln34_fu_301_p2;
wire   [0:0] icmp_ln28_fu_338_p2;
wire   [31:0] zext_ln28_fu_348_p1;
wire   [31:0] select_ln24_1_fu_331_p3;
wire   [5:0] shl_ln34_2_fu_364_p3;
wire   [63:0] zext_ln34_3_fu_371_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter23_stage0;
reg    ap_idle_pp0_0to22;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0_1to24;
reg    ap_done_pending_pp0;
reg    ap_block_pp0_stage1_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

topKQueryScores_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage2),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter23_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage2)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter24 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to22 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter23_stage0))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to22 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter23_stage0))) begin
        ap_loop_exit_ready_pp0_iter11_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to22 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter23_stage0))) begin
        ap_loop_exit_ready_pp0_iter12_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to22 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter23_stage0))) begin
        ap_loop_exit_ready_pp0_iter13_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to22 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter23_stage0))) begin
        ap_loop_exit_ready_pp0_iter14_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to22 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter23_stage0))) begin
        ap_loop_exit_ready_pp0_iter15_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to22 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter23_stage0))) begin
        ap_loop_exit_ready_pp0_iter16_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to22 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter23_stage0))) begin
        ap_loop_exit_ready_pp0_iter17_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to22 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter23_stage0))) begin
        ap_loop_exit_ready_pp0_iter18_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to22 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter23_stage0))) begin
        ap_loop_exit_ready_pp0_iter19_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to22 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter23_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to22 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter23_stage0))) begin
        ap_loop_exit_ready_pp0_iter20_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to22 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter23_stage0))) begin
        ap_loop_exit_ready_pp0_iter21_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to22 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter23_stage0))) begin
        ap_loop_exit_ready_pp0_iter22_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to22 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter23_stage0))) begin
        ap_loop_exit_ready_pp0_iter23_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to22 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter23_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to22 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter23_stage0))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to22 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter23_stage0))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to22 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter23_stage0))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to22 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter23_stage0))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to22 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter23_stage0))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to22 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter23_stage0))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to22 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter23_stage0))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_fu_100 <= 31'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln24_reg_451 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        i_fu_100 <= select_ln24_3_reg_471;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_fu_104 <= 40'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln24_reg_451 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        indvar_flatten_fu_104 <= add_ln24_reg_455;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        j_fu_96 <= 8'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln24_reg_451 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        j_fu_96 <= add_ln27_reg_482;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            max_index_fu_92 <= 32'd4294967295;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln24_reg_451 == 1'd0))) begin
            max_index_fu_92 <= max_index_1_fu_351_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            max_score_fu_88 <= 32'd4294967295;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln24_reg_451 == 1'd0))) begin
            max_score_fu_88 <= max_score_1_fu_342_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add_ln24_reg_455 <= add_ln24_fu_196_p2;
        icmp_ln24_reg_451 <= icmp_ln24_fu_191_p2;
        icmp_ln24_reg_451_pp0_iter10_reg <= icmp_ln24_reg_451_pp0_iter9_reg;
        icmp_ln24_reg_451_pp0_iter11_reg <= icmp_ln24_reg_451_pp0_iter10_reg;
        icmp_ln24_reg_451_pp0_iter12_reg <= icmp_ln24_reg_451_pp0_iter11_reg;
        icmp_ln24_reg_451_pp0_iter13_reg <= icmp_ln24_reg_451_pp0_iter12_reg;
        icmp_ln24_reg_451_pp0_iter14_reg <= icmp_ln24_reg_451_pp0_iter13_reg;
        icmp_ln24_reg_451_pp0_iter15_reg <= icmp_ln24_reg_451_pp0_iter14_reg;
        icmp_ln24_reg_451_pp0_iter16_reg <= icmp_ln24_reg_451_pp0_iter15_reg;
        icmp_ln24_reg_451_pp0_iter17_reg <= icmp_ln24_reg_451_pp0_iter16_reg;
        icmp_ln24_reg_451_pp0_iter18_reg <= icmp_ln24_reg_451_pp0_iter17_reg;
        icmp_ln24_reg_451_pp0_iter19_reg <= icmp_ln24_reg_451_pp0_iter18_reg;
        icmp_ln24_reg_451_pp0_iter1_reg <= icmp_ln24_reg_451;
        icmp_ln24_reg_451_pp0_iter20_reg <= icmp_ln24_reg_451_pp0_iter19_reg;
        icmp_ln24_reg_451_pp0_iter21_reg <= icmp_ln24_reg_451_pp0_iter20_reg;
        icmp_ln24_reg_451_pp0_iter22_reg <= icmp_ln24_reg_451_pp0_iter21_reg;
        icmp_ln24_reg_451_pp0_iter2_reg <= icmp_ln24_reg_451_pp0_iter1_reg;
        icmp_ln24_reg_451_pp0_iter3_reg <= icmp_ln24_reg_451_pp0_iter2_reg;
        icmp_ln24_reg_451_pp0_iter4_reg <= icmp_ln24_reg_451_pp0_iter3_reg;
        icmp_ln24_reg_451_pp0_iter5_reg <= icmp_ln24_reg_451_pp0_iter4_reg;
        icmp_ln24_reg_451_pp0_iter6_reg <= icmp_ln24_reg_451_pp0_iter5_reg;
        icmp_ln24_reg_451_pp0_iter7_reg <= icmp_ln24_reg_451_pp0_iter6_reg;
        icmp_ln24_reg_451_pp0_iter8_reg <= icmp_ln24_reg_451_pp0_iter7_reg;
        icmp_ln24_reg_451_pp0_iter9_reg <= icmp_ln24_reg_451_pp0_iter8_reg;
        ifzero_reg_487_pp0_iter10_reg <= ifzero_reg_487_pp0_iter9_reg;
        ifzero_reg_487_pp0_iter11_reg <= ifzero_reg_487_pp0_iter10_reg;
        ifzero_reg_487_pp0_iter12_reg <= ifzero_reg_487_pp0_iter11_reg;
        ifzero_reg_487_pp0_iter13_reg <= ifzero_reg_487_pp0_iter12_reg;
        ifzero_reg_487_pp0_iter14_reg <= ifzero_reg_487_pp0_iter13_reg;
        ifzero_reg_487_pp0_iter15_reg <= ifzero_reg_487_pp0_iter14_reg;
        ifzero_reg_487_pp0_iter16_reg <= ifzero_reg_487_pp0_iter15_reg;
        ifzero_reg_487_pp0_iter17_reg <= ifzero_reg_487_pp0_iter16_reg;
        ifzero_reg_487_pp0_iter18_reg <= ifzero_reg_487_pp0_iter17_reg;
        ifzero_reg_487_pp0_iter19_reg <= ifzero_reg_487_pp0_iter18_reg;
        ifzero_reg_487_pp0_iter1_reg <= ifzero_reg_487;
        ifzero_reg_487_pp0_iter20_reg <= ifzero_reg_487_pp0_iter19_reg;
        ifzero_reg_487_pp0_iter21_reg <= ifzero_reg_487_pp0_iter20_reg;
        ifzero_reg_487_pp0_iter22_reg <= ifzero_reg_487_pp0_iter21_reg;
        ifzero_reg_487_pp0_iter23_reg <= ifzero_reg_487_pp0_iter22_reg;
        ifzero_reg_487_pp0_iter2_reg <= ifzero_reg_487_pp0_iter1_reg;
        ifzero_reg_487_pp0_iter3_reg <= ifzero_reg_487_pp0_iter2_reg;
        ifzero_reg_487_pp0_iter4_reg <= ifzero_reg_487_pp0_iter3_reg;
        ifzero_reg_487_pp0_iter5_reg <= ifzero_reg_487_pp0_iter4_reg;
        ifzero_reg_487_pp0_iter6_reg <= ifzero_reg_487_pp0_iter5_reg;
        ifzero_reg_487_pp0_iter7_reg <= ifzero_reg_487_pp0_iter6_reg;
        ifzero_reg_487_pp0_iter8_reg <= ifzero_reg_487_pp0_iter7_reg;
        ifzero_reg_487_pp0_iter9_reg <= ifzero_reg_487_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln24_fu_191_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add_ln27_reg_482 <= add_ln27_fu_241_p2;
        icmp_ln27_reg_460 <= icmp_ln27_fu_208_p2;
        ifzero_reg_487 <= ifzero_fu_247_p2;
        select_ln24_3_reg_471 <= select_ln24_3_fu_228_p3;
        select_ln24_reg_466 <= select_ln24_fu_214_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ifzero_fu_247_p2 == 1'd1) & (icmp_ln24_fu_191_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add_ln34_1_reg_491 <= add_ln34_1_fu_265_p2;
        shl_ln34_reg_496 <= shl_ln34_fu_274_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln24_reg_451 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        query_scores_load_reg_507 <= query_scores_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln24_reg_451 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        select_ln24_2_reg_501 <= select_ln24_2_fu_283_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ifzero_reg_487 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln24_reg_451 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        shl_ln34_1_reg_518 <= shl_ln34_1_fu_375_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ifzero_reg_487 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln24_reg_451 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        trunc_ln1_reg_513 <= {{add_ln34_fu_301_p2[63:3]}};
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln24_reg_451 == 1'd1) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b1) & (icmp_ln24_reg_451_pp0_iter22_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter23_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter23_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter23_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (~((ap_loop_exit_ready_pp0_iter23_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter22_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter21_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter20_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter19_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter18_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter17_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter16_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter15_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter14_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter13_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter12_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter11_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter10_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter9_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter7_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter6_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter5_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter4_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b0) & (ap_loop_exit_ready == 1'b0))) begin
        ap_done_pending_pp0 = 1'b1;
    end else begin
        ap_done_pending_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to22 = 1'b1;
    end else begin
        ap_idle_pp0_0to22 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to24 = 1'b1;
    end else begin
        ap_idle_pp0_1to24 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (ifzero_reg_487 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln24_reg_451 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        gmem_blk_n_AW = m_axi_gmem_AWREADY;
    end else begin
        gmem_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (ifzero_reg_487_pp0_iter23_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        gmem_blk_n_B = m_axi_gmem_BVALID;
    end else begin
        gmem_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (ifzero_reg_487 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        gmem_blk_n_W = m_axi_gmem_WREADY;
    end else begin
        gmem_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op138_writereq_state4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        m_axi_gmem_AWVALID = 1'b1;
    end else begin
        m_axi_gmem_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (ifzero_reg_487_pp0_iter23_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        m_axi_gmem_BREADY = 1'b1;
    end else begin
        m_axi_gmem_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (ifzero_reg_487 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        m_axi_gmem_WVALID = 1'b1;
    end else begin
        m_axi_gmem_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        query_scores_address0 = zext_ln34_fu_359_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        query_scores_address0 = trunc_ln28_cast_fu_236_p1;
    end else begin
        query_scores_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        query_scores_ce0 = 1'b1;
    end else begin
        query_scores_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (ifzero_reg_487 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln24_reg_451 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        query_scores_we0 = 1'b1;
    end else begin
        query_scores_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if (((ap_idle_pp0_0to22 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter23_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_done_pending_pp0 == 1'b0) & (ap_idle_pp0_1to24 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln24_1_fu_222_p2 = (i_fu_100 + 31'd1);

assign add_ln24_fu_196_p2 = (indvar_flatten_fu_104 + 40'd1);

assign add_ln27_fu_241_p2 = (select_ln24_fu_214_p3 + 8'd1);

assign add_ln34_1_fu_265_p2 = (trunc_ln34_2_fu_257_p3 + trunc_ln34_1);

assign add_ln34_fu_301_p2 = (zext_ln34_2_fu_297_p1 + topK_indices);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter24 == 1'b1) & (ifzero_reg_487_pp0_iter23_reg == 1'd1) & (m_axi_gmem_BVALID == 1'b0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state4_io)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter24 == 1'b1) & (ifzero_reg_487_pp0_iter23_reg == 1'd1) & (m_axi_gmem_BVALID == 1'b0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state4_io)));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state5_io));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state5_io));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage2_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage2_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage2_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage1_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage2_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage1_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage2_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage1_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage2_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage1_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage2_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage1_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage2_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage1_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage2_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage1_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage2_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_io = ((ap_predicate_op138_writereq_state4 == 1'b1) & (m_axi_gmem_AWREADY == 1'b0));
end

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage1_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage2_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage1_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage2_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage1_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage2_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage1_iter19 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_io = ((ifzero_reg_487 == 1'd1) & (m_axi_gmem_WREADY == 1'b0));
end

assign ap_block_state5_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage2_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage1_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage2_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage1_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp0_stage2_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp0_stage1_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp0_stage2_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp0_stage1_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp0_stage2_iter23 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state73_pp0_stage0_iter24 = ((ifzero_reg_487_pp0_iter23_reg == 1'd1) & (m_axi_gmem_BVALID == 1'b0));
end

assign ap_block_state7_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage2;

always @ (*) begin
    ap_predicate_op138_writereq_state4 = ((ifzero_reg_487 == 1'd1) & (icmp_ln24_reg_451 == 1'd0));
end

assign icmp_ln24_fu_191_p2 = ((indvar_flatten_fu_104 == mul_ln34) ? 1'b1 : 1'b0);

assign icmp_ln27_fu_208_p2 = ((j_fu_96 == 8'd238) ? 1'b1 : 1'b0);

assign icmp_ln28_fu_338_p2 = (($signed(select_ln24_2_reg_501) < $signed(query_scores_load_reg_507)) ? 1'b1 : 1'b0);

assign ifzero_fu_247_p2 = ((add_ln27_fu_241_p2 == 8'd238) ? 1'b1 : 1'b0);

assign m_axi_gmem_ARADDR = 64'd0;

assign m_axi_gmem_ARBURST = 2'd0;

assign m_axi_gmem_ARCACHE = 4'd0;

assign m_axi_gmem_ARID = 1'd0;

assign m_axi_gmem_ARLEN = 32'd0;

assign m_axi_gmem_ARLOCK = 2'd0;

assign m_axi_gmem_ARPROT = 3'd0;

assign m_axi_gmem_ARQOS = 4'd0;

assign m_axi_gmem_ARREGION = 4'd0;

assign m_axi_gmem_ARSIZE = 3'd0;

assign m_axi_gmem_ARUSER = 1'd0;

assign m_axi_gmem_ARVALID = 1'b0;

assign m_axi_gmem_AWADDR = sext_ln34_fu_381_p1;

assign m_axi_gmem_AWBURST = 2'd0;

assign m_axi_gmem_AWCACHE = 4'd0;

assign m_axi_gmem_AWID = 1'd0;

assign m_axi_gmem_AWLEN = 32'd1;

assign m_axi_gmem_AWLOCK = 2'd0;

assign m_axi_gmem_AWPROT = 3'd0;

assign m_axi_gmem_AWQOS = 4'd0;

assign m_axi_gmem_AWREGION = 4'd0;

assign m_axi_gmem_AWSIZE = 3'd0;

assign m_axi_gmem_AWUSER = 1'd0;

assign m_axi_gmem_RREADY = 1'b0;

assign m_axi_gmem_WDATA = shl_ln34_1_reg_518;

assign m_axi_gmem_WID = 1'd0;

assign m_axi_gmem_WLAST = 1'b0;

assign m_axi_gmem_WSTRB = shl_ln34_reg_496;

assign m_axi_gmem_WUSER = 1'd0;

assign max_index_1_fu_351_p3 = ((icmp_ln28_fu_338_p2[0:0] == 1'b1) ? zext_ln28_fu_348_p1 : select_ln24_1_fu_331_p3);

assign max_score_1_fu_342_p3 = ((icmp_ln28_fu_338_p2[0:0] == 1'b1) ? query_scores_load_reg_507 : select_ln24_2_reg_501);

assign query_scores_d0 = 32'd4294967295;

assign select_ln24_1_fu_331_p3 = ((icmp_ln27_reg_460[0:0] == 1'b1) ? 32'd4294967295 : max_index_fu_92);

assign select_ln24_2_fu_283_p3 = ((icmp_ln27_reg_460[0:0] == 1'b1) ? 32'd4294967295 : max_score_fu_88);

assign select_ln24_3_fu_228_p3 = ((icmp_ln27_fu_208_p2[0:0] == 1'b1) ? add_ln24_1_fu_222_p2 : i_fu_100);

assign select_ln24_fu_214_p3 = ((icmp_ln27_fu_208_p2[0:0] == 1'b1) ? 8'd0 : j_fu_96);

assign sext_ln34_fu_381_p1 = $signed(trunc_ln1_reg_513);

assign shl_ln1_fu_290_p3 = {{select_ln24_3_reg_471}, {2'd0}};

assign shl_ln34_1_fu_375_p2 = zext_ln34_fu_359_p1 << zext_ln34_3_fu_371_p1;

assign shl_ln34_2_fu_364_p3 = {{add_ln34_1_reg_491}, {3'd0}};

assign shl_ln34_fu_274_p2 = 8'd15 << zext_ln34_1_fu_270_p1;

assign trunc_ln28_cast_fu_236_p1 = select_ln24_fu_214_p3;

assign trunc_ln34_2_fu_257_p3 = {{trunc_ln34_fu_253_p1}, {2'd0}};

assign trunc_ln34_fu_253_p1 = select_ln24_3_fu_228_p3[0:0];

assign zext_ln28_fu_348_p1 = select_ln24_reg_466;

assign zext_ln34_1_fu_270_p1 = add_ln34_1_fu_265_p2;

assign zext_ln34_2_fu_297_p1 = shl_ln1_fu_290_p3;

assign zext_ln34_3_fu_371_p1 = shl_ln34_2_fu_364_p3;

assign zext_ln34_fu_359_p1 = max_index_1_fu_351_p3;

endmodule //topKQueryScores_topKQueryScores_Pipeline_VITIS_LOOP_24_3_VITIS_LOOP_27_4
