// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module topKQueryScores_topKQueryScores_Pipeline_VITIS_LOOP_16_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RFIFONUM,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        fs_matrix,
        conv,
        conv_1,
        conv_2,
        query_scores_address0,
        query_scores_ce0,
        query_scores_we0,
        query_scores_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 3'd1;
parameter    ap_ST_fsm_pp0_stage1 = 3'd2;
parameter    ap_ST_fsm_pp0_stage2 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [63:0] m_axi_gmem_AWADDR;
output  [0:0] m_axi_gmem_AWID;
output  [31:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [0:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [63:0] m_axi_gmem_WDATA;
output  [7:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [0:0] m_axi_gmem_WID;
output  [0:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [63:0] m_axi_gmem_ARADDR;
output  [0:0] m_axi_gmem_ARID;
output  [31:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [0:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [63:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [0:0] m_axi_gmem_RID;
input  [8:0] m_axi_gmem_RFIFONUM;
input  [0:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [0:0] m_axi_gmem_BID;
input  [0:0] m_axi_gmem_BUSER;
input  [63:0] fs_matrix;
input  [63:0] conv;
input  [63:0] conv_1;
input  [63:0] conv_2;
output  [7:0] query_scores_address0;
output   query_scores_ce0;
output   query_scores_we0;
output  [31:0] query_scores_d0;

reg ap_idle;
reg m_axi_gmem_ARVALID;
reg[63:0] m_axi_gmem_ARADDR;
reg m_axi_gmem_RREADY;
reg query_scores_ce0;
reg query_scores_we0;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter35;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
reg   [0:0] icmp_ln16_reg_487;
reg    ap_block_state3_io;
wire    ap_block_state6_pp0_stage2_iter1;
wire    ap_block_state9_pp0_stage2_iter2;
wire    ap_block_state12_pp0_stage2_iter3;
wire    ap_block_state15_pp0_stage2_iter4;
wire    ap_block_state18_pp0_stage2_iter5;
wire    ap_block_state21_pp0_stage2_iter6;
wire    ap_block_state24_pp0_stage2_iter7;
wire    ap_block_state27_pp0_stage2_iter8;
wire    ap_block_state30_pp0_stage2_iter9;
wire    ap_block_state33_pp0_stage2_iter10;
wire    ap_block_state36_pp0_stage2_iter11;
wire    ap_block_state39_pp0_stage2_iter12;
wire    ap_block_state42_pp0_stage2_iter13;
wire    ap_block_state45_pp0_stage2_iter14;
wire    ap_block_state48_pp0_stage2_iter15;
wire    ap_block_state51_pp0_stage2_iter16;
wire    ap_block_state54_pp0_stage2_iter17;
wire    ap_block_state57_pp0_stage2_iter18;
wire    ap_block_state60_pp0_stage2_iter19;
wire    ap_block_state63_pp0_stage2_iter20;
wire    ap_block_state66_pp0_stage2_iter21;
wire    ap_block_state69_pp0_stage2_iter22;
reg    ap_block_state72_pp0_stage2_iter23;
wire    ap_block_state75_pp0_stage2_iter24;
wire    ap_block_state78_pp0_stage2_iter25;
wire    ap_block_state81_pp0_stage2_iter26;
wire    ap_block_state84_pp0_stage2_iter27;
wire    ap_block_state87_pp0_stage2_iter28;
wire    ap_block_state90_pp0_stage2_iter29;
wire    ap_block_state93_pp0_stage2_iter30;
wire    ap_block_state96_pp0_stage2_iter31;
wire    ap_block_state99_pp0_stage2_iter32;
wire    ap_block_state102_pp0_stage2_iter33;
wire    ap_block_state105_pp0_stage2_iter34;
reg    ap_block_pp0_stage2_subdone;
reg    ap_condition_exit_pp0_iter0_stage2;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    gmem_blk_n_AR;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
reg    gmem_blk_n_R;
wire    ap_block_pp0_stage2;
wire    ap_block_pp0_stage0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state7_pp0_stage0_iter2;
wire    ap_block_state10_pp0_stage0_iter3;
wire    ap_block_state13_pp0_stage0_iter4;
wire    ap_block_state16_pp0_stage0_iter5;
wire    ap_block_state19_pp0_stage0_iter6;
wire    ap_block_state22_pp0_stage0_iter7;
wire    ap_block_state25_pp0_stage0_iter8;
wire    ap_block_state28_pp0_stage0_iter9;
wire    ap_block_state31_pp0_stage0_iter10;
wire    ap_block_state34_pp0_stage0_iter11;
wire    ap_block_state37_pp0_stage0_iter12;
wire    ap_block_state40_pp0_stage0_iter13;
wire    ap_block_state43_pp0_stage0_iter14;
wire    ap_block_state46_pp0_stage0_iter15;
wire    ap_block_state49_pp0_stage0_iter16;
wire    ap_block_state52_pp0_stage0_iter17;
wire    ap_block_state55_pp0_stage0_iter18;
wire    ap_block_state58_pp0_stage0_iter19;
wire    ap_block_state61_pp0_stage0_iter20;
wire    ap_block_state64_pp0_stage0_iter21;
wire    ap_block_state67_pp0_stage0_iter22;
wire    ap_block_state70_pp0_stage0_iter23;
reg    ap_block_state73_pp0_stage0_iter24;
wire    ap_block_state76_pp0_stage0_iter25;
wire    ap_block_state79_pp0_stage0_iter26;
wire    ap_block_state82_pp0_stage0_iter27;
wire    ap_block_state85_pp0_stage0_iter28;
wire    ap_block_state88_pp0_stage0_iter29;
wire    ap_block_state91_pp0_stage0_iter30;
wire    ap_block_state94_pp0_stage0_iter31;
wire    ap_block_state97_pp0_stage0_iter32;
wire    ap_block_state100_pp0_stage0_iter33;
wire    ap_block_state103_pp0_stage0_iter34;
wire    ap_block_state106_pp0_stage0_iter35;
reg    ap_block_pp0_stage0_11001;
reg   [7:0] i_1_reg_481;
reg   [7:0] i_1_reg_481_pp0_iter1_reg;
reg   [7:0] i_1_reg_481_pp0_iter2_reg;
reg   [7:0] i_1_reg_481_pp0_iter3_reg;
reg   [7:0] i_1_reg_481_pp0_iter4_reg;
reg   [7:0] i_1_reg_481_pp0_iter5_reg;
reg   [7:0] i_1_reg_481_pp0_iter6_reg;
reg   [7:0] i_1_reg_481_pp0_iter7_reg;
reg   [7:0] i_1_reg_481_pp0_iter8_reg;
reg   [7:0] i_1_reg_481_pp0_iter9_reg;
reg   [7:0] i_1_reg_481_pp0_iter10_reg;
reg   [7:0] i_1_reg_481_pp0_iter11_reg;
reg   [7:0] i_1_reg_481_pp0_iter12_reg;
reg   [7:0] i_1_reg_481_pp0_iter13_reg;
reg   [7:0] i_1_reg_481_pp0_iter14_reg;
reg   [7:0] i_1_reg_481_pp0_iter15_reg;
reg   [7:0] i_1_reg_481_pp0_iter16_reg;
reg   [7:0] i_1_reg_481_pp0_iter17_reg;
reg   [7:0] i_1_reg_481_pp0_iter18_reg;
reg   [7:0] i_1_reg_481_pp0_iter19_reg;
reg   [7:0] i_1_reg_481_pp0_iter20_reg;
reg   [7:0] i_1_reg_481_pp0_iter21_reg;
reg   [7:0] i_1_reg_481_pp0_iter22_reg;
reg   [7:0] i_1_reg_481_pp0_iter23_reg;
reg   [7:0] i_1_reg_481_pp0_iter24_reg;
reg   [7:0] i_1_reg_481_pp0_iter25_reg;
reg   [7:0] i_1_reg_481_pp0_iter26_reg;
reg   [7:0] i_1_reg_481_pp0_iter27_reg;
reg   [7:0] i_1_reg_481_pp0_iter28_reg;
reg   [7:0] i_1_reg_481_pp0_iter29_reg;
reg   [7:0] i_1_reg_481_pp0_iter30_reg;
reg   [7:0] i_1_reg_481_pp0_iter31_reg;
reg   [7:0] i_1_reg_481_pp0_iter32_reg;
reg   [7:0] i_1_reg_481_pp0_iter33_reg;
reg   [7:0] i_1_reg_481_pp0_iter34_reg;
wire   [0:0] icmp_ln16_fu_202_p2;
reg   [0:0] icmp_ln16_reg_487_pp0_iter1_reg;
reg   [0:0] icmp_ln16_reg_487_pp0_iter2_reg;
reg   [0:0] icmp_ln16_reg_487_pp0_iter3_reg;
reg   [0:0] icmp_ln16_reg_487_pp0_iter4_reg;
reg   [0:0] icmp_ln16_reg_487_pp0_iter5_reg;
reg   [0:0] icmp_ln16_reg_487_pp0_iter6_reg;
reg   [0:0] icmp_ln16_reg_487_pp0_iter7_reg;
reg   [0:0] icmp_ln16_reg_487_pp0_iter8_reg;
reg   [0:0] icmp_ln16_reg_487_pp0_iter9_reg;
reg   [0:0] icmp_ln16_reg_487_pp0_iter10_reg;
reg   [0:0] icmp_ln16_reg_487_pp0_iter11_reg;
reg   [0:0] icmp_ln16_reg_487_pp0_iter12_reg;
reg   [0:0] icmp_ln16_reg_487_pp0_iter13_reg;
reg   [0:0] icmp_ln16_reg_487_pp0_iter14_reg;
reg   [0:0] icmp_ln16_reg_487_pp0_iter15_reg;
reg   [0:0] icmp_ln16_reg_487_pp0_iter16_reg;
reg   [0:0] icmp_ln16_reg_487_pp0_iter17_reg;
reg   [0:0] icmp_ln16_reg_487_pp0_iter18_reg;
reg   [0:0] icmp_ln16_reg_487_pp0_iter19_reg;
reg   [0:0] icmp_ln16_reg_487_pp0_iter20_reg;
reg   [0:0] icmp_ln16_reg_487_pp0_iter21_reg;
reg   [0:0] icmp_ln16_reg_487_pp0_iter22_reg;
reg   [0:0] icmp_ln16_reg_487_pp0_iter23_reg;
reg   [0:0] icmp_ln16_reg_487_pp0_iter24_reg;
reg   [0:0] icmp_ln16_reg_487_pp0_iter25_reg;
reg   [0:0] icmp_ln16_reg_487_pp0_iter26_reg;
reg   [0:0] icmp_ln16_reg_487_pp0_iter27_reg;
reg   [0:0] icmp_ln16_reg_487_pp0_iter28_reg;
reg   [0:0] icmp_ln16_reg_487_pp0_iter29_reg;
reg   [0:0] icmp_ln16_reg_487_pp0_iter30_reg;
reg   [0:0] icmp_ln16_reg_487_pp0_iter31_reg;
reg   [0:0] icmp_ln16_reg_487_pp0_iter32_reg;
reg   [0:0] icmp_ln16_reg_487_pp0_iter33_reg;
wire   [63:0] add_ln19_fu_220_p2;
reg   [63:0] add_ln19_reg_491;
reg   [60:0] trunc_ln19_3_reg_497;
wire    ap_block_state2_pp0_stage1_iter0;
reg    ap_block_state2_io;
wire    ap_block_state5_pp0_stage1_iter1;
wire    ap_block_state8_pp0_stage1_iter2;
wire    ap_block_state11_pp0_stage1_iter3;
wire    ap_block_state14_pp0_stage1_iter4;
wire    ap_block_state17_pp0_stage1_iter5;
wire    ap_block_state20_pp0_stage1_iter6;
wire    ap_block_state23_pp0_stage1_iter7;
wire    ap_block_state26_pp0_stage1_iter8;
wire    ap_block_state29_pp0_stage1_iter9;
wire    ap_block_state32_pp0_stage1_iter10;
wire    ap_block_state35_pp0_stage1_iter11;
wire    ap_block_state38_pp0_stage1_iter12;
wire    ap_block_state41_pp0_stage1_iter13;
wire    ap_block_state44_pp0_stage1_iter14;
wire    ap_block_state47_pp0_stage1_iter15;
wire    ap_block_state50_pp0_stage1_iter16;
wire    ap_block_state53_pp0_stage1_iter17;
wire    ap_block_state56_pp0_stage1_iter18;
wire    ap_block_state59_pp0_stage1_iter19;
wire    ap_block_state62_pp0_stage1_iter20;
wire    ap_block_state65_pp0_stage1_iter21;
wire    ap_block_state68_pp0_stage1_iter22;
wire    ap_block_state71_pp0_stage1_iter23;
reg    ap_block_state74_pp0_stage1_iter24;
wire    ap_block_state77_pp0_stage1_iter25;
wire    ap_block_state80_pp0_stage1_iter26;
wire    ap_block_state83_pp0_stage1_iter27;
wire    ap_block_state86_pp0_stage1_iter28;
wire    ap_block_state89_pp0_stage1_iter29;
wire    ap_block_state92_pp0_stage1_iter30;
wire    ap_block_state95_pp0_stage1_iter31;
wire    ap_block_state98_pp0_stage1_iter32;
wire    ap_block_state101_pp0_stage1_iter33;
wire    ap_block_state104_pp0_stage1_iter34;
reg    ap_block_pp0_stage1_11001;
reg   [60:0] trunc_ln19_6_reg_508;
reg   [60:0] trunc_ln19_9_reg_513;
reg    ap_block_pp0_stage2_11001;
reg   [63:0] gmem_addr_read_reg_530;
wire   [63:0] bitcast_ln19_fu_306_p1;
reg   [63:0] gmem_addr_1_read_reg_540;
wire   [63:0] bitcast_ln19_1_fu_310_p1;
reg   [63:0] gmem_addr_2_read_reg_550;
wire   [63:0] bitcast_ln19_2_fu_314_p1;
wire   [63:0] grp_fu_190_p2;
reg   [63:0] mul_reg_560;
reg   [63:0] mul_1_reg_565;
reg   [63:0] mul_1_reg_565_pp0_iter27_reg;
reg   [63:0] mul_1_reg_565_pp0_iter28_reg;
reg   [63:0] mul_2_reg_570;
reg   [63:0] mul_2_reg_570_pp0_iter28_reg;
reg   [63:0] mul_2_reg_570_pp0_iter29_reg;
reg   [63:0] mul_2_reg_570_pp0_iter30_reg;
reg   [63:0] mul_2_reg_570_pp0_iter31_reg;
wire   [63:0] grp_fu_185_p2;
reg   [63:0] product_1_reg_575;
reg   [63:0] product_1_1_reg_580;
reg   [63:0] product_1_2_reg_585;
reg   [0:0] p_Result_s_reg_590;
wire   [31:0] val_fu_435_p3;
reg   [31:0] val_reg_595;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_block_pp0_stage0_subdone;
wire   [63:0] i_cast2_fu_443_p1;
wire  signed [63:0] sext_ln19_fu_236_p1;
wire  signed [63:0] sext_ln19_1_fu_281_p1;
wire  signed [63:0] sext_ln19_2_fu_296_p1;
reg   [7:0] i_fu_108;
wire   [7:0] add_ln16_fu_276_p2;
wire    ap_loop_init;
reg   [7:0] ap_sig_allocacmp_i_1;
reg   [63:0] grp_fu_185_p0;
reg   [63:0] grp_fu_185_p1;
reg   [63:0] grp_fu_190_p0;
reg   [63:0] grp_fu_190_p1;
wire   [10:0] shl_ln_fu_208_p3;
wire   [63:0] zext_ln19_fu_216_p1;
wire   [63:0] add_ln19_1_fu_246_p2;
wire   [63:0] add_ln19_2_fu_261_p2;
wire   [63:0] data_V_fu_318_p1;
wire   [51:0] p_Result_1_fu_339_p1;
wire   [53:0] mantissa_fu_343_p4;
wire   [10:0] xs_exp_V_fu_329_p4;
wire   [11:0] zext_ln515_fu_357_p1;
wire   [11:0] add_ln515_fu_361_p2;
wire   [10:0] sub_ln1512_fu_375_p2;
wire   [0:0] isNeg_fu_367_p3;
wire  signed [11:0] sext_ln1512_fu_381_p1;
wire   [11:0] ush_fu_385_p3;
wire  signed [31:0] sext_ln1488_fu_393_p1;
wire   [136:0] zext_ln15_fu_353_p1;
wire   [136:0] zext_ln1488_fu_397_p1;
wire   [136:0] r_V_fu_401_p2;
wire   [0:0] tmp_fu_413_p3;
wire   [136:0] r_V_1_fu_407_p2;
wire   [31:0] zext_ln818_fu_421_p1;
wire   [31:0] tmp_3_fu_425_p4;
wire   [31:0] result_V_2_fu_447_p2;
reg    grp_fu_185_ce;
reg    grp_fu_190_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter34_stage0;
reg    ap_idle_pp0_0to33;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg    ap_loop_exit_ready_pp0_iter24_reg;
reg    ap_loop_exit_ready_pp0_iter25_reg;
reg    ap_loop_exit_ready_pp0_iter26_reg;
reg    ap_loop_exit_ready_pp0_iter27_reg;
reg    ap_loop_exit_ready_pp0_iter28_reg;
reg    ap_loop_exit_ready_pp0_iter29_reg;
reg    ap_loop_exit_ready_pp0_iter30_reg;
reg    ap_loop_exit_ready_pp0_iter31_reg;
reg    ap_loop_exit_ready_pp0_iter32_reg;
reg    ap_loop_exit_ready_pp0_iter33_reg;
reg    ap_loop_exit_ready_pp0_iter34_reg;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0_1to35;
reg    ap_block_pp0_stage1_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

topKQueryScores_dadd_64ns_64ns_64_8_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadd_64ns_64ns_64_8_full_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_185_p0),
    .din1(grp_fu_185_p1),
    .ce(grp_fu_185_ce),
    .dout(grp_fu_185_p2)
);

topKQueryScores_dmul_64ns_64ns_64_8_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_8_max_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_190_p0),
    .din1(grp_fu_190_p1),
    .ce(grp_fu_190_ce),
    .dout(grp_fu_190_p2)
);

topKQueryScores_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage2),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter34_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage2)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter35 == 1'b1))) begin
            ap_enable_reg_pp0_iter35 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to33 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter34_stage0))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to33 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter34_stage0))) begin
        ap_loop_exit_ready_pp0_iter11_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to33 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter34_stage0))) begin
        ap_loop_exit_ready_pp0_iter12_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to33 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter34_stage0))) begin
        ap_loop_exit_ready_pp0_iter13_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to33 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter34_stage0))) begin
        ap_loop_exit_ready_pp0_iter14_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to33 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter34_stage0))) begin
        ap_loop_exit_ready_pp0_iter15_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to33 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter34_stage0))) begin
        ap_loop_exit_ready_pp0_iter16_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to33 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter34_stage0))) begin
        ap_loop_exit_ready_pp0_iter17_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to33 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter34_stage0))) begin
        ap_loop_exit_ready_pp0_iter18_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to33 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter34_stage0))) begin
        ap_loop_exit_ready_pp0_iter19_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to33 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter34_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to33 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter34_stage0))) begin
        ap_loop_exit_ready_pp0_iter20_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to33 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter34_stage0))) begin
        ap_loop_exit_ready_pp0_iter21_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to33 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter34_stage0))) begin
        ap_loop_exit_ready_pp0_iter22_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to33 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter34_stage0))) begin
        ap_loop_exit_ready_pp0_iter23_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to33 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter34_stage0))) begin
        ap_loop_exit_ready_pp0_iter24_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to33 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter34_stage0))) begin
        ap_loop_exit_ready_pp0_iter25_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to33 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter34_stage0))) begin
        ap_loop_exit_ready_pp0_iter26_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter26_reg <= ap_loop_exit_ready_pp0_iter25_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to33 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter34_stage0))) begin
        ap_loop_exit_ready_pp0_iter27_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter27_reg <= ap_loop_exit_ready_pp0_iter26_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to33 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter34_stage0))) begin
        ap_loop_exit_ready_pp0_iter28_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter28_reg <= ap_loop_exit_ready_pp0_iter27_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to33 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter34_stage0))) begin
        ap_loop_exit_ready_pp0_iter29_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter29_reg <= ap_loop_exit_ready_pp0_iter28_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to33 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter34_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to33 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter34_stage0))) begin
        ap_loop_exit_ready_pp0_iter30_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter30_reg <= ap_loop_exit_ready_pp0_iter29_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to33 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter34_stage0))) begin
        ap_loop_exit_ready_pp0_iter31_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter31_reg <= ap_loop_exit_ready_pp0_iter30_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to33 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter34_stage0))) begin
        ap_loop_exit_ready_pp0_iter32_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter32_reg <= ap_loop_exit_ready_pp0_iter31_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to33 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter34_stage0))) begin
        ap_loop_exit_ready_pp0_iter33_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter33_reg <= ap_loop_exit_ready_pp0_iter32_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to33 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter34_stage0))) begin
        ap_loop_exit_ready_pp0_iter34_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter34_reg <= ap_loop_exit_ready_pp0_iter33_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to33 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter34_stage0))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to33 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter34_stage0))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to33 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter34_stage0))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to33 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter34_stage0))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to33 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter34_stage0))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to33 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter34_stage0))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to33 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter34_stage0))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_fu_108 <= 8'd0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln16_reg_487 == 1'd0))) begin
        i_fu_108 <= add_ln16_fu_276_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln16_fu_202_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln19_reg_491 <= add_ln19_fu_220_p2;
        trunc_ln19_3_reg_497 <= {{add_ln19_fu_220_p2[63:3]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        gmem_addr_1_read_reg_540 <= m_axi_gmem_RDATA;
        i_1_reg_481 <= ap_sig_allocacmp_i_1;
        i_1_reg_481_pp0_iter10_reg <= i_1_reg_481_pp0_iter9_reg;
        i_1_reg_481_pp0_iter11_reg <= i_1_reg_481_pp0_iter10_reg;
        i_1_reg_481_pp0_iter12_reg <= i_1_reg_481_pp0_iter11_reg;
        i_1_reg_481_pp0_iter13_reg <= i_1_reg_481_pp0_iter12_reg;
        i_1_reg_481_pp0_iter14_reg <= i_1_reg_481_pp0_iter13_reg;
        i_1_reg_481_pp0_iter15_reg <= i_1_reg_481_pp0_iter14_reg;
        i_1_reg_481_pp0_iter16_reg <= i_1_reg_481_pp0_iter15_reg;
        i_1_reg_481_pp0_iter17_reg <= i_1_reg_481_pp0_iter16_reg;
        i_1_reg_481_pp0_iter18_reg <= i_1_reg_481_pp0_iter17_reg;
        i_1_reg_481_pp0_iter19_reg <= i_1_reg_481_pp0_iter18_reg;
        i_1_reg_481_pp0_iter1_reg <= i_1_reg_481;
        i_1_reg_481_pp0_iter20_reg <= i_1_reg_481_pp0_iter19_reg;
        i_1_reg_481_pp0_iter21_reg <= i_1_reg_481_pp0_iter20_reg;
        i_1_reg_481_pp0_iter22_reg <= i_1_reg_481_pp0_iter21_reg;
        i_1_reg_481_pp0_iter23_reg <= i_1_reg_481_pp0_iter22_reg;
        i_1_reg_481_pp0_iter24_reg <= i_1_reg_481_pp0_iter23_reg;
        i_1_reg_481_pp0_iter25_reg <= i_1_reg_481_pp0_iter24_reg;
        i_1_reg_481_pp0_iter26_reg <= i_1_reg_481_pp0_iter25_reg;
        i_1_reg_481_pp0_iter27_reg <= i_1_reg_481_pp0_iter26_reg;
        i_1_reg_481_pp0_iter28_reg <= i_1_reg_481_pp0_iter27_reg;
        i_1_reg_481_pp0_iter29_reg <= i_1_reg_481_pp0_iter28_reg;
        i_1_reg_481_pp0_iter2_reg <= i_1_reg_481_pp0_iter1_reg;
        i_1_reg_481_pp0_iter30_reg <= i_1_reg_481_pp0_iter29_reg;
        i_1_reg_481_pp0_iter31_reg <= i_1_reg_481_pp0_iter30_reg;
        i_1_reg_481_pp0_iter32_reg <= i_1_reg_481_pp0_iter31_reg;
        i_1_reg_481_pp0_iter33_reg <= i_1_reg_481_pp0_iter32_reg;
        i_1_reg_481_pp0_iter34_reg <= i_1_reg_481_pp0_iter33_reg;
        i_1_reg_481_pp0_iter3_reg <= i_1_reg_481_pp0_iter2_reg;
        i_1_reg_481_pp0_iter4_reg <= i_1_reg_481_pp0_iter3_reg;
        i_1_reg_481_pp0_iter5_reg <= i_1_reg_481_pp0_iter4_reg;
        i_1_reg_481_pp0_iter6_reg <= i_1_reg_481_pp0_iter5_reg;
        i_1_reg_481_pp0_iter7_reg <= i_1_reg_481_pp0_iter6_reg;
        i_1_reg_481_pp0_iter8_reg <= i_1_reg_481_pp0_iter7_reg;
        i_1_reg_481_pp0_iter9_reg <= i_1_reg_481_pp0_iter8_reg;
        icmp_ln16_reg_487 <= icmp_ln16_fu_202_p2;
        icmp_ln16_reg_487_pp0_iter10_reg <= icmp_ln16_reg_487_pp0_iter9_reg;
        icmp_ln16_reg_487_pp0_iter11_reg <= icmp_ln16_reg_487_pp0_iter10_reg;
        icmp_ln16_reg_487_pp0_iter12_reg <= icmp_ln16_reg_487_pp0_iter11_reg;
        icmp_ln16_reg_487_pp0_iter13_reg <= icmp_ln16_reg_487_pp0_iter12_reg;
        icmp_ln16_reg_487_pp0_iter14_reg <= icmp_ln16_reg_487_pp0_iter13_reg;
        icmp_ln16_reg_487_pp0_iter15_reg <= icmp_ln16_reg_487_pp0_iter14_reg;
        icmp_ln16_reg_487_pp0_iter16_reg <= icmp_ln16_reg_487_pp0_iter15_reg;
        icmp_ln16_reg_487_pp0_iter17_reg <= icmp_ln16_reg_487_pp0_iter16_reg;
        icmp_ln16_reg_487_pp0_iter18_reg <= icmp_ln16_reg_487_pp0_iter17_reg;
        icmp_ln16_reg_487_pp0_iter19_reg <= icmp_ln16_reg_487_pp0_iter18_reg;
        icmp_ln16_reg_487_pp0_iter1_reg <= icmp_ln16_reg_487;
        icmp_ln16_reg_487_pp0_iter20_reg <= icmp_ln16_reg_487_pp0_iter19_reg;
        icmp_ln16_reg_487_pp0_iter21_reg <= icmp_ln16_reg_487_pp0_iter20_reg;
        icmp_ln16_reg_487_pp0_iter22_reg <= icmp_ln16_reg_487_pp0_iter21_reg;
        icmp_ln16_reg_487_pp0_iter23_reg <= icmp_ln16_reg_487_pp0_iter22_reg;
        icmp_ln16_reg_487_pp0_iter24_reg <= icmp_ln16_reg_487_pp0_iter23_reg;
        icmp_ln16_reg_487_pp0_iter25_reg <= icmp_ln16_reg_487_pp0_iter24_reg;
        icmp_ln16_reg_487_pp0_iter26_reg <= icmp_ln16_reg_487_pp0_iter25_reg;
        icmp_ln16_reg_487_pp0_iter27_reg <= icmp_ln16_reg_487_pp0_iter26_reg;
        icmp_ln16_reg_487_pp0_iter28_reg <= icmp_ln16_reg_487_pp0_iter27_reg;
        icmp_ln16_reg_487_pp0_iter29_reg <= icmp_ln16_reg_487_pp0_iter28_reg;
        icmp_ln16_reg_487_pp0_iter2_reg <= icmp_ln16_reg_487_pp0_iter1_reg;
        icmp_ln16_reg_487_pp0_iter30_reg <= icmp_ln16_reg_487_pp0_iter29_reg;
        icmp_ln16_reg_487_pp0_iter31_reg <= icmp_ln16_reg_487_pp0_iter30_reg;
        icmp_ln16_reg_487_pp0_iter32_reg <= icmp_ln16_reg_487_pp0_iter31_reg;
        icmp_ln16_reg_487_pp0_iter33_reg <= icmp_ln16_reg_487_pp0_iter32_reg;
        icmp_ln16_reg_487_pp0_iter3_reg <= icmp_ln16_reg_487_pp0_iter2_reg;
        icmp_ln16_reg_487_pp0_iter4_reg <= icmp_ln16_reg_487_pp0_iter3_reg;
        icmp_ln16_reg_487_pp0_iter5_reg <= icmp_ln16_reg_487_pp0_iter4_reg;
        icmp_ln16_reg_487_pp0_iter6_reg <= icmp_ln16_reg_487_pp0_iter5_reg;
        icmp_ln16_reg_487_pp0_iter7_reg <= icmp_ln16_reg_487_pp0_iter6_reg;
        icmp_ln16_reg_487_pp0_iter8_reg <= icmp_ln16_reg_487_pp0_iter7_reg;
        icmp_ln16_reg_487_pp0_iter9_reg <= icmp_ln16_reg_487_pp0_iter8_reg;
        mul_2_reg_570_pp0_iter28_reg <= mul_2_reg_570;
        mul_2_reg_570_pp0_iter29_reg <= mul_2_reg_570_pp0_iter28_reg;
        mul_2_reg_570_pp0_iter30_reg <= mul_2_reg_570_pp0_iter29_reg;
        mul_2_reg_570_pp0_iter31_reg <= mul_2_reg_570_pp0_iter30_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        gmem_addr_2_read_reg_550 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        gmem_addr_read_reg_530 <= m_axi_gmem_RDATA;
        mul_1_reg_565_pp0_iter27_reg <= mul_1_reg_565;
        mul_1_reg_565_pp0_iter28_reg <= mul_1_reg_565_pp0_iter27_reg;
        p_Result_s_reg_590 <= data_V_fu_318_p1[32'd63];
        val_reg_595 <= val_fu_435_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mul_1_reg_565 <= grp_fu_190_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter27 == 1'b1))) begin
        mul_2_reg_570 <= grp_fu_190_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        mul_reg_560 <= grp_fu_190_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter31 == 1'b1))) begin
        product_1_1_reg_580 <= grp_fu_185_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter34 == 1'b1))) begin
        product_1_2_reg_585 <= grp_fu_185_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter29 == 1'b1))) begin
        product_1_reg_575 <= grp_fu_185_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln16_reg_487 == 1'd0))) begin
        trunc_ln19_6_reg_508 <= {{add_ln19_1_fu_246_p2[63:3]}};
        trunc_ln19_9_reg_513 <= {{add_ln19_2_fu_261_p2[63:3]}};
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln16_reg_487 == 1'd1))) begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln16_reg_487_pp0_iter33_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter34 == 1'b1))) begin
        ap_condition_exit_pp0_iter34_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter34_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter34_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0_0to33 = 1'b1;
    end else begin
        ap_idle_pp0_0to33 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0_1to35 = 1'b1;
    end else begin
        ap_idle_pp0_1to35 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_1 = 8'd0;
    end else begin
        ap_sig_allocacmp_i_1 = i_fu_108;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln16_reg_487 == 1'd0)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln16_reg_487 == 1'd0)))) begin
        gmem_blk_n_AR = m_axi_gmem_ARREADY;
    end else begin
        gmem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        gmem_blk_n_R = m_axi_gmem_RVALID;
    end else begin
        gmem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_185_ce = 1'b1;
    end else begin
        grp_fu_185_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        grp_fu_185_p0 = product_1_1_reg_580;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter29 == 1'b1))) begin
        grp_fu_185_p0 = product_1_reg_575;
    end else if (((ap_enable_reg_pp0_iter26 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_185_p0 = mul_reg_560;
    end else begin
        grp_fu_185_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        grp_fu_185_p1 = mul_2_reg_570_pp0_iter31_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter29 == 1'b1))) begin
        grp_fu_185_p1 = mul_1_reg_565_pp0_iter28_reg;
    end else if (((ap_enable_reg_pp0_iter26 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_185_p1 = 64'd0;
    end else begin
        grp_fu_185_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_190_ce = 1'b1;
    end else begin
        grp_fu_190_ce = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter24 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_fu_190_p0 = conv_2;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_190_p0 = conv_1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_190_p0 = conv;
        end else begin
            grp_fu_190_p0 = 'bx;
        end
    end else begin
        grp_fu_190_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter24 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_fu_190_p1 = bitcast_ln19_2_fu_314_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_190_p1 = bitcast_ln19_1_fu_310_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_190_p1 = bitcast_ln19_fu_306_p1;
        end else begin
            grp_fu_190_p1 = 'bx;
        end
    end else begin
        grp_fu_190_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        m_axi_gmem_ARADDR = sext_ln19_2_fu_296_p1;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln16_reg_487 == 1'd0))) begin
        m_axi_gmem_ARADDR = sext_ln19_1_fu_281_p1;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln16_reg_487 == 1'd0))) begin
        m_axi_gmem_ARADDR = sext_ln19_fu_236_p1;
    end else begin
        m_axi_gmem_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln16_reg_487 == 1'd0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln16_reg_487 == 1'd0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        m_axi_gmem_ARVALID = 1'b1;
    end else begin
        m_axi_gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        m_axi_gmem_RREADY = 1'b1;
    end else begin
        m_axi_gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter35 == 1'b1))) begin
        query_scores_ce0 = 1'b1;
    end else begin
        query_scores_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter35 == 1'b1))) begin
        query_scores_we0 = 1'b1;
    end else begin
        query_scores_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if (((ap_idle_pp0_0to33 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter34_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to35 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln16_fu_276_p2 = (i_1_reg_481 + 8'd1);

assign add_ln19_1_fu_246_p2 = (add_ln19_reg_491 + 64'd1904);

assign add_ln19_2_fu_261_p2 = (add_ln19_reg_491 + 64'd3808);

assign add_ln19_fu_220_p2 = (zext_ln19_fu_216_p1 + fs_matrix);

assign add_ln515_fu_361_p2 = ($signed(zext_ln515_fu_357_p1) + $signed(12'd3073));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_gmem_ARREADY == 1'b0)) | ((ap_enable_reg_pp0_iter24 == 1'b1) & (m_axi_gmem_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_gmem_ARREADY == 1'b0)) | ((ap_enable_reg_pp0_iter24 == 1'b1) & (m_axi_gmem_RVALID == 1'b0)));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((ap_enable_reg_pp0_iter24 == 1'b1) & (m_axi_gmem_RVALID == 1'b0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state2_io)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((ap_enable_reg_pp0_iter24 == 1'b1) & (m_axi_gmem_RVALID == 1'b0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state2_io)));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_11001 = (((ap_enable_reg_pp0_iter23 == 1'b1) & (m_axi_gmem_RVALID == 1'b0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state3_io)));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = (((ap_enable_reg_pp0_iter23 == 1'b1) & (m_axi_gmem_RVALID == 1'b0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state3_io)));
end

assign ap_block_state100_pp0_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state101_pp0_stage1_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state102_pp0_stage2_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state103_pp0_stage0_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state104_pp0_stage1_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state105_pp0_stage2_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state106_pp0_stage0_iter35 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage2_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage2_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage2_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage1_iter9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_io = ((icmp_ln16_reg_487 == 1'd0) & (m_axi_gmem_ARREADY == 1'b0));
end

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage2_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage1_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage2_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage1_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage2_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage1_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage2_iter12 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_io = ((icmp_ln16_reg_487 == 1'd0) & (m_axi_gmem_ARREADY == 1'b0));
end

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage1_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage2_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage1_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage2_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage1_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage2_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage1_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage2_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage1_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage2_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage1_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage2_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage1_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage2_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage1_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage2_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage1_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp0_stage2_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp0_stage1_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp0_stage2_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp0_stage1_iter23 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state72_pp0_stage2_iter23 = (m_axi_gmem_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state73_pp0_stage0_iter24 = (m_axi_gmem_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state74_pp0_stage1_iter24 = (m_axi_gmem_RVALID == 1'b0);
end

assign ap_block_state75_pp0_stage2_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state76_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state77_pp0_stage1_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state78_pp0_stage2_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state79_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state80_pp0_stage1_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state81_pp0_stage2_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state82_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state83_pp0_stage1_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state84_pp0_stage2_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state85_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state86_pp0_stage1_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state87_pp0_stage2_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state88_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state89_pp0_stage1_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state90_pp0_stage2_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state91_pp0_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state92_pp0_stage1_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state93_pp0_stage2_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state94_pp0_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state95_pp0_stage1_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state96_pp0_stage2_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state97_pp0_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state98_pp0_stage1_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state99_pp0_stage2_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage2;

assign bitcast_ln19_1_fu_310_p1 = gmem_addr_1_read_reg_540;

assign bitcast_ln19_2_fu_314_p1 = gmem_addr_2_read_reg_550;

assign bitcast_ln19_fu_306_p1 = gmem_addr_read_reg_530;

assign data_V_fu_318_p1 = product_1_2_reg_585;

assign i_cast2_fu_443_p1 = i_1_reg_481_pp0_iter34_reg;

assign icmp_ln16_fu_202_p2 = ((ap_sig_allocacmp_i_1 == 8'd238) ? 1'b1 : 1'b0);

assign isNeg_fu_367_p3 = add_ln515_fu_361_p2[32'd11];

assign m_axi_gmem_ARBURST = 2'd0;

assign m_axi_gmem_ARCACHE = 4'd0;

assign m_axi_gmem_ARID = 1'd0;

assign m_axi_gmem_ARLEN = 32'd1;

assign m_axi_gmem_ARLOCK = 2'd0;

assign m_axi_gmem_ARPROT = 3'd0;

assign m_axi_gmem_ARQOS = 4'd0;

assign m_axi_gmem_ARREGION = 4'd0;

assign m_axi_gmem_ARSIZE = 3'd0;

assign m_axi_gmem_ARUSER = 1'd0;

assign m_axi_gmem_AWADDR = 64'd0;

assign m_axi_gmem_AWBURST = 2'd0;

assign m_axi_gmem_AWCACHE = 4'd0;

assign m_axi_gmem_AWID = 1'd0;

assign m_axi_gmem_AWLEN = 32'd0;

assign m_axi_gmem_AWLOCK = 2'd0;

assign m_axi_gmem_AWPROT = 3'd0;

assign m_axi_gmem_AWQOS = 4'd0;

assign m_axi_gmem_AWREGION = 4'd0;

assign m_axi_gmem_AWSIZE = 3'd0;

assign m_axi_gmem_AWUSER = 1'd0;

assign m_axi_gmem_AWVALID = 1'b0;

assign m_axi_gmem_BREADY = 1'b0;

assign m_axi_gmem_WDATA = 64'd0;

assign m_axi_gmem_WID = 1'd0;

assign m_axi_gmem_WLAST = 1'b0;

assign m_axi_gmem_WSTRB = 8'd0;

assign m_axi_gmem_WUSER = 1'd0;

assign m_axi_gmem_WVALID = 1'b0;

assign mantissa_fu_343_p4 = {{{{1'd1}, {p_Result_1_fu_339_p1}}}, {1'd0}};

assign p_Result_1_fu_339_p1 = data_V_fu_318_p1[51:0];

assign query_scores_address0 = i_cast2_fu_443_p1;

assign query_scores_d0 = ((p_Result_s_reg_590[0:0] == 1'b1) ? result_V_2_fu_447_p2 : val_reg_595);

assign r_V_1_fu_407_p2 = zext_ln15_fu_353_p1 << zext_ln1488_fu_397_p1;

assign r_V_fu_401_p2 = zext_ln15_fu_353_p1 >> zext_ln1488_fu_397_p1;

assign result_V_2_fu_447_p2 = (32'd0 - val_reg_595);

assign sext_ln1488_fu_393_p1 = $signed(ush_fu_385_p3);

assign sext_ln1512_fu_381_p1 = $signed(sub_ln1512_fu_375_p2);

assign sext_ln19_1_fu_281_p1 = $signed(trunc_ln19_6_reg_508);

assign sext_ln19_2_fu_296_p1 = $signed(trunc_ln19_9_reg_513);

assign sext_ln19_fu_236_p1 = $signed(trunc_ln19_3_reg_497);

assign shl_ln_fu_208_p3 = {{ap_sig_allocacmp_i_1}, {3'd0}};

assign sub_ln1512_fu_375_p2 = (11'd1023 - xs_exp_V_fu_329_p4);

assign tmp_3_fu_425_p4 = {{r_V_1_fu_407_p2[84:53]}};

assign tmp_fu_413_p3 = r_V_fu_401_p2[32'd53];

assign ush_fu_385_p3 = ((isNeg_fu_367_p3[0:0] == 1'b1) ? sext_ln1512_fu_381_p1 : add_ln515_fu_361_p2);

assign val_fu_435_p3 = ((isNeg_fu_367_p3[0:0] == 1'b1) ? zext_ln818_fu_421_p1 : tmp_3_fu_425_p4);

assign xs_exp_V_fu_329_p4 = {{data_V_fu_318_p1[62:52]}};

assign zext_ln1488_fu_397_p1 = $unsigned(sext_ln1488_fu_393_p1);

assign zext_ln15_fu_353_p1 = mantissa_fu_343_p4;

assign zext_ln19_fu_216_p1 = shl_ln_fu_208_p3;

assign zext_ln515_fu_357_p1 = xs_exp_V_fu_329_p4;

assign zext_ln818_fu_421_p1 = tmp_fu_413_p3;

endmodule //topKQueryScores_topKQueryScores_Pipeline_VITIS_LOOP_16_1
